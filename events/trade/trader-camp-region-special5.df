uses paul/region-layout.df

"events/inner/arcadeloc.df" $load

"
:map 1
:tags traderarcade  
:scriptA arcademachine -1 movey 
:scriptB cashcounter -1 movey 0.2 movex
:scriptC traderarcade-npc -0.5 movey 0.4 movex
:scriptD traderarcade-shoot -1 movey 
:scriptE traderarcade-rp -1 movey 
:scriptF clawmachine -1 movey
:scriptG traderarcade-fire -1 movey
:size 14 9 
:off 8 0 
:tiles 
22222222222000
23333333332222
2AAEFDFGAA3332
21111111111112
2111111111BC12
21111111111112
21111111111112
22222222222222
33333333333333
"
value TRADERARCADE
TRADERARCADE $parse-rooms

locdef{

location: traderarcade
		max-rooms: 1
		entry-tags: traderarcade
		pre-script: yall-theme
		script: yall-theme
		post-script: 
		
		room-choice: traderarcade
			room-weight: 10
			room-count: 1
			room-script: ndx 
			room-post-script:
			filter-only

}

cyoa{

// Shooting Arcade Machine

0 value traderarcade-shoot+

: traderarcade-amt traderarcade-shoot+ 2 * 2 + ;
: traderarcade-pay? trunk-food traderarcade-amt 1 - > ;
: traderarcade-pay traderarcade-amt -1 * trunk-food+ ;

cyoa-choice: traderarcade-mech
	($ "HEY! LEAVE THE ARCADE MACHINE ALONE, YOU NERD!" bbold $) text!
	"The arcade worker is not happy." +crtext
	($ cname .. " flinches." $) +crtext 
	mechanicREV badfx
;

cyoa-choice: traderarcade-shoot-go
	($ cname .. " continues the arcade game. The screen is full of moving shapes. It's really impossible to tell what's going on, and yet " .. che .. " feels completely engrossed.
	The game ends in a flash, yet it is burned into " .. cname .. "'s mind. There's still no clue on what the game is even called." $) cyoa-text!
		shootingREV shooting++ goodfx traderarcade-pay ' traderarcade-shoot+ ++
;

cyoa: traderarcade-shoot
	"Mystery Arcade Game" cyoa-title!
	picon!
	($ "This arcade machine has its coin slot replaced with a big drop bin that says " .. "PUT FOOD IN HERE" rbold .. " above it.
	It's not even clear what game it's supposed to be, the only thing on screen is a message that says: " $) cyoa-text!
	($ "CONTINUE: " fbold .. traderarcade-amt rainbold .. " FOOD" rainbold $) +text
	+cr foodamt
	chumany? not if
		($ pname .. " stares at the arcade machine in confusion. Animals mostly don't play video games, with some exceptions. For example, flatworms can play walking simulators, even though they can't understand the sublime genius of the narration." $) +crtext
	then;
		traderarcade-pay? not if
			"You can't afford this." +crtext 
		then;
	choice( "Leave it for now" )choice
	pchar charchoice( " plays for " .. traderarcade-amt .. " food" )choice: traderarcade-shoot-go
	cmechanic+ if
		pchar charchoice( " dismantles the arcade machine" )choice: traderarcade-mech
	then
;

// Road Punchers Machine

0 value rp-saguts
0 value rp-bryu

cyoa-choice: traderarcade-rp-done2
	rp-saguts 0 > rp-bryu 0 > and if
		clear-cyoa
		"This arcade machine suddenly shorts out!" text!
		"NO! WHAT DID YOU DOOOOOOOOOO?" bbold +crtext
		"The arcade worker is less happy than even previously thought possible." +crtext badfx
	then 
;

: traderarcade-rp-done
	 // -10 add-food pchar .loot-to-trunk 
	 -10 trunk-food+ rp-saguts 0 > rp-bryu 0 > and if traderarcade-rp-done2 then 
;

cyoa-bridge: rp_recruit
	nearest .character@ choosechar cchar to recruitee ricon clear-cyoa
	($ cname .. " is ready to test his strength on the road of punching." $) text!
	recruitee .strengthREV recruitee .fitnessREV
	cchar .name@ "BRYU" $= if "HADOOK! HADOOK! KADOOSHIN'!" else "I-GER! I-GER! I-GER UPPERCUT!" then fbold +crtext recruit-yesno
	0.25 cchar .ai.wander_chance! 0 nearest .unseen!	
;

: rp_pop_share
	lt mission{ .smokepoof }
	0.01 lt .character@ .ai.wander_chance! 0 lt .character@ .ai.loot_chance! 1 lt .unseen!
	-30 lt .fade!
	90 lt .stun!
	180 lt .aim_angle! goodfx
	' rp_recruit cyoa!
;

: bryu_pop
	new-npc lt .character@ .bryuify rp_pop_share
;

: saguts_pop
	new-npc lt .character@ .sagutsify rp_pop_share
;

: traderarcade-bryu	bryu_pop ' rp-bryu ++ traderarcade-rp-done ;
: traderarcade-saguts saguts_pop ' rp-saguts ++ traderarcade-rp-done ;

cyoa: traderarcade-rp
	"Road Punchers 2: The New Punchers" cyoa-title!
	picon!
	($ "This is an old arcade machine for the famous classic fighting game: " .. "ROAD PUNCHERS" bbold .. "
	This machine has been converted to run on food instead of quarters. It's 10 food to pick a character. For reasons unknown, it looks like almost all the characters are grayed out..." $) cyoa-text!
	+cr foodamt
		trunk-food 10 < if
			"You don't have the food needed to play!" +crtext 
		then;
	choice( "Leave it for now" )choice
	rp-saguts 1 < if
		choice( "Pick SAGUTS - 10 food" )choice: traderarcade-saguts
	then
	rp-bryu 1 < if
		choice( "Pick BRYU - 10 food" )choice: traderarcade-bryu
	then
;
	
// Fireproofing Arcade

cyoa-choice: traderarcade-fire-go
	"Forged in the Fire" cyoa-title!
	($ "On putting in the food and touching the button, the arcade machine " .. "IMMEDIATELY EXPLODES!" fbold .. " Real Mature!" $) cyoa-text!
	cchar statmod{ .fireproof? } not if
		($ cname .. " gets burnt up in a big fireball! However, " .. che .. " is alive and only mildly irritated.
		" .. cname .. "'s skin feels strangely cool." bbold $) +crtext
		cchar statmod{ .fireproof } sting-- bitefx
	else
		($ cname .. " gets engulfed in a fireball! Of course, this doesn't do anything.
		" .. cname .. " feels pretty smug about this." bbold $) +crtext
		goodfx morale2+
	then
	-10 trunk-food+ clear-cyoa deleteme
		choice( "OW! DANG IT!" )choice
;

cyoa: traderarcade-fire
	"Strange Arcade Machine" cyoa-title!
	picon!
	($ "This is an new looking arcade machine. There are giant letters onscreen that spell out: " .. "FIRE EXPLODERS" rainbold .. "
	This machine has been converted to run on food, so the coin slot is enormous. There's only one button. Instead of any sort of gameplay, the machine displays a roaring fire behind the title..." $) cyoa-text!
	+cr foodamt
		trunk-food 10 < if
			"You don't have the food needed to play!" +crtext 
		then;
	choice( "Leave it for now" )choice
		pchar charchoice( " plays for 10 food" )choice: traderarcade-fire-go
;


// NPC

cyoa: traderarcade
	"Arcade Worker" cyoa-title!
	"I'm bringing arcades back! They're going to get really popular now that the internet has been destroyed.
	More arcade machines are coming. I just need to convert them to run on food instead of coins before I bring them in." bbold text!
;

}

roomgen{

: tradercade-box
	gasarcademachine
	' arcade-events events!
	5 lt .timer!
;

: traderarcade-shoot
	tradercade-box cyoa{ ' traderarcade-shoot cyoa! }
;

: traderarcade-rp
	tradercade-box cyoa{ ' traderarcade-rp cyoa! }
;

: traderarcade-fire
	tradercade-box cyoa{ ' traderarcade-fire cyoa! }
;

: .arcadify args( chara )
	"Arcader" <- chara .name!
;

: traderarcade-npc
	still-npc .arcadify cyoa{ ' traderarcade cyoa! } ;
	// regiondef{ ' trader-event lt .events! 1 lt .timer! }
}

map{ regiondef{

trade-camp-reset

: bldg tanchor!
	"traderarcade" $picklocid addloc 
		prefab{
		BLINKY "THE LAST " .. FLASHY .. "ARCADE" .. sign-text!
		0 0 0 sign-bg!
		0 1 0 sign-border!
		1 1 1 sign-fg!
		1 sign-glow!
		0 3 rnd 8 4 shop }
	
;
	
0 value gbx
0 value gby
0 value gbx2
0 value gby2

' plotpave >defer ft

: pt
	xyp.xy ft // Plot the current floor by default

	xyp.i char < = if xyp.xy to gby to gbx then;
	xyp.i char > = if gbx 1- gby xyp.xy swap 1+ swap gravellot then;
	xyp.i char ( = if xyp.xy to gby2 to gbx2 then;
	xyp.i char ) = if gbx2 1- gby2 xyp.xy swap 1+ swap gravellot then;
		
	xyp.i char P = if ' plotpave to ft xyp.xy ft then;
	
	xyp.i char x = if ' plotdirt to ft then;
	xyp.i char G = if ' plotgrass to ft xyp.xy ft then;
	xyp.i char $ = if xyp.xy grassedge then;
	xyp.i char { = if dirtstart then;
	xyp.i char } = if dirtend then;

	xyp.i char t = if pictable2 lt-here 8 rdrift then;		
	xyp.i char w = if pine lt-here drift then;
	xyp.i char V = if tradercarhere then;
	xyp.i char f = if campfirehere then;
		
	xyp.i char W = if trader-weapon-buyer then;
	xyp.i char T = if traderhere then;
	xyp.i char Z = if tnomey-spawn then;
	xyp.i char g = if trader-food-for-gas then;
	
	xyp.i char @ = if xyp.xy bldg then;
;

"
P........................
(........................
.........................
.........................
.........................
.........................
.........................
....W....@.........g..Z.)
.........................
.........................
.........................
.........................
.........................
.........................
........................."
constant maplayout

: plotmap
	0 -1 maplayout xyplot: pt
;

: site-setup
	1 no_time!
	17 19 rnd o'clock

	' plotdirt to ft

	30 %chance if 0 0.2 frnd weather! -1 2 frnd wind_force! else -1 1 frnd wind_force! then

	plotmap
	mission{ no-edge-spawns }

	// Put char and chars in middle of map
	25 %mv-up
	45 %chars-up
	
	map{ street-junk }
;

region: specialcamp-3
	w: maplayout layoutw
	h: maplayout layouth

	trade-mode

	post-script: site-setup

} }
