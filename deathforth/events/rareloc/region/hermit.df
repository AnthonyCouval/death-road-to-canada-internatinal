
"../deathforth/rooms/cabin.txt" $load-rooms
"../deathforth/rooms/city.txt" $add-rooms

cyoa{

cyoa-choice: cabin1-hermitchat-wisdom
	ricon
	($ "Der Eremit lehrt " .. pname .. "  'The Secret " .. "'GRIZZLED HERMIT STARKE!" rbold .. "'	JETZT GEH VERDAMMT NOCHMAL WEG UND KOMM NIE WIEDER!" pbold $) cyoa-text! goodfx
		pchar .vitality++ pchar .shooting++
;

cyoa-choice: cabin1-hermitchat-recruit
	ricon
	pchar charming? if
		($ "'Der Einsiedler wird von " .. pname .. "'`s Reizen erweicht!	" .. "Well, I'm a hermit, but you know what? You're alright!" pbold $) cyoa-text! goodfx
		recruit-yesno
	else
		($ "'Naturlich werde ich nicht mit euch kommen! Ich hatte es gut, bevor ihr die Horde mitgebracht habt!'" pbold .. "der Eremit wird nicht beeinflusst von " .. pname .. "s Reize." $) cyoa-text! badfx
	then
;

cyoa-bridge: cabin1-hermitchat-coolit
	ricon
	cool-it-7 if
		($ "'Der Eremit kuhlt es sofort! Er teilt seine Patronenmunition mit Ihnen, zusammen mit seinem Eremitenwissen. Er bietet auch an, dem Team beizutreten!" .. pname .. " 'Ich war uberrascht, dass das funktioniert hat!'" $) cyoa-text!
		pchar .morale2+ goodfx cooled-it 40 add-shell pchar .shooting++ pchar .vitality++
		recruit-yesno
	else cool-it++
		($ "0x0000000000000000000000000000000000000000000000000000000000000000," .. pname .. "s Empfindlichkeiten sind verletzt!" $) cyoa-text!
		pchar .morale2- badfx
	then
;

cyoa: cabin1-hermitchat
	ricon 1 nearest .character@ .party!
	image-angry-hermit
	"Der wutendste Eremit" cyoa-title!
	region.zombie_basespawn@ 0 > if
		($ "'der Eremit ist schon sehr wutend." .. "'	DU HAST DENN ALLESE ZOMBIES GEBRACHT, NICHT WIRD ICH?		LAÃŸ MICH IN MEINEM HAUS RUHEN!" pbold .. "'	Vielleicht versuche es mal spater, wenn es weniger Zombies gibt." $) cyoa-text!
	else
		0 nearest .character@ .party!
		($ "'der Eremit ist etwas weniger wutend jetzt, aber nicht sehr viel." .. "'	WAS DARAUF ANGEBOTEN?		ICH HABE Viele wichtige Eremiten Sachen zu tun!" pbold $) cyoa-text!
		choice( "'Frage dem Eremiten um Weisheit" )choice: cabin1-hermitchat-wisdom
		choice( "'Bitten Sie ihn, mit Ihnen zu kommen" )choice: cabin1-hermitchat-recruit
		choice( "'Sagt dem Eremiten Beruhige dich" fcoolit )choice: cabin1-hermitchat-coolit
		clear-cyoa 
	then
;

}

: .hermitify
	2 over .specialtype!
	5 over .shooting!
	4 over .strength!
	4 over .fitness!
	4 over .vitality!
	4 over .health!
	"'Einsiedler" over .name!
	0 over .female!
	0 over .attitude!
	0 over .composure!
	0.88 over .ai.threat_threshold!
	"'war uberrascht, dass er sich dem Team anschloss, da er Einsiedler war und das." over .job!
	WEAPON_SHOTGUN over .weapona!
	WEAPON_FIRE over .weaponb!
	40 LOOT_SHOTGUN_SHELL 2 pick .lootamt!
	0.1 over .ai.wander_chance!
	dup to recruitee
	dup cyoa{ ' cabin1-hermitchat cyoa! } drop drop
;

: hermit
	new-npc 0 lt .leaveok! lt .character@ .hermitify
;

: cabinloot 
	looseloot
	30 %chance if 30 60 rnd sgas chainsaw .scatter then
;

location
		tags: cabin-hermit
		max-rooms: 1
		entry-tags: randcabin
		script: set-theme-cabin 
		pre-script: set-theme-cabin
		post-script: 0 %zombs
		
		room-choice: randcabin
			room-weight: 80
			room-count: 1
			room-script: nad
			room-post-script: hermit cabinloot

regiondef{

	 region: forest cabin
		w: 20 // 35
		h: 15 // 35
		script: timeofday o'clock

		no-prefab // Don't build that default city
		on-foot
		
		: make-a-cabin map{
			"'hermit-hutte" $picklocid // Pick a cabin location definition if it exists ( tags -- locdefid )
			addloc // Add a location using the resulting location definition  ( locdefid -- locid )
			prefab{ 10 cabin } // Create a cabin of 5 width using the new location ( locid w -- <build cabin centered in upper part of map> )
			}
		;

		: setup-cabin-forest
			map{ grass make-a-cabin 5 pines }
			mission{ siege-start-dig 100 left-spawn 100 bottom-spawn 0 top-spawn 0 right-spawn }
		;

		post-script: setup-cabin-forest 5sdiff %zombs
}
