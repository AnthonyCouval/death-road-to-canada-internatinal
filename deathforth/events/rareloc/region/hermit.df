
"../deathforth/rooms/cabin.txt" $load-rooms
"../deathforth/rooms/city.txt" $add-rooms

cyoa{

cyoa-choice: cabin1-hermitchat-wisdom
	ricon
	($ "Der Einsiedler lehrt " .. pname .. "  ein paar sue Schietipps und verrat auch die Geheimnisse von " .. "GRAUER EINSIEDLER HARTE!" rbold .. "	JETZT GEH RAUS UND KOMME NIE WIEDER!" pbold $) cyoa-text! goodfx
		pchar .vitality++ pchar .shooting++
;

cyoa-choice: cabin1-hermitchat-recruit
	ricon
	pchar charming? if
		($ "Der Einsiedler wird von " .. pname .. "'s Charme beeinflusst!" .. "'Nun, ich bin ein Einsiedler, aber weit du was? Du bist in Ordnung!" pbold $) cyoa-text! goodfx
		recruit-yesno
	else
		($ "'Naturlich werde ich mich dir nicht anschlieen! Mir ging es gut bevor du die Horde mitgebracht hast!" pbold .. "'		Der Einsiedler wird nicht von " .. pname .. "'s Charme beeinflusst." $) cyoa-text! badfx
	then
;

cyoa-bridge: cabin1-hermitchat-coolit
	ricon
	cool-it-7 if
		($ "Der Einsiedler kuhlt es sofort ab! Er teilt seinen Vorrat an Schrotflintenpatronen mit dir, zusammen mit seinem Einsiedlerwissen. Er bietet auch an, dem Team beizutreten!		" .. pname .. "  war uberrascht dass das funktioniert hat!" $) cyoa-text!
		pchar .morale2+ goodfx cooled-it 40 add-shell pchar .shooting++ pchar .vitality++
		recruit-yesno
	else cool-it++
		($ "Der Einsiedler kuhlt es nicht ab. Stattdessen lasst er eine Tirade aus Fluchen los.		" .. pname .. "''s Sensibilitaten sind beleidigt!" $) cyoa-text!
		pchar .morale2- badfx
	then
;

cyoa: cabin1-hermitchat
	ricon 1 nearest .character@ .party!
	image-angry-hermit
	"Der wutendste Einsiedler" cyoa-title!
	region.zombie_basespawn@ 0 > if
		($ "Der Einsiedler ist bereits wutend." .. "'		DU HAST ALLE DIESE ZOMBIES MITGEBRACHT, NICHT WAHR?		RAUS AUS MEINEM HAUS!" pbold .. "'		Versuchen Sie es vielleicht noch einmal wenn weniger Zombies da sind." $) cyoa-text!
	else
		0 nearest .character@ .party!
		($ "Der Einsiedler ist jetzt etwas weniger wutend, aber nicht viel." .. "'		Na? Was ist es?		Ich habe eine Menge wichtiger Einsiedlersachen zu erledigen!" pbold $) cyoa-text!
		choice( "Frage nach Einsiedlerweisheit" )choice: cabin1-hermitchat-wisdom
		choice( "Bitte ihn sich dir anzuschlieen" )choice: cabin1-hermitchat-recruit
		choice( "'Sag dem Einsiedler er solle sich abkuhlen" fcoolit )choice: cabin1-hermitchat-coolit
		clear-cyoa 
	then
;

}

: .hermitify
	2 over .specialtype!
	5 over .shooting!
	4 over .strength!
	4 over .fitness!
	4 over .vitality!
	4 over .health!
	"Einsiedler" over .name!
	0 over .female!
	0 over .attitude!
	0 over .composure!
	0.88 over .ai.threat_threshold!
	"war uberrascht, dass er uberhaupt dem Team beitrat, da er ein Einsiedler und so war." over .job!
	WEAPON_SHOTGUN over .weapona!
	WEAPON_FIRE over .weaponb!
	40 LOOT_SHOTGUN_SHELL 2 pick .lootamt!
	0.1 over .ai.wander_chance!
	dup to recruitee
	dup cyoa{ ' cabin1-hermitchat cyoa! } drop drop
;

: hermit
	new-npc 0 lt .leaveok! lt .character@ .hermitify
;

: cabinloot 
	looseloot
	30 %chance if 30 60 rnd sgas chainsaw .scatter then
;

location
		tags: cabin-hermit
		max-rooms: 1
		entry-tags: randcabin
		script: set-theme-cabin 
		pre-script: set-theme-cabin
		post-script: 0 %zombs
		
		room-choice: randcabin
			room-weight: 80
			room-count: 1
			room-script: nad
			room-post-script: hermit cabinloot

regiondef{

	 region: forest cabin
		w: 20 // 35
		h: 15 // 35
		script: timeofday o'clock

		no-prefab // Don't build that default city
		on-foot
		
		: make-a-cabin map{
			"kabineneinsiedler" $picklocid // Pick a cabin location definition if it exists ( tags -- locdefid )
			addloc // Add a location using the resulting location definition  ( locdefid -- locid )
			prefab{ 10 cabin } // Create a cabin of 5 width using the new location ( locid w -- <build cabin centered in upper part of map> )
			}
		;

		: setup-cabin-forest
			map{ grass make-a-cabin 5 pines }
			mission{ siege-start-dig 100 left-spawn 100 bottom-spawn 0 top-spawn 0 right-spawn }
		;

		post-script: setup-cabin-forest 5sdiff %zombs
}
