road{ 
	
}

cyoa{ regiondef{

0 value tnome-bought
0 value tnome-seen
0 value the-tnome

0 stack
	"Bravo de l'achat, nerd !" shove
	"OOOooooooo!" shove
	"Un endroit sur pour dormir. " ;) .. shove
	"Ooo! Oooooooo!" shove
	"Bonne chance au canada ! " trollface .. shove
	"Au revoir et bonne odeur !" shove
	"Whenever you need help... look to the staaaaars!" shove
	"Je monte vers le haut !" shove
	"I'M INTERFAAAAACED!" shove
	"This... this is goodbye!" shove
	"I'm outta heeeeere!" shove
	"Foi aux unks !" shove
	"Que les points zombo vous gardent !" shove
	"Quelque chose m'attire vers le haut." shove
	"La vraie puissance etait l'amitie !" shove
	"Je serai toujours avec toi, a l'interieur de ton coeur !" shove
	"Merci beaucoup, continuez a faire des achats sur tnome-co a nouveau!" shove
	"Avertissement, pile est a" shove
value tnome-sayings-base
tnome-sayings-base shuffles var tnome-sayings

: tnome-zoop3 the-tnome silentkillit ;
: tnome-zoop2 
	-10 the-tnome .vel.z!
	20 ' tnome-zoop3 timer_add
;
: tnome-zoop1 tnome-sayings pops nip fbold the-tnome .yellmsg 100 ' tnome-zoop2 timer_add ;

: tnome-end	args( cost )
	gstats{ <- cost -1 * ' zombo-point +! }
	// filesave{ save-global-stats }
	' tnome-bought ++
	pchar .loot-to-trunk
	clear-cyoa
	45 ' tnome-zoop1 timer_add
;

// The rewards

cyoa: tnome-rodent
	"Souris geant de preference inhabituelle" cyoa-title!
	"Bienvenue dans un nouveau monde ... un monde de rongeurs." pbold text!
	"Ces mots de tnomey resonnent dans votre esprit." +crtext
	char-gen to recruitee ricon
	recruitee .gerbilfy
	// WEAPON_FIERCE recruitee .weapon_default!
	4 recruitee .strength! // 3 4 rnd recruitee .morale!
	"Bouclier de l'espoir" recruitee .perk!
	team-full? if
		($ "Pouvez-vous nous indiquer qui serait a remplacer pour laisser place au rat de cette taille dans notre cage ?" $) +crtext
		recruit-replace?
	else
		recruited
	then
;

: tnome-weaponbuy args( weapon cost )
	1 <- weapon trunk.weapon+ <- cost tnome-end goodfx
;

defer d1-base
defer d2-base
defer d3-base

0 stack var tnome-reward-1-deck
0 stack var tnome-reward-2-deck
0 stack var tnome-reward-3-deck

: d1-up tnome-reward-1-deck pops drop depths 0= if d1-base shuffles to tnome-reward-1-deck then drop ;
: d2-up tnome-reward-2-deck pops drop depths 0= if d2-base shuffles to tnome-reward-2-deck then drop ;
: d3-up tnome-reward-3-deck pops drop depths 0= if d3-base shuffles to tnome-reward-3-deck then drop ;

// TODO: Add appropriate d*-up to end of each deck card choice handler

: tnome-food-1 4 add-food 10 tnome-end d1-up ;
: tnome-med-1 3 add-medical 10 tnome-end d1-up ;
: tnome-gas-1 3 10 * add-gas 10 tnome-end d1-up ;
: tnome-bullet-1 3 8 * add-bullet 10 tnome-end d1-up ;
: tnome-shell-1 3 5 * add-shell 10 tnome-end d1-up ;
: tnome-rifle-1 3 6 * add-rifle 10 tnome-end d1-up ;
: tnome-recruit-1 road{ ' normalcevent stack-road-action } 10 tnome-end goodfx d1-up ;
// : tnome-recruit-2 ' recruit-dog stack-road-action 10 tnome-end d2-up ;
// : tnome-pipebomb-1 WEAPON_PIPEBOMB 10 tnome-weaponbuy d1-up ;
// : tnome-ballpeen-1 WEAPON_BALLPEEN 10 tnome-weaponbuy d1-up ;

: tnome-food-2 6 add-food 20 tnome-end d2-up ;
: tnome-med-2 4 add-medical 15 tnome-end d2-up ;
: tnome-gas-2 4.5 10 * add-gas 20 tnome-end d2-up ;
: tnome-bullet-2 4.5 8 * add-bullet 20 tnome-end d2-up ;
: tnome-shell-2 4.5 5 * >int add-shell 20 tnome-end d2-up ;
: tnome-rifle-2 4.5 6 * add-rifle 20 tnome-end d2-up ;
: tnome-rodent-2 ' tnome-rodent stack-road-action 20 tnome-end goodfx d2-up ;

: tnome-rifle-2 WEAPON_RIFLE 20 tnome-weaponbuy d2-up ;
: tnome-dolt-2 WEAPON_DOLT 20 tnome-weaponbuy d2-up ;
: tnome-shotgun-2 WEAPON_SHOTGUN 20 tnome-weaponbuy d2-up ;
: tnome-grenade-2 WEAPON_GRENADE 20 tnome-weaponbuy d2-up ;

: tnome-food-3 8 add-food 30 tnome-end d3-up ;
: tnome-med-3 6 add-medical 30 tnome-end d3-up ;
: tnome-gas-3 6 10 * add-gas 30 tnome-end d3-up ;
: tnome-bullet-3 6 8 * add-bullet 30 tnome-end d3-up ;
: tnome-shell-3 6 5 * add-shell 30 tnome-end d3-up ;
: tnome-rifle-3 6 6 * add-rifle 30 tnome-end d3-up ;
: tnome-recruit-3 road{ ' scgoodevent stack-road-action } 30 tnome-end goodfx d3-up ;

: tnome-sledge-3 WEAPON_SLEDGE 30 tnome-weaponbuy d3-up ;
: tnome-fire-3 WEAPON_FIRE 30 tnome-weaponbuy d3-up ;

deck-new
	($ "quatre aliments - dix. " .. "ZP" pbold $) choice-card: tnome-food-1
	($ "trois medecins en 10. " .. "ZP" pbold $) choice-card: tnome-med-1
	($ "30 gaz moins 10 " .. "ZP" pbold $) choice-card: tnome-gas-1
	($ "vingt-quatre obus - dix " .. "ZP" pbold $) choice-card: tnome-bullet-1
	($ "dix-sept obus de fusil a pompe - dix " .. "ZP" pbold $) choice-card: tnome-shell-1
	($ "dix-huit obus de fusil a balles - dix " .. "ZP" pbold $) choice-card: tnome-rifle-1
	($ "Recrute aleatoire commun ! - 10 " .. "ZP" pbold $) choice-card: tnome-recruit-1
constant tnome-reward-1-base last to d1-base
tnome-reward-1-base shuffles to tnome-reward-1-deck

deck-new
	($ "six aliments - vingt. " .. "ZP" pbold $) choice-card: tnome-food-2
	($ "quatre medecins - quinze. " .. "ZP" pbold $) choice-card: tnome-med-2
	($ "quatre-vingt-cinq gaz - vingt " .. "ZP" pbold $) choice-card: tnome-gas-2
	($ "trente-six obus - vingt " .. "ZP" pbold $) choice-card: tnome-bullet-2
	($ "22 cartouches de munition de fusil a pompe - 20 " .. "ZP" pbold $) choice-card: tnome-shell-2
	($ "27 obus de fusil - 20 " .. "ZP" pbold $) choice-card: tnome-rifle-2
	($ "Rat de bataille - 20 " .. "ZP" pbold $) choice-card: tnome-rodent-2
	($ "Deux au-dela du maximum! " .. "ZP" pbold $) choice-card: tnome-rifle-2
	($ "Moulin a balles dolt - 20 cartouches. " .. "ZP" pbold $) choice-card: tnome-dolt-2
	($ "Fusil a canon long " .. "ZP" pbold $) choice-card: tnome-shotgun-2
	($ "Granate - 20 " .. "ZP" pbold $) choice-card: tnome-grenade-2
constant tnome-reward-2-base last to d2-base
tnome-reward-2-base shuffles to tnome-reward-2-deck

deck-new
	($ "'ses levres !' " .. "ZP" pbold $) choice-card: tnome-food-3
	($ "seize medicaments. " .. "ZP" pbold $) choice-card: tnome-med-3
	($ "soit 30 gaz " .. "ZP" pbold $) choice-card: tnome-gas-3
	($ "quarante-huit obus - trente " .. "ZP" pbold $) choice-card: tnome-bullet-3
	($ "trente obus de fusil a pompe - 30 " .. "ZP" pbold $) choice-card: tnome-shell-3
	($ "36 cartouches de munition de fusil - 30 " .. "ZP" pbold $) choice-card: tnome-rifle-3
	($ "Recrute aleatoire rare ! - 30 " .. "ZP" pbold $) choice-card: tnome-recruit-3
	($ "Marteau de tonneau - 30 " .. "ZP" pbold $) choice-card: tnome-sledge-3
	($ "Hache-pique : 30 " .. "ZP" pbold $) choice-card: tnome-fire-3	
constant tnome-reward-3-base last to d3-base
tnome-reward-3-base shuffles to tnome-reward-3-deck

// Non-destructive selection of top item
: top-card-choice -1 picks execute ;

: tnome-reward-1-choice tnome-reward-1-deck top-card-choice ;
: tnome-reward-2-choice tnome-reward-2-deck top-card-choice ;
: tnome-reward-3-choice tnome-reward-3-deck top-card-choice ;

cyoa: tnomey-start
	"LE NAIN ECHANGEUR, LE NAIN GNOMIQUE" cyoa-title!
	
	1 to tnome-seen
	
	"HI I'M TNOMEY
	DON'T YOU KNOW ME?
	WAIT THAT JOKE DOESN'T WORK AS WELL" pbold text!
	+cr cyoa{ zptally }

	choice( "Epargner " .. "ZP" pbold .. " pour le moment !" )choice
	gstats{ zombo-point 9 > } if tnome-reward-1-choice then
	gstats{ ugnome-trader 1 > zombo-point 19 > } and if tnome-reward-2-choice then
	gstats{ ugnome-trader 2 > zombo-point 29 > } and if tnome-reward-3-choice then
;

} } 

map{ regiondef{

(*
: tgnome-trader
	new-camper
	lt .character@ args( ch )
	' trader-event lt .events!
	1 lt .timer!

	lt-here

	' camp-recruit-final lt .cyoa!
; *)

} }
