uses paul/region-layout.df
uses paul/region-road-layout.df
// uses events/industrial/indust.df
// "../deathforth/rooms/TEMPROOM.txt" $load-rooms
	
" 
:map 2 
:tags roboshack  
:scriptA roboprof
:scriptB robopunch 
:scriptC robospeed 
:scriptD indwalls 
:scriptE indbluepanel 
:scriptF indgreenpanel 
:scriptG 3indwalls 
:size 11 12 
:off 1 1 
:tiles 
00222222200
00233333200
00211D11200
2221E1F1222
23311A11332
21111111112
21B11111C12
21111111112
22221112222
33321112333
00022222000
00033333000

:map 3 
:tags toolshop  
:scriptA tshopgas 
:scriptB tshopelec 
:scriptC cashcounter flipside 
:scriptD cashcounter 
:scriptE indshelf -1 movey 
:scriptF industsmall 
:size 15 13 
:off 6 0 
:tiles 
222222202222222
233333202333332
21E1E12021E1E12
2F111F202F111F2
222122222221222
332133333331233
00211C111D11200
002A1111111B200
002111111111200
002111111111200
002222111222200
003332222233300
000003333300000

:map 4 
:tags toolschool  
:scriptA schooltrader 
:scriptB industsmall 
:scriptC carwreck 
:scriptD indshelf -1 movey 
:scriptE 3indwalls 
:size 13 11 
:off 6 1 
:tiles 
2222222222222
2333333333332
2B1D1D111E112
2B1111111C112
211111A111112
2111111111BB2
2B111111111B2
2BB111111B112
2222211122222
3333222223333
0000333330000
"
value CAMP
CAMP $parse-rooms

cyoa{

: cyoa-sale-car
	carkey 0 > if cyoa-car then;

	cyoa-start
	"Auto zu verkaufen" cyoa-title!
		"'This car looks like it's both 'turnkey and good to go.''" cyoa-text!
		choice( "'Ruckkehr spater" )choice
		

;

cyoa-choice: tcarsales-go
	($ Thegroup .. "  kauft ein nagelneues Auto!" .. "'Nimm dir einfach das Auto, das du willst!'" pbold $) cyoa-text! goodfx
		1 to carkey clear-cyoa -5 trunk-food+ 50 trunk-gas+ someicon
;

cyoa: tcarsales
	"Jedes Auto muss gehen!" cyoa-title!
	($ "5 food" pbold $) cyoa-text!
	trunk-food 4 > if "'Das ist eine recht gute Sache." +crtext then
	basic-tone foodamt
	trunk-food 5 < if
		($ Thegroup .. " 'kann das Leben andrende Kauf eines glanzenden neuen Autos nicht leisten." $) +crtext
	else
		choice( "'Gehen Sie fur jetzt" )choice back-esc
		trunk-food 4 > if
			choice( "'Kaufe ein neues Auto - 5 Essen" )choice: tcarsales-go
		then
	then
;

cyoa-choice: tgarage-1
	($ Thegroup .. " ' zahlt fur eine Vollreparatur des Rahmens und des Motors!	" .. "'Lass dich hier nur wegfahren, fahr dein Auto ein bisschen entlang der Straße und wir reparieren es!" pbold $) cyoa-text! goodfx
		clear-cyoa -5 trunk-food+ image-car-garage road{ ' mandible-repairgarage stack-road-action }
;

cyoa-choice: tgarage-2
	($ Thegroup .. " ' zahlt fur eine Reihe an fortschrittlichen Autobearbeitungen sowie Vollreparatur des Rahmens und des Motors!	Lass dich hier nur wegfahren, fahr ein bisschen entlang der Straße nach dem Garage. Dein Auto wird THE WORKS bekommen!" .. "'Expert Garage" pbold $) cyoa-text! goodfx
		clear-cyoa -35 trunk-food+ image-car-garage road{ ' mandible-megagarage stack-road-action }
;

cyoa: tgarage
	"'Experten-Garage" cyoa-title!
	($ "'Wir haben in der Nahe eine Garage voller expertischer Mechaniker, und wir bieten " pbold .. "'THE WORKS" fbold .. "'. Vollstandige Autobearbeitungen: Rustungsschutzplatten, Geschwindigkeitszunahme, verstarkten Rahmen, Motoren-Umsatz mit erhohter Treibstoffeffizienz. Alle fur 35 Essen.	Wir konnen auch dein Auto ohne suße Modifikationen vollstandig reparieren, fur 5 Essen." pbold $) cyoa-text!
	trunk-food 34 > if "'Das perfekte Auto ist moglich." +crtext else
		trunk-food 4 > if "'Konntest du immer noch Vollreparaturen kaufen." +crtext then
	then
	basic-tone foodamt
	trunk-food 5 < if
		($ Thegroup .. " 'kann sich diese ausgedehnte aber geschmackvolle Automodifikation nicht leisten." $) +crtext
	else
		choice( "'Gehen Sie fur jetzt" )choice back-esc
		trunk-food 34 > if
			choice( "'Vollstandige Autos, " .. "'THE WORKS" fbold .. " ' - 35 Lebensmittel" )choice: tgarage-2
		then
		trunk-food 4 > if
			choice( "'Vollreparaturen - 5 Lebensmittel" )choice: tgarage-1
		then
	then
;

0 value mt1-1
0 value mt1-2
0 value mt1-3
0 value mt1-4

cyoa-choice: trade-m1-4
	($ Thegroup .. " 'kauft eine benzingetriebene Presslufthammer!	" .. "'Die Wahl des Connaisseurs zum Durchhacken von Zombiehorden!" pbold $) cyoa-text! goodfx
	1 WEAPON_JACKHAMMER trunk.weapon+ -20 trunk-food+ someicon ' mt1-4 ++
;

cyoa-choice: trade-m1-3
	($ Thegroup .. " 'kauft eine benzingetriebene Kettensage! Ein Klassiker!" .. "'Jeder weiß, dass dies die ANTWORT auf Zombies ist! Solange dir nicht der Treibstoff ausgeht." pbold $) cyoa-text! goodfx
	1 WEAPON_CHAINSAW trunk.weapon+ -10 trunk-food+ someicon ' mt1-3 ++
;

cyoa-choice: trade-m1-2
	($ Thegroup .. " 'kauft eine benzingetriebene Blasmaschine!	" .. "'Blase die Zombies weg! Wie Blatter!" pbold $) cyoa-text! goodfx
	1 WEAPON_BLOWER trunk.weapon+ -5 trunk-food+ someicon ' mt1-2 ++
;

cyoa-choice: trade-m1-1
	($ Thegroup .. " 'kauft einen Benzin-betriebenen Rasenspitz!" .. "1.5" pbold $) cyoa-text! goodfx
	1 WEAPON_WHACKER trunk.weapon+ -5 trunk-food+ someicon ' mt1-1 ++
;

cyoa: tshopgas
	"Benzinbetriebene Werkzeuge" cyoa-title!
	($ "'Es gibt etwas an gasbetriebenen Waffen" pbold $) cyoa-text!
	trunk-food 4 > if "Zeit, um aufzudrehen." +crtext then
	basic-tone foodamt
	trunk-food 5 < if
		($ Thegroup .. " 1x Gasoline" $) +crtext clear-cyoa +30 trunk-gas+ goodfx
	else
		choice( "'Gehen Sie fur jetzt" )choice back-esc
		trunk-food 19 > mt1-4 1 < and if
			choice( "1 Jackhammer" )choice: trade-m1-4
		then
		trunk-food 9 > mt1-3 3 < and if
			choice( "10 wood" )choice: trade-m1-3
		then
		trunk-food 4 > mt1-2 3 < and if
			choice( "'Laubblaser - 5 Lebensmittel" )choice: trade-m1-2
		then
		trunk-food 4 > mt1-1 3 < and if
			choice( "'Grasschneider - 5 Lebensmittel" )choice: trade-m1-1
		then
	then
;

0 value mt2-1
0 value mt2-2
0 value mt2-3
0 value mt2-4

: mt2-firstbuy 
	mt2-4 1 < mt2-3 1 < mt2-2 1 < mt2-1 1 < and and and
;

: mt2-firstbuy-done
	($ "'Genieße deine " pbold .. "'DOPPELTE LADUNG!" fbold $) +crtext
;

cyoa-choice: trade-m2-4
	($ Thegroup .. " ' kauft eine elektrische Presslufthammer!" .. "'Es ist einfach so umweltfreundlich!" pbold $) cyoa-text! goodfx
	mt2-firstbuy if mt2-firstbuy-done 255 else 130 then WEAPON_EJHAMMER trunk.weapon+ -20 trunk-food+ someicon ' mt2-4 ++ ;

cyoa-choice: trade-m2-3
	($ Thegroup .. " ' kauft eine elektrische Kettensage! Du fuhlst dich unangenehm schlau, weil du die Umwelt im Post-Apokalypse rettest." .. "'Exzellent fur die Kompostierung von Zombies!" pbold $) cyoa-text! goodfx
	mt2-firstbuy if mt2-firstbuy-done 160 else 80 then WEAPON_ECHAINSAW trunk.weapon+ -10 trunk-food+ someicon ' mt2-3 ++ ;
	
cyoa-choice: trade-m2-2
	($ Thegroup .. " ' kauft einen elektrischen Laubblaser!" .. "'Sanft die Zombies zusammenhalten, eine friedliche Alternative zu diesem Zersplattern!" pbold $) cyoa-text! goodfx
	mt2-firstbuy if mt2-firstbuy-done 100 else 50 then WEAPON_EBLOWER trunk.weapon+ -5 trunk-food+ picon ' mt2-2 ++ ;

cyoa-choice: trade-m2-1
	($ Thegroup .. " ' kauft einen elektrischen Grasschneider!" .. "'Hat mehrere effektive Anwendungen in Zomboculture-Landwirtschaftsmethoden." pbold $) cyoa-text! goodfx
	mt2-firstbuy if mt2-firstbuy-done 100 else 50 then WEAPON_EWHACKER trunk.weapon+ -5 trunk-food+ picon ' mt2-1 ++ ;

cyoa: tshopelec
	"Elektrowerkzeuge" cyoa-title!
	($ "Elektrische Werkzeuge sind umweltfreundlich, da sie den Benzinverbrauch reduzieren, wenn Sie Zombies mahen." pbold $) cyoa-text!
	basic-tone foodamt
	trunk-food 5 < if
		($ Thegroup .. " 'mangelt es an Lebensmitteln, um etwas zu kaufen!" $) +crtext
		($ "Der Handler hat Mitleid mit " .. thegroup .. "  und gibt ein " .. "'RABATT-SAUGERBLATTER!" rbold $) +crtext goodfx 30 WEAPON_EBLOWER trunk.weapon+ clear-cyoa
	else
		mt2-firstbuy if
			($ "'Aus Sonderangebot erhalt der Handler Ihnen zusatzlich " .. "'DOPPELTE RECHTSCHREIBUNG" rainbold .. " 'Ihre erste Anschaffung wird Sie doppelt so viel Energie geben wie ublich!" $) +crtext
		then
		choice( "'Gehen Sie fur jetzt" )choice back-esc
		trunk-food 19 > mt2-4 1 < and if
			choice( "'Elektrischer Steinsplitter - 20 Nahrungseinheiten" )choice: trade-m2-4
		then
		trunk-food 9 > mt2-3 2 < and if
			choice( "'Elektrischer Kettensage - 10 Nahrungseinheiten" )choice: trade-m2-3
		then
		trunk-food 4 > mt2-2 2 < and if
			choice( "'Elektrischer Blattersauger - 5 Nahrungseinheiten" )choice: trade-m2-2
		then
		trunk-food 4 > mt2-1 2 < and if
			choice( "'Elektrischer Rasenmaher - 5 Nahrungseinheiten" )choice: trade-m2-1
		then
	then
;

0 value mechtrained+

: mech-train-amt numhums 2 * mechtrained+ 1 + * 1 + ; 
: mech-train-pay? trunk-food mech-train-amt 1 - > notsolo notsolohuman and and ;
: mech-train-pay mech-train-amt -1 * trunk-food+ ;

: mech-solo-amt mechtrained+ 2 * 3 + ;
: mech-solo-pay? trunk-food mech-solo-amt 1 - > ;
: mech-solo-pay mech-solo-amt -1 * trunk-food+ ;

cyoa-choice: mech-school-train
	cchar .mechanical@ 6 < if
		($ cname .. " 'Der Professor beobachtet genau, wie Sie mit einem Schraubendreher an das Auto schlagen. Also, DAS ist was Ingenieurwesen bedeutet!" $) goodfx
	else
		($ cname .. " 'Sie haben bereits ihren vollstandigen Ingenieursgrad von dieser renommierten Akademie erlangt!		Ihre letzte Zahlung wird als Spende zur Errichtung eines neuen Flugels fur die Schule genommen." $) badfx
	then cyoa-text! 
	mech-solo-pay mechanicREV mechanic++ ' mechtrained+ ++
;

cyoa-choice: mech-school-group
	($ "'Die gesamte Gruppe erhalt mechanische Ausbildung! Alle beobachten, wie der Professor das Auto mit einem Schraubendreher schlagt. Es ist sehr erhellend." $) cyoa-text! goodfx
	mech-train-pay someicon
	regiondef{ ' trade-mechanic-group! foreach-human-char } numhums ' mechtrained+ +!
;

cyoa: mech-school-give
	solohuman if
		choosehuman mech-school-train
	then;
	"'Wer soll diese umfassende mechanische Wissen erhalten?" cyoa-text!
	' mech-school-train cyoa-human-choice
;

cyoa: schooltrader
	($ "Die Werkzeug Schule" $) cyoa-title!
	"'Die Mechanik-Ingenieurswissenschaft ist wahrhaft eine Wissenschaft. Im Gegensatz zur Medizin, die mehr eine Kunst darstellt. Ahnlich wie Origami oder vielleicht interpretatives Tanz." pbold text!
	"'I'm sorry, Dave. I'm afraid I can't do that.'" +crtext foodamt
		mech-solo-pay? not if
			"'Du kannst dir kein weiteres Training leisten." +crtext 
		then;
		choice( "'Gehen Sie fur jetzt" )choice back-esc
		mech-solo-pay? if
			choice( "'Gib " .. mech-solo-amt .. " 'Lebensmittel fur ein einzelnes Training" )choice: mech-school-give
		then
		mech-train-pay? if
			choice( "'Gib " .. mech-train-amt .. " 'Essen fur Gruppenausbildung" )choice: mech-school-group
		then
		
;

cyoa-bridge: robopunch-go
	ricon 4 recruitee .morale! clear-cyoa 0.25 recruitee .ai.wander_chance! 0 nearest .unseen!
	10 recruit-yes-food 
	($ "A robot that dispenses beatings? Technology is pretty cool." $) +crtext
	"#LADEN DER SCHLAGPROTOKOLLE#	#BEREIT ZUM SCHLAGEN#" pbold +crtext
	recruitee .strengthREV recruitee .fitnessREV
;

cyoa: robopunch
	"Der Perfekte Mechanische Schlag" cyoa-title!
	nearest .character@ choosechar cchar to recruitee ricon
	"#ICH BIN SCHLAG ROBOTER#" pbold cyoa-text! basic-tone
	"'Jetzt kommen wir irgendwohin! Dieser Roboter ist fur einen Zweck konzipiert: Schlagen.'" +crtext
	trunk-food 9 > if
		choice( "'Lasse es auf einmal." )choice
		choice( "'Kaufen Sie PUNCHBOT - 10 Essen" )choice: robopunch-go
	else
		"'Sie benotigen 10 Essen, um diesen Punch bot zu kaufen." +crtext
		choice( "'Essen kann ich nicht abgeben" )choice
	then
;

cyoa-bridge: robospeed-go
	ricon 4 recruitee .morale! clear-cyoa 0.25 recruitee .ai.wander_chance! 0 nearest .unseen!
	15 recruit-yes-food 
	($ "'Der Roboter macht einen Doughnut sehr schnell. So sehr schnell." $) +crtext
	"'#LADEN SCHNELLEINSATZPROGRAMME#	#MUSS 2 GEHEN SCHNELL#" pbold +crtext
	recruitee .strengthREV recruitee .fitnessREV
;

cyoa: robospeed
	"'So Schneller" cyoa-title!
	nearest .character@ choosechar cchar to recruitee ricon
	"'#ICH bin SPEEDBOT#" pbold cyoa-text! basic-tone
	"'Mit seinen glatten Linien und seinen winzigen Reifenkappen halt dieser Roboter, selbst stillstehend, den Begriff der 'Schnelligkeit' aus.	Zusatzlich hat er das Wort 'Schnellheit' gerade gesagt." +crtext
	trunk-food 14 > if
		choice( "'Lasse es auf einmal." )choice
		choice( "'Kaufen Sie SPEEDBOT - 15 Essen" )choice: robospeed-go
	else
		"'Sie benotigen 15 Essen, um diesen Speed bot zu kaufen." +crtext
		choice( "'Essen kann ich nicht abgeben" )choice
	then
;

}

roomgen{


: .ct1 args( ch ) // Mech Teacher
	WEAPON_WRENCH <- ch .weapona!
;
: .ct2 args( ch ) // Gas tools
	26 <- ch .glassestype! // Gas Mask
;
: .ct3 args( ch ) // Elec tools
	21 <- ch .glassestype! // Green Goggles
;
: .ct4 args( ch ) // Garage
	1 <- ch .female!
	25 <- ch .hattype!
	6 <- ch .legstype!
	3 <- ch .torsotype!
	0 <- ch .glassestype!
;
: .ct5 args( ch ) 
	7 <- ch .hattype! // Cowboy hat
;
: .ct6 args( ch ) 
	<- ch .speedbotify
;
: .ct7 args( ch ) 
	<- ch .punchbotify
;

: camptradercommon
	still-npc regiondef{ ' trader-event lt .events! 1 lt .timer! }
	
;

: schooltrader
	camptradercommon .ct1 cyoa{ ' schooltrader cyoa! }
;

: robopunch
	camptradercommon .ct7 cyoa{ ' robopunch cyoa! }
;

: robospeed
	camptradercommon .ct6 cyoa{ ' robospeed cyoa! }
;

: roboprof
	// camptradercommon .ct8 cyoa{ ' roboprof cyoa! }
;

: tshopgas
	camptradercommon .ct2 cyoa{ ' tshopgas cyoa! }
;

: tshopelec
	camptradercommon .ct3 cyoa{ ' tshopelec cyoa! }
;

: tgarage
	camptradercommon .ct4 cyoa{ ' tgarage cyoa! }
;

: tcarsales
	camptradercommon .ct5 cyoa{ ' tcarsales cyoa! }
;

		0 stack
			' camptradercommon shove
			' camptradercommon shove
			' camptradercommon shove
			' camptradercommon shove
		value preptrader-base
		preptrader-base shuffles var preptrader-picker

: preppertrader
	preptrader-picker depths 0= if preptrader-base shuffles to preptrader-picker then pops nip execute ;


}

locdef{

location: toolshop
		max-rooms: 1
		entry-tags: toolshop
		script: set-theme-restaurant
		pre-script: set-theme-restaurant
		post-script: nad 0 %zombs
				
		room-choice: toolshop
			room-weight: 10
			room-count: 1
			room-post-script: 
			filter-only
			
location: toolschool
		max-rooms: 1
		entry-tags: toolschool
		script: set-theme-bookstore
		pre-script: set-theme-bookstore
		post-script: nad 0 %zombs
				
		room-choice: toolschool
			room-weight: 10
			room-count: 1
			room-post-script: 
			filter-only
		
location: roboshack
		max-rooms: 1
		entry-tags: roboshack
		script: factory-theme
		pre-script: factory-theme
		post-script: nad 0 %zombs
				
		room-choice: roboshack
			room-weight: 10
			room-count: 1
			room-post-script:
			filter-only
			
}
		
root{

: prepper-magchance
	20 %chance if
		magazine 0 4 rnd cyoa{ to bookmagtype ' bookmag-get cyoa! } 50 health! drift
	then
;

: sale-car 
	1 22 rnd spawncar mission{ cyoa{ ' cyoa-sale-car cyoa! } }
	0 lt .action_icon!
;

}
		
map{ regiondef{

trade-camp-reset

0 value gbx
0 value gby
0 value gbx2
0 value gby2
0 value gbx3
0 value gby3
0 value bfx
0 value bfy

: bldg tanchor!
	"'robotikladen" $picklocid addloc
	"'ROBOTIK LADEN" sign-text! prefab{ 1 5 1 shop } 
;
: bldg2 tanchor!
	"'Werkstatt" $picklocid addloc
	"'Werkstattladen" sign-text! prefab{ 2 5 1 shop } 
;
: bldg3 tanchor!
	"'Werkzeugschule" $picklocid addloc
	"'Werkzeugschule" sign-text! prefab{ 3 6 1 shop } 
;


' plotgrass >defer ft

: pt
	xyp.xy ft // Plot the current floor by default
	
	xyp.i char { = if xyp.xy to gby2 to gbx2 then;
	xyp.i char } = if gbx2 1- gby2 xyp.xy swap 1+ swap gravellot then;
	xyp.i char ( = if xyp.xy to gby to gbx then;
	xyp.i char ) = if gbx 1- gby xyp.xy swap 1+ swap gravellot then;
	xyp.i char [ = if xyp.xy to gby3 to gbx3 then;
	xyp.i char ] = if gbx3 1- gby3 xyp.xy swap 1+ swap gravellot then;
	
	xyp.i char 1 = if xyp.x to bfx then;
	xyp.i char 2 = if bfx xyp.y xyp.x barbfence then;

	xyp.i char t = if sale-car lt-here then;
	xyp.i char U = if tnomey-spawn then;
	xyp.i char W = if trader-weapon-buyer then;
	xyp.i char G = if trader-food-for-gas then;
	xyp.i char S = if tgarage lt-here then;
	xyp.i char M = if tcarsales lt-here then;
		
	xyp.i char @ = if xyp.xy bldg then;
	xyp.i char 3 = if xyp.xy bldg2 then;
	xyp.i char 4 = if xyp.xy bldg3 then;
	
	xyp.i char p = if ' plotpave to ft then;
	xyp.i char $ = if xyp.xy grassedge then;
;

"
...........................
1.........................2
...........................
..................[....t...
...........................
...........................
...........................
.......L..........ML...t...
..{........................
.@....3....4...............
...........................
............(...}......t...
..................S........
...........................
..........................]
...........................
1..........2....1.........2
......G..U...........W....p
$$$$$$$$$$$$....$$$$$$$$$$$
...............)...........
...........................
...........................
...........................
...........................
...........................
...........................
..........................."
constant maplayout

: specialcamp-6
	' plotgrass to ft
	0 -1 maplayout xyplot: pt
;


: site-setup

	// Clear the map with grass
	-1 -1 w h grassbox

	pavement
// Plot trader stuff
	specialcamp-6

	-1 -1 w 3 conclot // Top
	-1 h 2 - w h conclot // Bottom

	0 h 6 - w ' plotroadlines hline
	

	1 no_time!
	7 14 rnd o'clock
	// 50 %chance if 1 2 frnd weather! -1 -2 frnd wind_force! else 1 2 frnd wind_force! then
	
	mission{ no-edge-spawns }
	
	20 %mv-up
	25 %chars-up
;

	 region: specialcamp-6
		w: maplayout layoutw
		h: maplayout layouth

		trade-mode

		post-script: site-setup
} }
