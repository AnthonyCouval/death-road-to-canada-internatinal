// Useful words for assigning CYOA roles
0 value victim
0 value bully
0 value sc-camper


: recruited 
	+cr ($ rname .. " schliet sich dem Team an! Auf nach Kanada! " $) +text
	recruitee .morale@ 2 < if
		2 recruitee .morale!
	then
	recruitee .recruit
	gstats{ ugnome-extraZP 2 > if 1 zombop+! then }

	// if the character has a related THING, clear what it's following so it will follow the player
	recruitee .thing@ if 0 recruitee .thing@ .ai.followid! then

;

// Word replacements that alter pronouns and such to the situation

: xhis .female@ if "ihre" else "seine" then ;
: xHis .female@ if "Ihre" else "Seine" then ;
: xhim .female@ if "ihre" else "ihn" then ;
: xhe .female@ if "sie" else "er" then ;
: xHe .female@ if "Sie" else "Er" then ;

: ghis solo if soloer xhis else "ihre" then ;
: gHis solo if soloer xHis else "Ihre" then ;
: ghim solo if soloer xhim else "sie" then ;
: ghe solo if soloer xhe else "die Gruppe" then ;
: gHe solo if soloer xHe else "Die Gruppe" then ;
: gthey solo if soloer xhe else "sie" then ;
: gThey solo if soloer xHe else "Sie" then ;

// Below words for putting in an extra s depending on group

: g1s solo if "s" else "" then ;
: g2s team-count 2 = if "s" else "" then ;
: gs solo if "" else "s" then ;
: gS solo if "" else "S" then ;

: gare solo if "ist" else "sind" then ;
: gwere solo if "war" else "waren" then ;
: gtheywere gthey .. " " .. gwere ;
: gtheyare gthey .. " " .. gare ;
: gTheyare gThey .. " " .. gare ;

// Below example: "hintern" aVSs = you're a butt versus you're butts, depending 2 or 3 people.
: g2a team-count-alive 2 = if "  ein" else "" then ;
: g1a team-count-alive 1 = if "  ein" else "" then ;
: g1an team-count-alive 1 = if "  ein" else "" then ;
: g3s team-count-alive 2 > if "s" else "" then ;
: aVSs ($ g2a .. swap .. g3s $) ;
: gaVSs ($ g1a .. swap .. gs $) ;
: ganVSs ($ g1an .. swap .. gs $) ;

: I-or-we team-count-alive 1 = if "  Ich " else "  wir " then ;
: I-or-WE team-count-alive 1 = if "  Ich " else "  WIR " then ;

: cname-he solo if soloer xhe else cname then ;
: cname-He solo if soloer xHe else cname then ;
: thegroup-him solo if soloer xhim else "die Gruppe" then ;
: chis cchar xhis ;
: cHis cchar xHis ;
: chim cchar xhim ;
: che cchar xhe ;
: cHe cchar xHe ;

: phis pchar xhis ;
: pHis pchar xHis ;
: phim pchar xhim ;
: phe pchar xhe ;
: pHe pchar xHe ;


: rhis recruitee xhis ;
: rhim recruitee xhim ;
: rhe recruitee xhe ;
: rHe recruitee xHe ;

: vhis victim xhis ;
: vhim victim xhim ;
: vhe victim xhe ;
: vHe victim xHe ;

: bhim bully xhim ;
: bhe bully xhe ;
: bHe bully xHe ;


: Thegroup solo if soloer .colourname else "Die Gruppe" then ;
: thegroup solo if soloer .colourname else "die Gruppe" then ;
: yourteam solo if soloer .colourname else "dein Team" then ;

: Theothers team-count 2 = if notcname else "Die anderen Mitglieder" then ;
: theothers team-count 2 = if notcname else "die anderen Mitglieder" then ;
: Theothersarename team-count 2 = if ($ notcname .. "  ist" $) else "Die anderen sind" then ;

: everyone team-count 2 = if notcname else "jeder" then ;
: Everyone team-count 2 = if notcname else "Jeder" then ;

: Theothersare team-count 2 = if "Das andere Mitglied ist" else "Die anderen Mitglieder sind" then ;
: theothersare team-count 2 = if "das andere Mitglied ist" else "die anderen Mitglieder sind" then ;

: attitudeREV STAT_ATTITUDE cchar .reveal ;
: temperREV STAT_COMPOSURE cchar .reveal ;
: loyaltyREV STAT_LOYALTY cchar .reveal ;
: witsREV STAT_WITS cchar .reveal ;
: witsattREV witsREV attitudeREV ;

: aholeREV loyaltyREV temperREV ;

: strengthREV STAT_STRENGTH cchar .reveal ;
: medicalREV STAT_MEDICAL cchar .reveal ;
: mechanicREV STAT_MECHANICAL cchar .reveal ;
: shootingREV STAT_SHOOTING cchar .reveal ;
: fitnessREV STAT_FITNESS cchar .reveal ;

: rageREV temperREV strengthREV ;

: allREV strengthREV shootingREV fitnessREV mechanicREV medicalREV witsattREV temperREV loyaltyREV ;

: morale-- STAT_MORALE cchar .stat-- ;
: morale2- STAT_MORALE cchar .stat2- ;
: morale3- STAT_MORALE cchar .stat3- ;
: morale4- STAT_MORALE cchar .stat4- ;

: attitude-- STAT_ATTITUDE cchar .stat-- ;
: temper-- STAT_COMPOSURE cchar .stat-- ;
: loyalty-- STAT_LOYALTY cchar .stat-- ;
: wits-- STAT_WITS cchar .stat-- ;

: strength-- STAT_STRENGTH cchar .stat-- ;
: medical-- STAT_MEDICAL cchar .stat-- ;
: mechanic-- STAT_MECHANICAL cchar .stat-- ;
: shooting-- STAT_SHOOTING cchar .stat-- ;
: fitness-- STAT_FITNESS cchar .stat-- ;

: morale++ STAT_MORALE cchar .stat++ ;
: morale2+ STAT_MORALE cchar .stat2+ ;
: morale3+ STAT_MORALE cchar .stat3+ ;
: morale4+ STAT_MORALE cchar .stat4+ ;

: vitality++ STAT_VITALITY cchar .stat++ ;
: dexterity++ STAT_DEXTERITY cchar .stat++ ;

: attitude++ STAT_ATTITUDE cchar .stat++ ;
: temper++ STAT_COMPOSURE cchar .stat++ ;
: loyalty++ STAT_LOYALTY cchar .stat++ ;
: wits++ STAT_WITS cchar .stat++ ;

: strength++ STAT_STRENGTH cchar .stat++ gstats{ ' total-str+ ++ } stat-cheevs ;
: medical++ STAT_MEDICAL cchar fastlearn-stat gstats{ ' total-med+ ++ } stat-cheevs ;
: mechanic++ STAT_MECHANICAL cchar fastlearn-stat gstats{ ' total-mech+ ++ } stat-cheevs ;
: shooting++ STAT_SHOOTING cchar fastlearn-stat gstats{ ' total-shoot+ ++ } stat-cheevs ;
: fitness++ STAT_FITNESS cchar .stat++ gstats{ ' total-fit+ ++ } stat-cheevs ;

: ricon recruitee character# cyoa-char-icon! ;
: dead? cchar .health@ 1 < ;

0 value post-mission-cyoa

: ouch-- cchar team-attacked ;
: ouch2- 2 for ouch-- next ;
: nonfatal cchar .health@ 1 > ;
: alive? cchar .alive? ;
: health++ cchar .health++ ;
: despairbite cchar team-attacked 50 %chance if cchar team-attacked then ;
: sting-- nonfatal if ouch-- then ;
: sting2- 2 for sting-- next ;

cyoa{

: rewardevent-random
	0 stack
		' .fitness++ shove
		' .strength++ shove
		' .shooting++ shove
		' .mechanic++ shove
		' .medical++ shove
	shuffles pops nip execute
;

cyoa-choice: toiletwishA
	"Reichtum und Gold" cyoa-title!
		($ "'Konservendosen fangen an von der Decke zu regnen.		Endlich. Du bist reich!		Dann sturzt das Dach uber " .. pname .. "... " $) cyoa-text! goodfx clear-cyoa
	15 20 rnd sfood
	' xyzombceil 10 40 90 rnd zwave-ex	
;

cyoa-choice: toiletwishB
		($ pname .. "  starrt entsetzt wie " .. phis .. "  haut wird zu Stein und schliet " .. phim .. "  fur immer als Statue ein.		Nein, warte, es hat sich nur irgendwie " .. phis .. "  haut grau." $) text! goodfx deleteme
		pchar .vitality++ pchar .fullheal pchar .stoneclr
;

cyoa-choice: toiletwishC
	"Die schockierende Antwort" cyoa-title!
	($ "JA, SO ZIEMLICH, sagt der Geist. Dann schwebt er einfach nur herum und starrt " .. pname .. "  eine Weile an bevor er verschwindet." $) cyoa-text! badfx clear-cyoa deleteme
	nearest .tpos anchor! 20 zombs
;

cyoa: toiletwishgenie // Added an underscore so that "klo Wunsch" isn't redefined, as that would mess up the next part
	"Die Wunscherfullungstoilette" cyoa-title!
	picon!
	($ "Als " .. pname .. "  die Toilette offnete, erschien ein magischer Dschinn.	" .. "DANKESCHON, DASS DU MICH AUS DER TOILETTE BEFREIT HAST," pbold .. "  sagt er. " .. "JETZT WUNSCHE DIR WAS.	" pbold .. pname .. "  auert einen Wunsch:" $) text!
		choice( "'Wunsch dir noch nichts" )choice
		choice( "Ich mochte.. reich sein" )choice: toiletwishA
		choice( "Unsterblichkeit" )choice: toiletwishB
		choice( "Bist du einer dieser bosen Dschinns?" )choice: toiletwishC
;

: toiletwish_
	new-npc lt .character@ .genieify goodfx lt mission{ .smokepoof }
	0.01 lt .character@ .ai.wander_chance! 0 lt .character@ .ai.loot_chance! 1 lt .unseen!
	-30 lt .fade!
	90 lt .stun!
	180 lt .aim_angle!
	cyoa{ ' toiletwishgenie cyoa! }
;

// Assign to the previously-defined toiletwish deferred word
' toiletwish_ to toiletwish

: foodamt
	($ "  Du hast noch " .. LOOT_FOOD looticon .. "" .. trunk-food .. "  nahrung ubrig. " $) +text
;

: gasamt
	($ "  Du hast noch " .. LOOT_GAS looticon .. "" .. trunk-gas .. "  gas ubrig. " $) +text
;

cyoa: just-testing beep "TESTEN DER NACH MISSION STRASSEN GESCHICHTETEN CYOA" cyoa-text! ;

// Special events called later on stack-road-action

: comicbookgain shooting++ strength++ fitness++ morale3+ ;

cyoa-choice: comicbook-who
	chumany? if
		($ cname .. "  bekommt zu lesen " .. "DIE SPANDEX LIGA" fbold .. ".
		" .. cHe .. "  absorbiert den Inhalt! Traurigerweise " .. che .. "  ruiniert das Comicbuch fur andere aufgrund " .. chis .. "  schmutzig " .. cfingspaws .. "." $) cyoa-text!
		comicbookgain goodfx
	else
		($ cname .. " ' ruiniert das Comicbuch vollig.		Sieht aus als ob jemand keine Graphic Novels mag." $) cyoa-text! badfx
	then 
;

cyoa: comicbook-2
	"'Es ist ein Graphic Novel KEIN Comicbuch" cyoa-title!
	picon!
	dead? if
		($ "Das Comicbuch wurde wahrend des Kampfes zerrissen." $) cyoa-text! badfx
	then;
	($ Thegroup .. " ' kam mit einem Comicbuch davon! Es ist voll mit Geschichten von stammigen Leuten die sich gegenseitig schlagen und mit Augenstrahlen aufeinander schieen." $) cyoa-text! goodfx
	solohuman if
		choosehuman cicon
		($ cname-He .. " ' liest es und absorbiert die darin enthaltene Weisheit! Es ist informativ und unterhaltsam!" $) +crtext cchar comicbookgain
	then;  
		"Wer sollte es lesen durfen?" +crtext
		' comicbook-who cyoa-team-choice
;

// More common events

cyoa-choice: bookmag-who
	chumany? if
		($ cname .. "  bekommt zu lesen " .. bookmagtitle .. ".
		" .. cHe .. "  absorbiert den Inhalt! Traurigerweise " .. che .. "  ruiniert das Magazin fur andere aufgrund " .. chis .. "  schmutzig " .. cfingspaws .. "." $) cyoa-text!
		cchar bookmaggain goodfx
	else
		($ cname .. " ' ruiniert das Magazin vollig.		Sieht aus als ob jemand keine gute Literatur zu schatzen wei." $) cyoa-text! badfx
	then 
;

cyoa: bookmag-get2
	"Lesen nachholen" cyoa-title!
	picon!
	dead? if
		($ "Der " .. bookormag .. " was lost in the chaos." $) cyoa-text! badfx
	then;
	($ Thegroup .. " " .. bookormag .. ", " .. bookmagtitle .. "." $) cyoa-text! goodfx
	solohuman if
		choosehuman cicon
		($ cname-He .. "  liest es und nimmt das Wissen auf!" $) +crtext cchar bookmaggain goodfx
	then;  
	bookmagtype 4 > if
		"Jeder bekommt eine Chance es zu lesen und etwas Neues zu lernen." +crtext ' bookmaggain foreach-human-char 
	else
		"Wer sollte es lesen durfen?" +crtext
		' bookmag-who cyoa-team-choice
	then
;

cyoa: bookmag-get
	"Lesematerial" cyoa-title!
	picon!
	($ cname .. "  findet ein " .. bookormag .. "  in gutem Zustand, zwischen den ruinierten Zeitschriften und Buchern.	Das " .. bookormag .. "''s Titel ist: " .. bookmagtitle .. ".
	" .. cHe .. "  stopft es in " .. chis .. "  pack." $) cyoa-text!
	deleteme
	clear-cyoa goodfx mission{ ' bookmag-get2 to post-mission-cyoa }
;

cyoa-choice: recruit-replace
	ricon
	($ cname .. "  wird aus der Gruppe geworfen um Platz fur " .. rname .. "." $) cyoa-text!
	ctakeweapons TEAM_STATUS_BAD_LEFT cchar .decruit 0.5 600 tone
	recruited
;

cyoa-bridge: recruit-replace4
	ricon
	($ "Wen wurdest du gerne ersetzen um Platz fur " .. rname .. "?" $) cyoa-text!
	' recruit-replace cyoa-team-choice
;

: recruit-replace?
	// ' recruit-replace cyoa-team-choice
	// Look into maybe removing this: jerk-get
	// Doesn't use this: recruit-dog-feed recruit-familiarreplace? and the camp-recruits
	team-count 3 > if
		' recruit-replace 2 #cyoa-team-choice
		choice( "Wahle jemand anderen" )choice: recruit-replace4
	else
		' recruit-replace cyoa-team-choice
	then
	choice( "Lass " .. rname .. "  zuruck" )choice
;

(* : recruit-replace?-3 // The old recruit-replace?, currently used twice for annoying recruits in cyoa-k-recruit ... but I got rid of it because I added the pick someone else options to recruit-replace?
	// This was formerly so you could avoid the pushy person with a full party, and so you could avoid the Dinkdoor guy if you used a cool-it but NOT if you recruited him without a cool-it.
	// ' recruit-replace 3 #cyoa-team-choice choice( "Lass " .. rname .. "  zuruck" )choice
; *)

cyoa: recruit-yes
	team-full? if
		($ "Die Gruppe ist voll.		Wen wurdest du gerne ersetzen um Platz fur " .. rname .. "?" $) cyoa-text!
		recruit-replace?
	then;
	ricon
	($ Thegroup .. " akzeptiert " .. rname .. " zum Team!" $) cyoa-text! 2 300 tone
		recruited
;

cyoa: recruit-yes-food args( food )
	team-full? if
		($ "Die Gruppe ist voll. Wen wurdest du gerne ersetzen um Platz fur " .. rname .. "?" $) cyoa-text!
			<- food -1 * trunk-food+
			' recruit-replace cyoa-team-choice 
	then;
	ricon
	($ Thegroup .. " rekruten " .. rname .. " zum Team!" $) cyoa-text! 2 300 tone
		<- food -1 * trunk-food+ recruited
;

: recruit-yesno
	choice( "Frag " .. rname .. "  zum Mitmachen auf" )choice: recruit-yes
	choice( "Lass " .. rname .. "  zuruck" )choice
;

: npc-died 
	"Verloren auf dem Todesweg" cyoa-title! 
	($ pname .. " ' kommt zu spat.	Du kannst nichts fur " .. chim .. "  tun." $) cyoa-text!
	clear-cyoa badfx
; 

0 value rescskilltype

: rescskillup
	rescskilltype case
		// 0 of dup .strengthREV .strength++ endof - Got rid of the reveal
		0 of .strength++ endof
		1 of .fitness++ endof
		2 of .medical++ endof
		3 of .mechanic++ endof
		4 of .shooting++ endof
	endcase
;
: rescskillname
	rescskilltype case
		0 of "starke" endof
		1 of "fitness" endof
		2 of "medizin" endof
		3 of "mechanik" endof
		4 of "schieen" endof
	endcase
;

: rescskill-got
	($ Thegroup .. "  bekommt alle moglichen geheimen " .. rescskillname .. "  tipps von " .. rname .. "!	Das Training ist zu Ende, und " .. rname .. "  reist ab." $) cyoa-text!
	// formerly cchar
	' rescskillup foreach-human-char goodfx
;

 cyoa-choice: rescskill-who
	choosehuman cicon
	chumany? if
		rescskill-got
	else
		($ cname .. " 'versteht " .. rname .. "''s Trainingsversuche uberhaupt nicht." $) cyoa-text! badfx
	then 
;

cyoa: rescskill-choose
 	solohuman if
		choosehuman cicon
		rescskill-got
	else  
		($ " In the st column " .. rescskillname .. " training?" $) cyoa-text!
		' rescskill-who cyoa-team-choice
	then
;
 
: rescskill-pick to rescskilltype 
	// formerly rescskill-choose 
	rescskill-who
;

: groupadd team-count 1 > if "Gruppe " .. then ;

: rescskill1-get 0 rescskill-pick ;
: rescskill1 choice( groupadd "Krafttraining" )choice: rescskill1-get 
	4 recruitee .strength!
;
: rescskill2-get 1 rescskill-pick ;
: rescskill2 choice( groupadd "Fitnesstraining" )choice: rescskill2-get 
	4 recruitee .fitness!
;
: rescskill3-get 4 rescskill-pick ;
: rescskill3 choice( groupadd "Schietraining" )choice: rescskill3-get 
	4 recruitee .shooting!
;
: rescskill4-get 3 rescskill-pick ;
: rescskill4 choice( groupadd "Mechanikertraining" )choice: rescskill4-get 
	4 recruitee .mechanical!
;
: rescskill5-get 2 rescskill-pick ;
: rescskill5 choice( groupadd "Medizinische Ausbildung" )choice: rescskill5-get 
	4 recruitee .medical!
;
 
// Old way of doing it
0 var rescue-skill-deck
	deck-new
	card: rescskill1
	card: rescskill2
	card: rescskill3
	card: rescskill4
	card: rescskill5
constant RESCUE-SKILL
RESCUE-SKILL shuffles to rescue-skill-deck

: rescreward1-get 75 trunk-bullet+ ; 
: rescreward1 choice( "Vorrat von 75 Kugeln" )choice: rescreward1-get ;
: rescreward2-get 60 trunk-rifle-shell+ ;
: rescreward2 choice( "Vorrat von 60 Gewehrmunition" )choice: rescreward2-get ;
: rescreward3-get 45 trunk-shotgun-shell+ ;
: rescreward3 choice( "45 Schrotflintenpatronen" )choice: rescreward3-get ;
: rescreward4-get 15 trunk-food+ ;
: rescreward4 choice( "Vorrat von 15 Lebensmitteln" )choice: rescreward4-get ;
: rescreward5-get 80 trunk-gas+ ;
: rescreward5 choice( "Tank mit 80 Gas" )choice: rescreward5-get ;
: rescreward6-get 10 trunk-medical+ ;
: rescreward6 choice( "Vorrat von 10 medizinischen" )choice: rescreward6-get ;
: rescreward7-get morale2+all goodfx ;
: rescreward8-get 5 groupheal goodfx ; // trader is 7
: rescreward7 // Two for the price of one
	choice( "Moralisches Aufmunterungsgesprach" )choice: rescreward7-get
	choice( groupadd "Erste Hilfe" )choice: rescreward8-get 
;
 
0 var rescue-reward-deck
	deck-new
	card: rescreward1
	card: rescreward2
	card: rescreward3
	card: rescreward4
	card: rescreward5
	card: rescreward6
	card: rescreward7
	// Training added to resc reward deck
	card: rescskill1
	card: rescskill2
	card: rescskill3
	card: rescskill4
	card: rescskill5
constant RESCUE-REWARD
RESCUE-REWARD shuffles to rescue-reward-deck

: rescue-reward-draw rescue-reward-deck drawcard ;
: rescue-reward-shuffle
	rescue-reward-deck depths 0= if RESCUE-REWARD shuffles to rescue-reward-deck then
	rescue-reward-draw
;
: rescue-skill-shuffle
	rescue-skill-deck depths 0= if RESCUE-SKILL shuffles to rescue-skill-deck then
	rescue-skill-deck drawcard
;

: rescue-trainitem
	// rescue-skill-shuffle
	rescue-reward-shuffle
	rescue-reward-draw
;


: recruit-choice
	choice( "Rekrutiert " .. rname .. " der Team an" )choice: recruit-yes
;

: rescue-reward
	gstats{ ugnome-extraZP 0 > if 1 zombop+! then }
	recruit-choice
	rescue-trainitem
;

: judgerecruit
	most-paranoid if choosechar
		50 %chance if 
			($ cname .. " bewertet " .. rhis .. " skills..." $) +crtext
			recruitee dup .medicalREV dup .mechanicREV dup .shootingREV dup .strengthREV dup .fitnessREV
		else
			($ cname .. " urteilt " .. rhis .. " character..." $) +crtext
			recruitee dup .attitudeREV dup .temperREV dup .witsREV dup .loyaltyREV
		then goodfx witsattREV
	then
;

cyoa: rescuedme
	// rescue choosechar cicon
	// Maybe need to do a check here to see if the rescue team was left alive
	rescue to recruitee ricon
	0 rescue .party!
	recruitee .alive? if
		"Rettung erfolgreich!" cyoa-title!
		($ rname .. " aufholt ihn an einem sicheren Ort " .. thegroup .. " bietet Belohnung fur das Rettungshilfe in Dank.	" .. rHe .. " bietet Belohnung fur den Retter dankbar " .. rhim .. "!" $) cyoa-text!
		rescue-reward
		judgerecruit
	else
		"'Ja Wer Perfekt ist" cyoa-title!
		($ Thegroup .. " fuhlt sich schuldig wegen des " .. rname .. " wird gefressen.	So ist das Leben wohl, vermutlich." $) cyoa-text!
		morale--all
	then
;

cyoa: rescueddog
	// rescue choosechar cicon
	rescue to recruitee ricon
	0 rescue .party!
	recruitee .alive? if
		"Rettung erfolgreich!" cyoa-title!
		gstats{ ugnome-extraZP 0 > if 1 zombop+! then }
		($ rname .. " aufholt ihn an einem sicheren Ort " .. thegroup .. " bietet Belohnung fur das Rettungshilfe in Dank.	" .. rHe .. " scheint als ob " .. rhe .. " will bleiben!" $) cyoa-text!
		recruit-choice
		choice( "Set " .. rname .. " frei gegeben" )choice: morale2+all
		judgerecruit
	else
		"Hund Adoption fehlgeschlagen" cyoa-title!
		($ Thegroup .. " sich schamt daruber dass " .. rname .. " gern gegessen worden ware.	Ein Hund hatte sich sehr nutzlich gezeigt." $) cyoa-text!
		morale2-all
	then
;

cyoa-choice: chicken-dinner
	"Das Huhnervogel wird wieder in seine Bestandteile zerlegt." text!
	"Asche in Asche, Nusse in Nusse" pbold +crtext
	"Der schone Kreislauf des Lebens geht weiter." +crtext
	3 4 rnd trunk-food+ goodfx
;

cyoa-choice: chicken-free
	"Das Huhnervogel lasst eine Ei zuruck!	Dies ist ein Zeichen von Gluck! Vielleicht." text!
	morale++all goodfx
	1 weapondef{ WEAPON_EGG } trunk.weapon+
;

root{ defer freechicken-cheevo }

cyoa: rescuedchicken
	rescue choosechar cicon 0 rescue .party!
	rescue .alive? if
		"Huhnervogel gerettet!" cyoa-title!
		gstats{ ugnome-extraZP 0 > if 1 zombop+! then }
		($ Thegroup .. " 'konnte aus diesem Hof einen Huhnervogel herausholen!	Das Tier ware nicht gut als Rezept, es konnte freigelassen oder fur Fleisch verarbeitet werden. Es hat nicht viel Fleisch auf, aber es konnte gute Huhnernuggets sein.'," $) cyoa-text!
		choice( "Huhnervogel freilassen" )choice: chicken-free
		choice( "Chicken Nuggets" )choice: chicken-dinner
		freechicken-cheevo
	else
		"Huhnchenrettung fehlgeschlagen" cyoa-title!
		($ Thegroup .. " fuhlt sich irgendwie schuldig wegen des gegessenen Huhns.		Es war die Verschwendung eines guten Huhns." $) cyoa-text!
		morale--all badfx
	then
; 

0 value gothic-ma
0 value gothic-pa

cyoa-choice: farmrescue-1
	($ Thegroup .. " bekommt einige hausgemachte Weisheit uber die Reparatur von rostigen Schrotthaufen aller Formen und Streifen." $) text! picon
	' .mechanicREV foreach-team-char ' .mechanic++ foreach-team-char goodfx ;
cyoa-choice: farmrescue-2
	($ Thegroup .. "  lernt einige alte Bauernheilmittel. Lokale Heilkrauter, Salben, Techniken der Hauschirurgie." $) text! picon
	' .medicalREV foreach-team-char ' .medical++ foreach-team-char goodfx ;
cyoa-choice: farmrescue-3 
	($ Thegroup .. " ' bekommt eine schone scharfe Sichel geschenkt. Sie ist leicht, sie bricht nicht und sie kann etwas Schaden anrichten." $) text! picon 1 WEAPON_SICKLE trunk.weapon+ goodfx ;
cyoa-choice: farmrescue-4 
	($ Thegroup .. "  wird zu einem Vorrat an eingelegten Fruchten, Gemuse und seltsamem Fleisch gefuhrt! Glasnahrung ist eine schone Abwechslung zu Dosennahrung." $) text! picon 10 trunk-food+ morale++all goodfx ;

cyoa: farmrescue
	"Gotische Bauernhofrettung" cyoa-title! picon
	($ Thegroup .. "  entkommt dem Bauernhof!" $) text!
	gothic-ma 0= not if
		0 gothic-ma .party!
		gothic-ma .alive? if
			($ "Ma" pbold .. "  entkommt dem Bauernhof, dank dir!" $) +crtext
		else
			($ "Ma" pbold .. "  ist nicht mit dir geflohen." $) +crtext
			morale--all
		then
	then
	gothic-pa 0= not if
		0 gothic-pa .party!
		gothic-pa .alive? if
			($ "Pa" pbold .. "  uberlebt dank deiner Hilfe!" $) +crtext
		else
			($ "Pa" pbold .. " ' hat es nicht geschafft." $) +crtext
			morale--all
		then
	then
	gothic-ma 0= gothic-pa 0= and if "Leider hat keiner der Bauern uberlebt." +crtext badfx morale--all then;
	gothic-pa 0= not gothic-ma 0= not and if
		gothic-pa .alive? gothic-ma .alive? and if
			"Da sie beide dankbar sind, am Leben zu sein, bieten sie dir ein Geschenk an:" +crtext
			choice( "Vorrat von 10 Lebensmitteln" )choice: farmrescue-4
			choice( "'Pa's Reparatur Tipps" )choice: farmrescue-1
			choice( "'Mas Hausmittel" )choice: farmrescue-2
			choice( "Eine stabile Sichel" )choice: farmrescue-3
		then
	then
;

: drunkchat-up
	rescue choosechar cicon
	($ "'OK, ich bin wach!" pbold .. "
	" .. cHe .. "  sagt " .. che .. "' werde dir eine Weile folgen. Auch dass du " .. chim .. "  auerhalb der Stadt treffen solltest, wenn ihr es beide schafft." $) +crtext
		1 rescue .party-familiar 0 nearest .unseen!
		rescue .wakeup
		mission{ ' rescuedme to post-mission-cyoa }
		clear-cyoa
;

cyoa-choice: drunkchat-med
	rescue choosechar
	($ pname .. "  stellt eine sorgfaltige Diagnose und fangt dann an, " .. cname .. "  auf den Hintern zu treten." $) cyoa-text!
	drunkchat-up
;

cyoa-choice: drunkchat-food
	($ pname .. "  fangt an " .. cname .. "''s Mund als " .. che .. "  schlaft." $) cyoa-text!
	-1 add-food
	drunkchat-up
;

cyoa-choice: drunkchat-poke
	($ pname .. "  stot " .. cname .. "  an um " .. chim .. "  auf vom Schlaf. Es braucht vier aufeinanderfolgende Stunden des ununterbrochenen Stupsens." $) cyoa-text!
	drunkchat-up
	o'clock@ 4 + o'clock
	4 7 rnd nearest .tpos anchor! zombs
	// 6 10 rnd roomgen{ .zombspawn }
;

cyoa-choice: drunkchat-pet
	($ pname .. "  fangt an zu lecken " .. cname .. "' Gesicht als " .. che .. "  schlaft." $) cyoa-text!
	drunkchat-up
;

cyoa: drunkchat
	// rescue to recruitee ricon
	rescue choosechar cicon
	dead? if npc-died then;
	"Bewusstlos" cyoa-title!
	($ pname .. "  hat so etwas schon einmal gesehen.	Diese Person hat eindeutig zu viel Limonade getrunken gemessen an den herumliegenden Flaschen.	Jetzt " .. che .. "' braucht Nahrung um auszugleichen " .. chis .. "  blutzucker." $) cyoa-text!
	pchar notpet? if
		pchar .cmedical+ if
			pchar charchoice( "  belebt mit medizinischen Fahigkeiten wieder" )choice: drunkchat-med
		then
		LOOT_FOOD pchar .lootamt@ 0 > if
			choice( "Futtere " .. chim .. "  1 Essen" )choice: drunkchat-food
		else
			"There might be some food in a nearby building..." +crtext
		then
	else
		pchar charchoice( "  belebt wieder " .. chim .. "  durch Gesichtslecken" )choice: drunkchat-pet
	then
	choice( "Lass " .. chim .. "  alleine" )choice
	LOOT_FOOD pchar .lootamt@ 1 < if
		choice( "Stupse " .. chim .. "  fur 4 Stunden" )choice: drunkchat-poke
	then
;

cyoa-choice: rescueme-2
	($ cname .. "  beginnt zu folgen " .. pname .. "!
	" .. cHe .. "  konnte nutzlich sein, wenn du " .. chim .. " ' hier lebend herauskommst. Oder eine praktische Ablenkung, wenn du es nicht schaffst." $) cyoa-text!
	rescueget mission{ ' rescuedme to post-mission-cyoa }
;

cyoa-choice: rescueme-d
	($ cname .. "  beginnt zu folgen " .. pname .. "!
	" .. cHe .. "  konnte nutzlich sein, wenn du " .. chim .. " ' hier lebend herauskommst. Oder eine praktische Ablenkung, wenn du es nicht schaffst." $) cyoa-text!
	rescueget mission{ ' rescueddog to post-mission-cyoa }
;

cyoa: rescueme
	rescue choosechar cicon
	dead? if npc-died then;
	"Jeder braucht manchmal Hilfe" cyoa-title!
	($ cname .. "  sagt dass " .. che .. "  will wirklich von diesem Ort verschwinden.	" .. cHe .. "  fragt ob " .. che .. "  dir folgen kann." $) cyoa-text!
		choice( "Lass " .. chim .. "  dir folgen"  )choice: rescueme-2
		choice( "Lass " .. chim .. "  vorerst" )choice
;

cyoa: dogrescue
	rescue choosechar cicon
	dead? if npc-died then;
	
	cchar .bodytype@ 20 = if
	"Der Ultra Wiener" cyoa-title!
		($ "Deutsch sein" .. " ' LIL' SAM BYOOL" rainbold $) text!
		cchar .shootingREV cchar .witsREV		
	else
		"'Was macht ein Hund hier?" cyoa-title!
		($ "Der Hund scheint ungewohnlich zahm zu sein! Die meisten Hunde die noch am Leben sind sind mittlerweile verwildert. Dieser Hund scheint sich sehr fur Menschen zu interessieren." $) text!
	then
		choice( "Lass den Hund dir folgen"  )choice: rescueme-d
		choice( "Lass den Hund erstmal in Ruhe" )choice
;

cyoa-bridge: feral-recruit
	cchar to recruitee goodfx clear-cyoa
	($ "Der Hund will " .. pname .. "!" $) text!
	pchar .morale++
	0.25 cchar .ai.wander_chance! 0 nearest .unseen!
	recruit-yesno
;

cyoa: feralrescue
	interactee .character@ choosechar cicon
	dead? if npc-died then;
	"Hundemeute" cyoa-title!
	($ "'Der Hund ist verwildert! Er ist nicht mehr in der Lage Menschen zu vertrauen. " $) cyoa-text!
		mission-team-stack ' notpet? stack-filter nip 1 < if
			choice( "Lass den Hund in Ruhe" )choice
			pchar dog? if 
				choice( "Rekrutiere den Hund" )choice: feral-recruit
				"Das ist kein Problem, da es keine Menschen in der Nahe gibt."				
			else
				($ pname .. " ' ist kein Hund. Der verwilderte Hund knurrt misstrauisch." $)
			then +crtext
		then;
		pchar isdogpal? if
			($ "Naturlich, " .. pname .. " is different! The dog starts to remember some long forgotten memories of when dogs and humans worked together... " $) +crtext
			choice( "Rekrutiere den Hund" )choice: feral-recruit
		else
			"This dog's eyes glimmer with recognition for a brief moment..." +text
		then
		choice( "Lass den Hund in Ruhe" )choice
;

: southofshared
	interactee .pos lt .pos! // Put it right on the CYOA target we are interacting with
	lt .pos interactee .rad.y@ + lt .rad.x@ 2 * + lt .pos.y! // Move it down by the interactee's rectangular y radius and ours (circular) x2 (no guessing)
	-16 lt .pos.z! // Start above ground
	-1 lt .vel.z! // With a little bounce up
;

: southofcyoa
	southofshared
	lt .sproink // AND NEW SPECIAL FX
;

: southofaltar
	southofshared
	lt .poofmescary
;

: safe1-get 20 add-shell shotgun southofcyoa ;
: safe1 choice( "Schrotflinte mit 20 Schuss" )choice: safe1-get ;
: safe2-get 36 add-bullet dolt southofcyoa ;
: safe2 choice( "Magnum und 36 Schuss Munition" )choice: safe2-get ;
: safe3-get 75 add-bullet ;
: safe3 choice( "Schachtel mit 75 Schuss Munition" )choice: safe3-get ;
: safe4-get 80 add-gas ;
: safe4 choice( "Behalter mit 80 Liter Gas" )choice: safe4-get ;
: safe5-get 45 add-shell ;
: safe5 choice( "Schachtel mit 45 Granaten" )choice: safe5-get ;
: safe6-get 60 add-rifle ;
: safe6 choice( "Schachtel mit 60 Gewehr Munition" )choice: safe6-get ;
: safe7-get 10 add-medical ;
: safe7 choice( "Set mit 10 Medikamenten" )choice: safe7-get ;
: safe8-get 15 add-food ;
: safe8 choice( "Lager mit 15 Essens Portionen" )choice: safe8-get ;
: safe9-get uzi southofcyoa ;
: safe9 choice( "Maschinenpistole" )choice: safe9-get ;
: safe10-get hunting southofcyoa ;
: safe10 choice( "Jagdgewehr" )choice: safe10-get ;
: safe11-get 30 add-rifle rifle southofcyoa ;
: safe11 choice( "Cowboy Gewehr und 30 Schuss Munition" )choice: safe11-get ;
: safe12-geta knight southofcyoa ;
: safe12-getb ak47 southofcyoa ;
: safe12-getc autoshot southofcyoa ;
: safe12-getd slug southofcyoa ;
: safe12
	20 %chance if
		choice( "Ritter Schwert" )choice: safe12-geta
	else
		25 %chance if
			choice( "Granatschuss Schrotflinten" )choice: safe12-getd
		else
			50 %chance if
				choice( "Auto Schrotflinte" )choice: safe12-getc
			else
				choice( "Sturmgewehr" )choice: safe12-getb
			then
		then
	then
 ;

0 var safe-reward
	deck-new
	card: safe1
	card: safe2
	card: safe3
	card: safe4
	card: safe5
	card: safe6
	card: safe7
	card: safe8
	card: safe9
	card: safe10
	card: safe11
	card: safe12
constant SAFE-REWARD
SAFE-REWARD shuffles to safe-reward

: safe-reward-get
	1 nearest .open!
	safe-reward depths 0= if SAFE-REWARD shuffles to safe-reward then
	4 for safe-reward drawcard next	
	clear-cyoa resetsafe
;
: combo? safecombo 0 > ;

cyoa: safe-crack
	"Tresor geknackt!" cyoa-title!
	($ "Es dauert ein paar Stunden, aber " .. pname .. " ' findet die Kombination des Safes heraus!	Neben etwas jetzt nutzlosem Geld hatte es:" $) cyoa-text!
	safe-reward-get
	o'clock@ 2 + o'clock 6 10 rnd nearest .tpos anchor! zombs 
;
cyoa: safe
	pchar humany? not if
	"Tresor vs Haustiere" cyoa-title!
		($ pname .. " ' besitzt nicht das Gehirn das notwendig ist um einen Tresor offnen zu konnen. Nur ein weiteres Beispiel fur die" .. cdogcat .. " " $) cyoa-text!
	then;
	combo? if 
	"Tresor geoffnet!" cyoa-title!
		($ pname .. "  schliet den Tresor auf und offnet ihn!		Neben einigen jetzt nutzlosen Papieren hatte es:" $) cyoa-text!
		safe-reward-get
	else
	"Abgeschlossener Tresor" cyoa-title!
	"Dieser Tresor ist dicht verschlossen und zu robust, um ihn zu zerstoren.	Mit etwas Gluck wird die Kombination oder der Schlussel irgendwo herumliegen." cyoa-text!
		pchar .cmechanic+ if
			choice( "Lass es erstmal so" )choice
			pchar charchoice( "  knackt den Tresor!" )choice: safe-crack
		then
	then 
	
;

cyoa: comboskel
	"Kombinationsnummer" cyoa-title!
	($ "Dieses Skelett halt ein kleines Stuck Papier in der Hand. 	Auf dem Papier befindet sich eine Zahlenreihe die wie ein Vorhangeschloss oder eine Safekombination aussieht!	" .. pname .. " holt es auf." $) cyoa-text! goodfx
	1 to safecombo clear-cyoa
;

cyoa: combokey
	"Groer Metallschlussel" cyoa-title!
	($ "Dieser groe schicke Schlussel sieht so aus als wurde er einen Safe offnen!	" .. pname .. " holt es auf." $) cyoa-text! goodfx
	1 to safecombo deleteme
;

cyoa: combonote
	"Kombinationsnummer" cyoa-title!
	($ "Auf diesem Stuck Papier befindet sich eine Zahlenreihe die wie ein Vorhangeschloss oder eine Safekombination aussieht!	" .. pname .. " holt es auf." $) cyoa-text! goodfx
	1 to safecombo deleteme
;

: lab1 
	cchar .hairtype@ 0 = if 
		($ cname .. "  bekommt neue Haare! Schon!" $) +crtext morale3+ goodfx
		1 25 rnd cchar .hairtype!
	else
		($ cname .. "  verliert " .. chis .. "  haare!" $) +crtext morale3- badfx
		0 cchar .hairtype!
	then
;
: lab2 
	cchar .cwits+ if
		($ cname .. "'s eyes and mind are a bit more blurry..." $) +crtext wits-- shooting-- badfx
		0.8 cchar .scale.head.x! 0.8 cchar .scale.head.y! 0.5 pchar .headoff.y!
	else
		($ cname .. "  fuhlt sich aufmerksamer!" $) +crtext wits++ shooting++ goodfx
		1.2 cchar .scale.head.x! 1.2 cchar .scale.head.y! 0.5 pchar .headoff.y!
	then	
;
: lab3
	cchar .dexterity@ 0 > if
		($ cname .. "  fuhlt sich wie " .. che .. " is slowing down..." $) +crtext 0 cchar .dexterity! badfx
		0.7 pchar .scale.body.y!
	else
		($ cname .. "  fuhlt sich schneller!" $) +crtext dexterity++ goodfx
		1.3 pchar .scale.body.y!
	then	
;
: lab4
	($ cname .. "  fuhlt sich wie ein neuer Mensch!" $) +crtext 6 cchar .morale! goodfx
		0 3 rnd cchar .bodytype!
		0 25 rnd cchar .hairtype!
		0 15 rnd cchar .torsotype!
		0 15 rnd cchar .legstype!	
		0 11 rnd cchar .headtype!
		cchar .female@ 0 = if 
			1
		else
			0
		then cchar .female!
;
: lab5
	cpet? if
		($ cname .. "  fuhlt sich menschlicher!" $) +crtext 1 cchar .loyalty! loyalty-- goodfx
		// 0 cchar .pet! cchar statmod{ .undog } 0 3 rnd cchar .bodytype!
		cchar .dogtosuperdog	
	else
		($ cname .. "  fuhlt sich loyaler!" $) +crtext 5 cchar .loyalty! loyalty++ goodfx
		cchar .doggify cchar .dogtosuperdog	
	then loyaltyREV
;
: lab6
	50 %chance if
		($ cname .. "  fuhlt sich an als ware die Welt groer geworden!" $) +crtext badfx
		0.8 cchar .scale.head.x! 0.8 cchar .scale.head.y! 0.5 cchar .headoff.y!
		0.7 cchar .scale.body.y! 0.7 cchar .scale.body.x!
	else
		($ cname .. " fuhlt sich gro und machtig an!" $) +crtext vitality++ goodfx
		1.2 cchar .scale.head.x! 1.2 cchar .scale.head.y! 0.5 cchar .headoff.y!
		1.2 cchar .scale.body.y! 1.2 cchar .scale.body.x!
	then	
;
: lab7
	cchar .vitality@ 3 > if
		($ cname .. " fuhlt sich schwach an!" $) +crtext 2 cchar .vitality!  2 cchar .health! badfx
		0.6 cchar .scale.body.x!
	else
		($ cname .. " fuhlt sich stabil an!" $) +crtext vitality++ goodfx
		1.5 cchar .scale.body.x!
	then	
;
: lab8
	cchar .specialbody@ 73 = cchar .specialhead@ 73 = and if
		($ cname .. " turns into a dogdogdogtaur! It's unclear what this actually means..." $) +crtext
	then;
	cpet? if
		($ cname .. " turns into a dogman: a dog with the body of a human!" $) +crtext goodfx
		0 cchar .pet! cchar statmod{ .undog } 0 3 rnd cchar .bodytype! 73 cchar .specialhead!
	then;
	cchar .specialbody@ 73 = cchar .specialhead@ 73 = or if
		($ cname .. " " $) +crtext goodfx 73 cchar .specialhead! cchar .dogtaur
	else
		($ cname .. " " $) +crtext goodfx
		cchar .dogtaur
	then	
;
: lab9
	cchar .specialtype@ 74 = if
		($ "'Eine Fliege verirrt sich in die Maschine! Scheint sie nicht zu storen " .. cname .. "..." $) +crtext
	then;
	cpet? if
		($ cname .. "  verwandelt sich in eine Hundefliege! Wie schrecklich!" $) +crtext goodfx
		0 cchar .pet! cchar statmod{ .undog } 
		50 %chance if 73 cchar .specialhead! cchar .flybody else 73 cchar .specialbody! cchar .flyhead then
	then;
	($ "Eine Fliege verirrt sich in die Maschine als sie startet! " .. cname .. " gets spliced up with fly DNA! Bonus!!!" $) +crtext goodfx cchar
	cchar .specialbody@ 74 = cchar .specialhead@ 74 = or if
		.fly
	else
		rnd5050 if .flyhead else .flybody then
	then	
;


0 var lab-effect
	deck-new
	card: lab1
	card: lab2
	card: lab3
	card: lab4
	card: lab5
	card: lab6
	card: lab7
	card: lab8
	card: lab9
constant LAB-EFFECT
LAB-EFFECT shuffles to lab-effect

cyoa-choice: lab-go
	"Experimentergebnisse" cyoa-title!
	($ cname .. "  wird von mysteriosen Wissenschaftsstrahlen beschossen bis die Maschine aufhort zu arbeiten. " .. cHe .. "  fuhlt sich energiegeladen!" $) text!
	strength++ fitness++ cchar .fullheal
	lab-effect depths 0= if LAB-EFFECT shuffles to lab-effect then
	drawcard clear-cyoa
;

cyoa: lab
	"Mysterioses Gerat" cyoa-title!
	($ "'Sieht aus wie eine Art verrucktes Ding der Wissenschaft. Man kann nicht sagen was das bewirken konnte wenn man damit herumspielt." $) text!
		choice( "Lass es erstmal so" )choice
		pchar charchoice( " tritt in die Maschine ein!" )choice: lab-go
;

: altarpush lt .poofmescary ;

cyoa-choice: altar-1
	($ cname .. "  beruhrt den Altar und wird sofort von seltsamen Energien gesprengt!" $) text!
	ouch2- bitefx 300 tint_trigger 0 light_mode!
	alive? if 
		($ cHe .. "  schafft es zu uberleben und fuhlt sich anders als zuvor." $) +crtext goodfx
		strength++ fitness++ shooting++
	else
		($ "Fur " .. chis .. "  opfer, der Altar verleiht ein Geschenk!		In der Ferne ein " .. "gruseliger Kobold" fbold .. "  lacht auf koboldhafte Weise." $) +crtext
		33 %chance if ' .strength++ else 50 %chance if ' .fitness++ else ' .shooting++ then then foreach-team-char
		goblin-laugh
		0 6 rnd case
		0 of 30 sshot altarpush shotgun southofaltar endof
		1 of 50 sbullet altarpush dolt southofaltar endof
		2 of 10 for 1 LOOT_FOOD spawnscat altarpush next endof
		3 of 40 srifle altarpush rifle southofaltar endof
		4 of 60 sgas altarpush endof
		5 of 7 for 1 LOOT_MEDICAL spawnscat altarpush next endof
		6 of 
			70 %chance if 
				33 %chance if aluminum else 50 %chance if machete2 else fire then then
			else 
				60 %chance if hunting else 70 %chance if uzi else autoshot then then
			then southofaltar
		endof endcase
	then
;

cyoa: altar
	"Opferaltar" cyoa-title!
	picon!
	($ cname .. "  steht in der Nahe eines steinernen Altars. Es muss die Quelle des unheilvollen Gefuhls sein das von diesem ganzen Ort ausgeht.	Der Altar scheint " .. "extrem gefahrlich!" rbold .. " ' Es ist ein bisschen seltsam dass jemand so etwas in seinem Haus hat.	Man sollte wahrscheinlich nicht damit herumspielen!" $) text!
	"WARNUNG: TOTET JEDEN DER NICHT VOLLSTANDIG GESUND IST!" rbold +crtext
		choice( "Haben " .. cname .. "  altar beruhren" )choice: altar-1
		choice( "Altar vorerst in Ruhe lassen" )choice
;

}

: randommag
	magazine 0 4 rnd cyoa{ to bookmagtype ' bookmag-get cyoa! } 50 health! scatter
;

: randombook
	book 5 9 rnd cyoa{ to bookmagtype ' bookmag-get cyoa! } 50 health!
;

: randombookmag
	50 %chance if
	book 5 9
	else
		magazine 0 4
	then rnd cyoa{ to bookmagtype ' bookmag-get cyoa! } 50 health!
;

: altar altarstand cyoa{ ' altar cyoa! } ;
: laboratory labmachine cyoa{ ' lab cyoa! } ;
: metalsafe safe cyoa{ ' safe cyoa! } ;
: combokey goldkey cyoa{ ' combokey cyoa! } delete-covering ;
: comboskel combokey skelscat ;
// skelscat cyoa{ ' comboskel cyoa! } 12 health! ;
: combonote wrotenote scatter cyoa{ ' combonote cyoa! } delete-covering ;

: new-drunk-npc new-npc lt .character@ dup .liedown 1 lt .unseen! 
	0 over .ai.wander_chance! 0 over .ai.attack_chance! drop
	// lying on random side
	rndsign 90 * lt .angle!
	160 190 frnd lt .aim_angle! 
	npc@rescue
	lt cyoa{ ' drunkchat cyoa! }
	lt .character@ .notake
;

: new-rescue-npc new-npc@ rescue-weapon over .weapona! 1 lt .unseen! 0 lt .leaveok! npc@rescue cyoa{ ' rescueme cyoa! } drop ;
: new-feraldog map{ selected } . cr new-npc@ .doggify 1 lt .unseen! 0 lt .leaveok! npc@rescue lt cyoa{ ' feralrescue cyoa! } drop ;
: new-rescue-dog 
	map{ selected } . cr new-npc@ 
	1 %chance kspet-checker 1 < and if
		.sambyoolify
	else
		.doggify
	then
	1 lt .unseen! 0 lt .leaveok! 
	npc@rescue lt cyoa{ ' dogrescue cyoa! } drop 
;

// FIXME: Things like these NPC words should be somewhere else
: inside-npc new-npc 0 lt .leaveok! 1 lt .unseen! lt .character@ ;
: still-npc new-npc 0 lt .leaveok! 1 lt .unseen! 0 lt .character@ .ai.wander_chance! 185 rnd5050 + lt .aim_angle! lt .character@ ;
: nomove-npc new-npc lt .character@ args( ch )
	185 rnd5050 + lt .aim_angle!
	0 <- ch .ai.wander_chance!
	50 <- ch .ai.safety_leash!
;


// Mansion loot

: hauntedwareset hauntspoon .drift hauntfork .drift hauntknife .drift ;

0 value mansiontype

: mansionloot1
	mansiontype 0 > if // If a GHOST MANSION
		goldspear
	else // If a normal dark mansion
		goldknife
	then .drift
;
: mansionloot2 hauntedwareset 3 4 rnd sfood ;
// Used to be mansiontype 0 > if turretred else turretgreen then .drift
: mansionloot3 mansiontype 0 > if 6 else 3 then for pukeyball .drift next ;
: mansionloot4 mansiontype 0 > if dragonslayer else megaknight then .drift ;
: mansionloot5 cavalry .drift ;

0 stack
	' mansionloot1 shove
	' mansionloot2 shove
	' mansionloot3 shove
	' mansionloot4 shove
	' mansionloot5 shove
value mansionloot-picker-base
mansionloot-picker-base shuffles var mansionloot-picker

: mansionloot-pick mansionloot-picker depths 0= if mansionloot-picker-base shuffles to mansionloot-picker then pops nip execute ;

// Effective stats used to be here, was moved to charfilt.df due to weird dependencies

// =================
// Quick stat checks
// =================

: statroll 2 skillcheck? ;

: moraleroll cchar .morale statroll ;
: attituderoll cchar .attitude statroll ;
: temperroll cchar .composure statroll ;
: loyaltyroll cchar .loyalty statroll ;
: witsroll cchar .wits statroll ;

: charm-sum dup .attitude swap .wits + ;
: charmroll cchar charm-sum 2 / statroll ;

: strengthroll cchar .strength statroll ;
: medicalroll cchar .medical statroll ;
: mechanicroll cchar .mechanical statroll ;
: shootingroll cchar .shooting statroll ;
: fitnessroll cchar .fitness statroll ;

// checks for the choicechar to have over 4 or under 2 in a stat

: cmorale- cchar .morale low ;
: cattitude- cchar .attitude low ;
: ctemper- cchar .composure low ;
: cloyalty- cchar .loyalty low ;
: cwits- cchar .wits low ;

: cstrength- cchar .strength low ;
: cmedical- cchar .medical low ;
: cmechanic- cchar .mechanical low ;
: cshooting- cchar .shooting low ;
: cfitness- cchar .fitness low ;

: cmorale+ cchar .morale high ;
: cattitude+ cchar .attitude high ;
: ctemper+ cchar .composure high ;
: cloyalty+ cchar .loyalty high ;
: cwits+ cchar .wits high ;

: cstrength+ cchar .strength high ;
: cmedical+ cchar .medical high ;
: cmechanic+ cchar .mechanical high ;
: cshooting+ cchar .shooting high ;
: cfitness+ cchar .fitness high ;

: morale+roll cmorale+ moraleroll or ;
: attitude+roll cattitude+ attituderoll or ;
: temper+roll ctemper+ temperroll or ;
: loyalty+roll cloyalty+ loyaltyroll or ;
: wits+roll cwits+ witsroll or ;
: strength+roll cstrength+ strengthroll or ;
: medical+roll cmedical+ medicalroll or ;
: mechanic+roll cmechanic+ mechanicroll or ;
: shooting+roll cshooting+ shootingroll or ;
: fitness+roll cfitness+ fitnessroll or ;

: decruited
	+cr ($ cname .. "  hat das Team verlassen!" $) +text
;

: screcruit recruitee .specialtype! ;
: decruit-bad-silent TEAM_STATUS_BAD_LEFT cchar .decruit ;
: decruit-bad decruited decruit-bad-silent badfx ;
: decruit-bad-takeweapons ctakeweapons decruit-bad ;
: decruit-bad-silent-takeweapons ctakeweapons decruit-bad-silent ;
: decruit-good-silent ctakeweapons TEAM_STATUS_GOOD_LEFT cchar .decruit ;
: decruit-good decruited decruit-good-silent goodfx ;


// pain words moved upwards

: 0weapona
	cchar .weapona@ 0 > if
		($ cHe .. "  verliert " .. chis .. "  primarwaffe!" $) +crtext
		0 cchar .weapona!
	then
;
: 0weaponb
	cchar .weaponb@ 0 > if
		($ cHe .. "  verliert " .. chis .. "  sekundarwaffe!" $) +crtext
		0 cchar .weaponb!
	then
;
: 0weaponc
	cchar .weaponb@ 0 > if
		($ cHe .. "  verliert " .. chis .. "  tertiarwaffe!" $) +crtext
		0 cchar .weaponc!
	then
;
: 0weapons
	cchar .weaponc@ 0 > cchar .weaponb@ 0 > cchar .weapona@ 0 > or or if
		($ cHe .. "  verliert " .. chis .. "  waffen!" $) +crtext
		0 cchar .weaponb! 0 cchar .weapona! 0 cchar .weaponc!
	then
;

: trunk.killer 
	trunk.count 0 > if
		($ trunk.count rbold .. "  WAFFEN VERLOREN!" rbold $) +crtext
		trunk.clear
	then
;

: morale--gourmandall ' .morale--gourmand foreach-team-char ;

: chowtime
	fullmeal if
		($ Thegroup .. "  isst eine ordentliche Mahlzeit." $)
		cyoa-text-append
		chowday
		goodfx
		' .cmorale-recover foreach-team-char
	then;
	halfmeal if
		($ Thegroup .. "  hat wenig Nahrung und isst weniger." $)
		cyoa-text-append
		chowday
		badfx
		' .morale-- foreach-team-char morale--gourmandall
	then;
	trunk-food 0 = if
		($ Thegroup .. "  stellt fest dass es uberhaupt keine Nahrung mehr gibt. Verzweiflung schleicht sich ein." $)
		cyoa-text-append
		team-count 1 > if
			' .morale3- foreach-team-char
		else
			soloer .morale2-
		then morale--gourmandall badfx
	then;
	($ Thegroup .. " ' hatte nicht annahernd genug Nahrung zum Essen. Zweifel nagen." $)
		cyoa-text-append
	chowday
	badfx
	' .morale2- foreach-team-char morale--gourmandall
;

// Sleeping

: tired statmod{ .tired } ;
: untired statmod{ .untired } ;

: nosleep ' tired foreach-team-char ;
: sleep	' untired foreach-team-char ;
: sleep-except cchar tired cchar ' untired foreach-team-char-except ;

: 50nosleep 50 %chance if tired then ;
: 5050nosleep ' 50nosleep foreach-team-char ;

: tiredcamp chowtime nosleep ;
: fullcamp chowtime sleep ;

// Words for trading
: charm-text choosechar 
	($ "Der Handler fallt auf " .. cname .. "''s Charme herein und gibt extra!" $) 
	+crtext +cr witsREV attitudeREV cicon
;

: charm-gas	most-charming if charm-text 40 trunk-gas+ then ;
: charmhalf-gas	most-charming if charm-text 20 trunk-gas+ then ;

: charm-bullet most-charming if charm-text 30 trunk-bullet+ then ;
: charmhalf-bullet most-charming if charm-text 15 trunk-bullet+ then ;

: charm-shotgun-shell most-charming if charm-text 20 trunk-shotgun-shell+ then ;
: charmhalf-shotgun-shell most-charming if charm-text 10 trunk-shotgun-shell+ then ;

: charm-rifle-shell	most-charming if charm-text 25 trunk-rifle-shell+ then ;
: charmhalf-rifle-shell	most-charming if charm-text 12 trunk-rifle-shell+ then ;

: charm-medical	most-charming if charm-text 5 trunk-medical+ then ;
: charmhalf-medical	most-charming if charm-text 2 trunk-medical+ then ;

: charm-allammo	most-charming if charm-text 20 trunk-bullet+ 10 trunk-shotgun-shell+ 15 trunk-rifle-shell+ then ;
: charmhalf-allammo	most-charming if charm-text 10 trunk-bullet+ 5 trunk-shotgun-shell+ 7 trunk-rifle-shell+ then ;

: food-all-to-gas trunk-food 10 * trunk-gas+ eat-all ;
: food-15-to-gas 150 trunk-gas+ -15 trunk-food+ charm-gas ;
: food-10-to-gas 100 trunk-gas+ -10 trunk-food+ charmhalf-gas ;
: food-5-to-gas 50 trunk-gas+ -5 trunk-food+ ;

: food-all-to-bullet trunk-food 8 * trunk-bullet+ eat-all ;
: food-15-to-bullet 120 trunk-bullet+ -15 trunk-food+ charm-bullet ;
: food-10-to-bullet 80 trunk-bullet+ -10 trunk-food+ charmhalf-bullet ;
: food-5-to-bullet 40 trunk-bullet+ -5 trunk-food+ ;

: food-all-to-shotgun-shell trunk-food 5 * trunk-shotgun-shell+ eat-all ;
: food-15-to-shotgun-shell 75 trunk-shotgun-shell+ -15 trunk-food+ charm-shotgun-shell ;
: food-10-to-shotgun-shell 50 trunk-shotgun-shell+ -10 trunk-food+ charmhalf-shotgun-shell ;
: food-5-to-shotgun-shell 25 trunk-shotgun-shell+ -5 trunk-food+ ;

: food-all-to-rifle-shell trunk-food 6 * trunk-rifle-shell+ eat-all ;
: food-15-to-rifle-shell 90 trunk-rifle-shell+ -15 trunk-food+ charm-rifle-shell ;
: food-10-to-rifle-shell 60 trunk-rifle-shell+ -10 trunk-food+ charmhalf-rifle-shell ;
: food-5-to-rifle-shell 30 trunk-rifle-shell+ -5 trunk-food+ ;

: food-all-to-medical trunk-food 1 * trunk-medical+ eat-all ;
: food-15-to-medical 15 trunk-medical+ -15 trunk-food+ charm-medical ;
: food-10-to-medical 10 trunk-medical+ -10 trunk-food+ charmhalf-medical ;
: food-5-to-medical 5 trunk-medical+ -5 trunk-food+ ;

: food-all-to-allammo 
	trunk-food 5 * trunk-bullet+ 
	trunk-food 4 * trunk-rifle-shell+ 
	trunk-food 3 * trunk-shotgun-shell+ 
	eat-all 
;
: food-15-to-allammo 75 trunk-bullet+ 45 trunk-shotgun-shell+ 60 trunk-rifle-shell+ -15 trunk-food+ charm-allammo ;
: food-10-to-allammo 50 trunk-bullet+ 30 trunk-shotgun-shell+ 40 trunk-rifle-shell+ -10 trunk-food+ charmhalf-allammo ;
: food-5-to-allammo 25 trunk-bullet+ 15 trunk-shotgun-shell+ 20 trunk-rifle-shell+ -5 trunk-food+ ;

: rob-guiltloyal
	dup .cloyalty+ if
		dup .loyaltyREV
		dup .morale2-
	then;
	dup .loyaltyREV
	dup .morale--
;
: rob-guilt?
	dup .cloyalty- if
		dup .loyaltyREV
		dup .morale++
	then;
	rob-guiltloyal
;
: rob-guilt2?
	dup .cloyalty- if dup .loyaltyREV then;
	rob-guiltloyal
;
: rob-guilt	' rob-guilt? foreach-team-char ;
: rob-guilt2 ' rob-guilt2? foreach-team-char ;

: rob-fail?
	70 %chance if .ouch-- else .morale2- then
;
: rob-fail ouch-- ' rob-fail? foreach-team-char ;
: rob-megafail?
	dup .ouch-- dup .morale3-
;
: rob-megafail ' rob-megafail? foreach-team-char ouch-- ;

// Words for dealing with bandits

: ezbandit? road{ easybandit-mode } 0 > ;
: ezbandit2/ ezbandit? if 2 / then ;

: anyammo? trunk-bullet 1 > trunk-rifle-shell 1 > trunk-shotgun-shell 1 > or or ;

: ishaggler? statmod{ .haggler? } ;
: numhaggler team-stack ' ishaggler? stack-filter ;
: haggler? numhaggler 0 > ;

: bandit-toll team-count 
	ezbandit? if // EZ mode
		haggler? gstats{ perk-haggler } 2 >= and if drop
			gstats{ perk-haggler } 3 >= if
			2
			else
			3
			then * 1
		else drop // No haggler
			3 * 3
		then
	else // Deadlier and beyond
		haggler? gstats{ perk-haggler } 2 >= and if drop
			gstats{ perk-haggler } 3 >= if
			3			
			else
			4
			then * 2
		else drop // No haggler
			4 * 4 
		then
	then +
;
// 5 * 5 + ;
: bandit-toll2 bandit-toll 1.3 / >int ;

: bandit-toll? trunk-food bandit-toll 1 - > ;
: bandit-toll-pay bandit-toll -1 * trunk-food+ badfx ;
: bandit-toll-pay2 bandit-toll2 -1 * trunk-food+ badfx ;
: bandit-ammo
	trunk-bullet 0 > if trunk-bullet ezbandit2/ -1 * trunk-bullet+ then
	trunk-rifle-shell 0 > if trunk-rifle-shell ezbandit2/ -1 * trunk-rifle-shell+ then
	trunk-shotgun-shell 0 > if trunk-shotgun-shell ezbandit2/ -1 * trunk-shotgun-shell+ then
;
: bandit-med
	trunk-medical 0 > if trunk-medical ezbandit2/ -1 * trunk-medical+ then
;
: bandit-gas
	trunk-gas 0 > if trunk-gas -1 * trunk-gas+ then
;
: bandit-gastank
	trunk-gas 100 > if trunk-gas 100 - -1 * >int trunk-gas+ then
;
: bandit-ammomed bandit-ammo bandit-med ;
: bandit-food trunk-food 0 > if eat-all then ;
: bandit-ammofood bandit-food bandit-ammo ;
: bandit-most bandit-ammofood bandit-med ;
: bandit-mostgas bandit-most bandit-gastank ;
: bandit-all bandit-most bandit-gas ;

: bandit-ammo2
	trunk-bullet 1 > if trunk-bullet 2 / ezbandit2/ -1 * >int trunk-bullet+ then
	trunk-rifle-shell 1 > if trunk-rifle-shell 2 / ezbandit2/ -1 * >int trunk-rifle-shell+ then
	trunk-shotgun-shell 1 > if trunk-shotgun-shell 2 / ezbandit2/ -1 * >int trunk-shotgun-shell+ then
;
: bandit-med2
	trunk-medical 1 > if trunk-medical 2 / ezbandit2/ -1 * >int trunk-medical+ then
;
: bandit-ammomed2
	bandit-ammo2 bandit-med2
;
: bandit-food2
	trunk-food 1 > if trunk-food 2 / ezbandit2/ -1 * >int trunk-food+ then
;
: bandit-supplies2
	bandit-ammomed2 bandit-food2 bandit-gastank
;

: vname victim .colourname ;
: bname bully .colourname ;
: bully-st bully if bully .specialtype@ then; 0 ;
: camper-st sc-camper if sc-camper .specialtype@ then; 0 ;

