	: HORSE-oneline1 "*NEIIIIGGGGGHHHH*" ;
	: HORSE-oneline2 "BRRRBRRRRBRRRRRTH" ;
	: HORSE-oneline3 "*neia*" ;
	: HORSE-oneline4 "NEEIIIIGH!" ;
	: HORSE-oneline5 "NENHUM!" ;

	deck-new
		card: HORSE-oneline1
		card: HORSE-oneline2
		card: HORSE-oneline3
		card: HORSE-oneline4
		card: HORSE-oneline5
	constant HORSE-ONELINERS
	HORSE-ONELINERS var horse-oneliners
	HORSE-ONELINERS shuffles to horse-oneliners

	: HORSE-emote1 "  neia." ;
	: HORSE-emote2 "  rinha." ;
	: HORSE-emote3 "  olha para a frente sem expressao." ;
	: HORSE-emote4 "  se equivoca com cavalos." ;

	deck-new
		card: HORSE-emote1
		card: HORSE-emote2
		card: HORSE-emote3
		card: HORSE-emote4
	constant HORSE-EMOTES
	HORSE-EMOTES var horse-emotes
	HORSE-EMOTES shuffles to horse-emotes	
	
: horse-oneliner
	horse-oneliners depths 0= if HORSE-ONELINERS shuffles to horse-oneliners then
	blurbslot 0= if
		drawcard blurbsay
	then
;

: horse-emote
	horse-emotes depths 0= if HORSE-EMOTES shuffles to horse-emotes then
	blurbslot 0= if
		qmsg ($ me .name@ .. horse-emotes drawcard $) txt
	then
;

	deck-new
	4 cards: ...say
	4 cards: horse-emote
	5 cards: horse-oneliner

	constant BLURB-HORSE-DECK
	BLURB-HORSE-DECK var blurb-horse-deck
	BLURB-HORSE-DECK shuffles to blurb-horse-deck
