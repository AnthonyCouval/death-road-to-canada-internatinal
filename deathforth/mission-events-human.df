
mission{

// : random-death-phrase

// pick from list
0 stack
	"BARF!" shove
	"OH, MERDE" shove
	"PUTAIN!" shove
	"C... CA.. CANADA.." shove
	"naannn" shove
	"crotte!" shove
	"eh attenez... aaaAAAHH" shove
	"bon sang" shove
	"argh" shove
	"woops!" shove
	"Je regrette rien!" shove
	"Je regrette TOUT!" shove
	"Dites a Tim Horton que je..." shove
	"aaaaaaaaa!" shove
	"C'est la faute de tout le monde sauf moi!" shove
	"Vraiment mature les zombies, VRAIMENT mature!" shove
	"aaaaa!" shove
	"a l'aiiiide!" shove
	"On s'revoit de l'autre cote" shove
	"Ce mec me mord!" shove
	"Argh!" shove
	"Eh bien... ça pourrait etre pire" shove
	"Je savais que ça arriverait!" shove
	"Oh Oh... mince!" shove
	"Aie! Aie!!" shove
	"He.. arrete ca" shove
	"J'espere que je deviendrai pas un squelette" shove
	"S'il vous plait, ne jettez pas mon squelette partout" shove
	"Si seulement j'aurais jete plus de chaises..." shove
	"cool.." shove
	"wow.." shove
	"Tout va bien! TOUT VA BIEN!" shove
	"Aaaaargh!" shove
	"Peu importe!" shove
	"Qui a besoin du Canada de toute façon?" shove
	"NOON!" shove
	"Caaaaaaaaaaaaaaaaarl!" shove
	"Aie!" shove
	"Je crois que j'ai laisse tomber mon chewing-gum!" shove
	"Temps mort! Temps mort!" shove
	"C'EST PAS DU JEU " shove
	"Attendez! j’ai une seconde chance !" shove
	"Tout ca c'est de ta faute!" shove
	"Euh... Je voulais pas faire ça.." shove
	"Tout fait parti du plan! haha!" shove
	"Dis a tout le monde que mes derniers mots etaient cool!" shove
	"Tricheurs! Vous les zombies avez triche!" shove
	"Sauve-moi, Rosdower!" shove
	"sauuuvvvee moiiii" shove
	"EUhhh... un peu d'aide?" shove
	"A L'AIDE" shove
	"aidezzz moiii" shove
	"Ne vous inquietez pas, j'ai un plan!" shove
	"Ow ow ow ow ow" shove
	"Personne ne touche a mes affaires!" shove
	"Enterrez-moi... avec mes boites de conserve !" shove
	"Enterrez-moi avec mes chères cles de voiture!" shove
	"Enterre-moi avec une douce pierre tombale!" shove
	"Tant pis! Plus de chance la prochaine fois." shove
	"A deux doigts! Oh.. OK.." shove
	"J'ai un probleme, la." shove
	"Ca pique!" shove
	"Ha! Ca chatouille!" shove
	"Amenez-le dessus!!!!!!" shove
	"WOOOooooooouch!" shove
	"Pas de problemes! I got this!" shove
	"Argh! Fonce!" shove
	"C'etait une mauvaise idee!" shove
	"Attendez! J'avais quelque chose dans l'oeil!" shove
	"Je vais bien. Je vais m'en aller!" shove
	"Le vent vient de me faire tomber." shove
	"Heh, c'est rien! j'ai connu pire!" shove
	"je peux encore tenir! Une seconde!" shove
	"Et aloors!" shove
	"*roulant des yeux sur les zombies avec degout*" shove
	"Excusez-moi... arretez de me manger s'il vous plait" shove
	"He! Mauvais zombie ! Mauvais Zombie!" shove
	"Les zombies lents sont pas censes etre dangereux!" shove
	"eeeeep" shove
	"shrieeeeeeek" shove
	"*g...gulp*" shove
	"Je vais les rejoindre!!" shove
	"J'ai compris.." shove
	"J'en ai MARRE!!" shove
	"Ca ce fait pas!" shove
	"Serieusement!" shove
	"Soit ces zombies s'en vont... soit je le fais!" shove
	"gurk" shove
	"owowowowow" shove
	"ugh!" shove
	"OOF!" shove
	"Pour l'amour des crepes..." shove
	"Ow my spleen" shove
	"J'espere que ce n'est que du ketchup" shove
	"Eh bien, je vais etre l'oncle d'un singe. J'suis mort!" shove
	"KAKAROOOOT!!" shove
	"Crachat de zombie, degoutant!!" shove
	"Quoi qu'il arrive... tu dois te pavaner" shove
	"I've had worse..." shove
	"ZOINKS!" shove
	"KHAAAAAAAN!!" shove
	"Canada? plutot Can'tada" shove
var death-saying-stack

// shuffles pops nip
// ;

0 stack
	"Ces zombies me repoussent" shove
	"Ils deviennent un peu personnel." shove
	"Il n'y a pas d'espoir!" shove
	"*YAWN*" shove
	"J'ai ete mordu, c'est pas grave!" shove
	"Arrete, binoclare!" shove
	"pas de pb !" shove
	"Quelle petite morcure!" shove
	"2 legit 2 quit" shove
	"Je suis trop jeune pour mourrir!" shove
	"Arretez de me toucher!" shove
	"C'est mes affaires, pas les tiennes." shove
	"Super!" shove
	"BOUCLIER..DE..L'ESPOIR!" shove
	"Bouclier... de.... l'ESPOIR" shove
	"je peux encore y arriver ! Au Canada!" shove
	"Je peux encore courir... il y a encore de l'espoir!" shove
	"Encore debout!" shove
	"Ow ow ow ow" shove
	"Pas de probleme, pas de probleme" shove
	"Je vais bien... j'ai pas ete mordu !" shove
	"Je peux m'en passer!" shove
	"Je me sens toujours assez optimiste, je pense!" shove
	"BOUCLIER D'ESPOIR!" shove
	"BOUUCLIIERRR D'ESSPOIRRR!" shove
var shieldofhope-saying-stack

: random-death-phrase death-saying-stack rndpicks nip ;
: shieldofhope-phrase shieldofhope-saying-stack rndpicks nip ;

: .shieldofhope-saying args( thing ) shieldofhope-phrase <- thing statmod{ .yellmsglong } ;
: .death-saying args( thing ) random-death-phrase <- thing statmod{ .yellmsglong } ;
: thingyell .thing@ statmod{ .yellmsglong } ;

: death-handler args( chara )
	<- chara .char-droploot
	deadtally
	
	<- chara dog? if
		70 %chance if
			"whiiiiiiiine" <- chara thingyell
		else
			"ARRROOOOOO!" <- chara thingyell
		then
	then;

	<- chara goat? if
		1 %chance if
			"ce n'était PAS une reference de goat simulator" fbold <- chara thingyell
		else
			"BAAAAAAAAAAA!" fbold <- chara thingyell
		then
	then;
	
	<- chara pig? if
		1 %chance if
			"SOME PIG" fbold <- chara thingyell
		else
			"SQUEEEEEL!" rbold <- chara thingyell
		then
	then;	
	
	<- chara cat? if
		1 %chance if
			"je deteste les lundis" fbold <- chara thingyell
		else
			"HISSSSSSSSSSSSS!" fbold <- chara thingyell
		then
	then;
	
	<- chara ispet? if
		"BLORFFF!" <- chara thingyell
	then;

	// TODO: Enumerate special characters instead of using magic numbers

	<- chara .specialtype@ 76 = if RED "*GNOOOOORT*" .. <- chara thingyell then;
	<- chara .specialtype@ 77 = if RED "nuuuuuuurp!" .. <- chara thingyell then;
	
	<- chara .perk@ "BART" $= if RED "DON'T HAVE.... COW" .. <- chara thingyell then;
	
	<- chara .specialtype@ 79 = if RED "COLD.... STEEEEEEEL" .. <- chara thingyell then;
	<- chara .specialtype@ 93 = if RED "............." .. <- chara thingyell then;
	<- chara .specialtype@ 95 = if RED "YOU ARE DEAD... no wait I am dead" .. <- chara thingyell then;
	<- chara .specialtype@ 97 = if RED "SEE YOU LATER BUB" .. <- chara thingyell then;
	<- chara .perk@ "Skeleton Queen" $= if "Finally, I get to be 100% skeleton!" <- chara thingyell then;
	<- chara .specialtype@ 104 = if RED "THANKS A LOT... OBAMA... CAAAAAAAAAW" .. <- chara thingyell then;

	<- chara .specialtype@ 106 = if RED "BURY ME... WITH MY LOG" .. <- chara thingyell then;
	<- chara .specialtype@ 108 = if RED "YAAAAARRRRRggghhhhh!" .. <- chara thingyell then;
	<- chara .specialtype@ 109 = <- chara .specialtype@ 110 = or if FLASHY "ZZZZZZZZZT!" .. <- chara thingyell then;
	<- chara .specialtype@ 39 = if RED "SHAZBOT!" .. <- chara thingyell then;
	<- chara .specialtype@ 40 = if BLUE "HONK!" .. <- chara thingyell then;
	<- chara .specialtype@ 88 = if FLASHY "*TWANG*" .. <- chara thingyell then;
	<- chara .specialtype@ 96 = if RED "I'M BONED!" .. <- chara thingyell then;
	<- chara .specialtype@ 98 = if BLUE "ANOTHER DISASTER CAUSED BY COSPLAY!" .. <- chara thingyell then;
	<- chara .specialtype@ 102 = if RED "The future is crap!" .. <- chara thingyell then;
	<- chara .specialtype@ 10 = if RED "I made a little miscalculation..." .. <- chara thingyell then;
	<- chara .specialtype@ 20 = if RED "For the bees!" .. <- chara thingyell then;
	<- chara .specialtype@ 90 = if RED "I hope you all burn!" .. <- chara thingyell then;
	
	// Default sayings, if none of above apply
	70 %chance if
		<- chara .thing@ .death-saying
	else
		"BARF!" <- chara thingyell
	then
;

statmod{
: human-thing-events (* "HUMAN THING EVENT: " type PRINTSTACK *) 0 args( thing eventid chara )
	<- thing .character@ -> chara

//	beep
//	"EVENT ID: " type <- eventid .s cr

		 <- eventid THING_EVENT_WAS_HIT
		?(
	
		// <- chara .dead? if then; - Doesn't work with a dead cancel
		<- chara .health@ 1 < if
			<- chara isbort? if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "AY CRUMBO!!!" .. <- chara thingyell
				<- chara .fullheal <- chara .superbortify 
			then;
			<- chara .trait@ "AMERICA" $= if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "CAAAAAAAAAAAAAAW!" .. <- chara thingyell
				<- chara .july4ify 
			then;
			<- chara .trait@ "One Foot in Grave" $= if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "The skeleton was inside of me the whole time!" .. <- chara thingyell
				<- chara .deadsamedify
			then;
			<- chara .perk@ "Shield of Hope" $= <- chara .morale SHIELDOFHOPE_MIN > and if
				<- chara morale--hopeshield
				<- chara .thing@ .shieldofhope-saying
				1 <- chara .health!
				1 <- thing .hitpoints!
			else
				<- chara .trait@ "Phoenix" $= if
					<- thing .pos 12 xypowboom -1 lt .hitcheck.blast!
					<- chara .phoenixify
					<- chara .perk@ "Pyromaniac" $= if then;
					25 <- chara .thing@ .flammability!
				then
			then
		then
			
		);
	
		THING_EVENT_DIED
		?(

			<- chara .name@ type " DIED!!!!" print
			<- chara death-handler

		);

		// Here you can set up anything on the human THING when it's created in a mission
		THING_EVENT_NEW
		?(
			// Change radius to smaller value here if you want

			5 <- thing .rad.x!

		);

		THING_EVENT_GOT_FATIGUED
		?(
			<- chara .tired? if <- chara MOD_TIRED #mod-icon$ <- thing .report then;
		);
;
}

last human-default-events!


// /////////////// //
// HUMAN AI ORDERS //
// /////////////// //

-1 value last-combat-order
-1 value last-tactic-order

: check-new-combat
	last-combat-order orders_combat@ dup ( last order order ) to last-combat-order ( last order ) <> ( true/false )
;

: check-new-tactic
	last-tactic-order orders_tactic@ dup to last-tactic-order <>
;

0 enum COMBAT_AUTO
enum COMBAT_MELEE
enum COMBAT_GUNS
drop

0 enum TACTIC_AUTO
enum TACTIC_FLEE
enum TACTIC_ATTACK
drop

: combat_report
	orders_combat@ case
		COMBAT_MELEE of
			"SMASHIN!"
		endof
		COMBAT_GUNS of 
			"SHOOTIN!"
		endof
		otherwise
			"EITHER"
		( COMBAT_AUTO )
	endcase
;

: tactic_report
	orders_tactic@ case
		TACTIC_FLEE of 
			"RUNNIN!"
		endof
		TACTIC_ATTACK of
			"FIGHTIN!"
		endof
		otherwise
			"DEFEND"
		( TACTIC_AUTO )
	endcase
;

: report-orders
	"COMBAT : " combat_report .. cr$ .. " TACTIC : " .. tactic_report ..
	180 view_w 0.5 * 8 msgtickxy2
;

: loyalty-space args( chara )
	<- chara .loyalty 4 > if
		20
	else
		<- chara .loyalty 2 < if
			40
		else
			30
		then
	then
;

: .char-update-tactic-ai args( chara )
	orders_tactic@ case
		TACTIC_FLEE of
			0 <- chara .ai.loot_chance!
			0.01 <- chara .ai.wander_chance! // Don't look around
			0	<- chara .ai.rush_chance!
			4	<- chara .ai.attack_level!
			<- chara loyalty-space 2 /  dup <- chara .ai.follow_leash! 8 + <- chara .ai.safety_leash!
			-1   <- chara .ai.pickup_gun_max!
			-1  <- chara .ai.pickup_melee_max!
		endof
		TACTIC_ATTACK of
			<- chara .composure 4 > if 0.5 else 1 then <- chara .ai.rush_chance!
			0	<- chara .ai.attack_level! 
			<- chara loyalty-space  <- chara .ai.follow_leash!
			1   <- chara .ai.pickup_gun_max!
			3   <- chara .ai.pickup_melee_max!
		endof
		otherwise
			<- chara .composure 2 < if 0.5 else 0 then	<- chara .ai.rush_chance!
			2	<- chara .ai.attack_level! 		
			<- chara loyalty-space	<- chara .ai.follow_leash!
			1   <- chara .ai.pickup_gun_max!
			3   <- chara .ai.pickup_melee_max!
		( TACTIC_AUTO )
	endcase
;

: .char-update-combat-ai args( chara )

	orders_combat@ case
		COMBAT_MELEE of
			0	<- chara .ai.threat_respond_chance!
			1	<- chara .ai.threat_threshold!
			1	<- chara .ai.threat_relax_chance!
		endof
		COMBAT_GUNS of 
			1	<- chara .ai.threat_respond_chance!
			0	<- chara .ai.threat_threshold!
			0	<- chara .ai.threat_relax_chance!
		endof
		otherwise
			1	<- chara .ai.threat_respond_chance!
			0.9	<- chara .ai.threat_threshold!
			0.8	<- chara .ai.threat_relax_chance!
		( COMBAT_AUTO )
	endcase
;

: update-team-combat-ai
	mission-team-stack depths for pops .char-update-combat-ai next drop
;

: update-team-tactic-ai
	mission-team-stack depths for pops .char-update-tactic-ai next drop
;

: .reset-ai
	dup .default-ai-setup 
	.thing@
		0 over .ai.threat_mode!
		0 over .ai.threat_time!
		0 over .ai.safety_time!
	drop
;

: refresh-team-ai

	mission-team-stack depths for pops .reset-ai next drop

	update-team-tactic-ai
	update-team-combat-ai
;

: change-team-orders
	sfx{ fm 1 fx .j! 0.5 fx .duty! 0.5 fx .scale! } // BLURBLURBLE
	refresh-team-ai report-orders
;

last to main-event-mission-orders

: clown-end-day
	road{ nearcanada-day 1 + road-trip-days - } 1 < if
		cheevo: clown-swarm
		zombieclowns
	then
;


: time-music-reset
	' noop to main-event-mission-sunrise
	' noop to main-event-mission-noon
	' noop to main-event-mission-sunset
	' noop to main-event-mission-dusk
	' noop to main-event-mission-nightfall
;


: zombies-setup
	zombiedefaults
	29 stpick if clown-end-day then
;

last to main-event-mission-setup

: .char-special-condition args( char )
	// "Fart" <- char .name!
	// <- char .trait@ "Fireproof" $= if - OLD FIREPROOF METHOD
	<- char statmod{ .fireproof? } if
		0 <- char .thing@ .flammability!
	then
;

: mission-ai-config
	mission-team-stack depths for pops .char-special-condition next drop
	refresh-team-ai
; 

last to main-event-mission-start

}
