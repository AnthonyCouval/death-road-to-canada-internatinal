
mission{

// : random-death-phrase

// pick from list
0 stack
	"BARF!" shove
	"DANG, CA FAIT" shove
	"DANG IT!" shove
	"C... CANADA" shove
	"noooooo" shove
	"oh merde" shove
	"uh wait... aaaaa" shove
	"dangemmite" shove
	"argh" shove
	"dommage" shove
	"Je nen regrette rien!" shove
	"Je regrette tout!" shove
	"Tell Tim Horton I..." shove
	"aaaaaaaaa!" shove
	"'c'est la faute de tous sauf moi !" shove
	"Bravo les zombies, Bravo reellement mature !" shove
	"aaaaa!" shove
	"heeeelp!" shove
	"A la revoyure" shove
	"Ce mec me mord !" shove
	"Aie !" shove
	"Well... could be worse" shove
	"Je savais que ca arriverait !" shove
	"Oh uh... woops!" shove
	"Aie ! Aie !!" shove
	"Hey... cut it out" shove
	"'J'espere ne pas me transformer en squelette" shove
	"'S'il vous plait ne jetez pas mon squelette" shove
	"If only I threw more chairs..." shove
	"consarnit" shove
	"dagnabbit" shove
	"Bien ! Cest bien !" shove
	"Aaaaargh!" shove
	"Nimporte quoi !" shove
	"Qui a besoin du Canada, de toute facon ?" shove
	"Non !" shove
	"Caaaaaaaaaaaaaaaaarl!" shove
	"Aie !" shove
	"Attendez, je crois que jai laisse tomber mon chewing gum !" shove
	"Temps mort ! Temps mort !" shove
	"'Attendez, celui la ne compte pas !" shove
	"Attendez ! Jai droit a une seconde chance !" shove
	"Cest entierement de TA faute !" shove
	"Uh... I meant to do that!" shove
	"This is aaaaall part of the plan, heh" shove
	"Dites a tout le monde que mes derniers mots etaient cool !" shove
	"Tricheurs ! Vous avez triche bande de zombies !" shove
	"Sauve moi, Rosdower !" shove
	"saaave meeeeeee" shove
	"Uhhh... little help?" shove
	"au secours" shove
	"heeelp meeeee" shove
	"'Ne vous inquietez pas, j'ai un plan !" shove
	"Aie aie aie aie aie" shove
	"Que personne ne touche a mes affaires !" shove
	"Bury me... with my food cans!" shove
	"Enterrez moi avec mes cles de voiture preferees !" shove
	"Enterrez moi avec une belle pierre tombale !" shove
	"Cest dommage ! Plus de chance la prochaine fois." shove
	"Ca a ete pres ! Mais attend, ouch !" shove
	"Jai un probleme, la." shove
	"Cela me fait mal !" shove
	"Hein  Cela me fait rire !" shove
	"Bring it on!!!" shove
	"WOOOooooooouch!" shove
	"Pas de souci ! Je peux le gerer !" shove
	"Argh ! Fuyons !" shove
	"Ceci etait une mauvaise idee !" shove
	"Attendez ! Jai quelque chose dans lil !" shove
	"'Je vais bien. Je le passerai bien." shove
	"Jai juste eu le souffle arrache." shove
	"'Hein  C'est rien ! Je l'ai deja pire !" shove
	"Je peux toujours le faire ! Une seconde !" shove
	"Quoi quil en soit !" shove
	"*roule des yeux vers les zombies avec degout*" shove
	"Excuse me... stop eating me please" shove
	"He ! Mauvais zombie ! Mauvais !" shove
	"'Les zombies lents ne sont pas censes etre dangereux !" shove
	"eeeeep" shove
	"shrieeeeeeek" shove
	"*g...gulp*" shove
	"'Je suis dedans maintenant !" shove
	"'J'en ai marre maintenant !" shove
	"Cest fini pour moi !" shove
	"Pas juste !" shove
	"Pas question !" shove
	"Either these zombies go... or I do!" shove
	"gurk" shove
	"aie aie aie aie aie" shove
	"beurk !" shove
	"Aie !" shove
	"For cripes sake..." shove
	"Aie ma rate" shove
	"'J'espere que c'est juste du ketchup" shove
	"'Eh bien je vais etre l'oncle d'un singe. Je suis mort !" shove
	"KAKAROOOOT!!" shove
	"Du crachat de zombie, beurk" shove
	"No matter what... you gotta strut" shove
	"I've had worse..." shove
	"ZOINKS !" shove
	"KHAAAAAAAN!!" shove
	"'Le Canada, plus comme Can'tada" shove
var death-saying-stack

// shuffles pops nip
// ;

0 stack
	"Ces zombies me repondent" shove
	"Devenir un peu personnel." shove
	"'Il n'y a aucun espoir !" shove
	"*BAILLEMENT*" shove
	"'Je me suis fait mordre, ce n'est pas grave !" shove
	"Arrete, espece de nerd !" shove
	"Pas de probleme" shove
	"Quelle petite bouchee minuscule" shove
	"deux legitimes pour quitter" shove
	"'Je suis trop PUMPED pour mourir !" shove
	"Arrete de m toucher !" shove
	"C'est mon sac, je ne le connais pas" shove
	"Quoi que ce soit !" shove
	"SHIELD...OF...HOPE" shove
	"Shield... of.... HOPE" shove
	"Je peux encore faire ca ! Allons au Canada !" shove
	"I can still run... there's still hope!" shove
	"Jai encore les jambes !" shove
	"Ouch ouch ouch ouch" shove
	"Pas de probleme, pas de probleme" shove
	"I'm ok... I wasn't bit!" shove
	"Je peux marcher cela hors" shove
	"'Je me sens encore assez optimiste, je pense" shove
	"BOUCLIER DESPOIR!" shove
	"SHIIIIEEEEELLLD OF HOOOOOOOPE!" shove
var shieldofhope-saying-stack

: random-death-phrase death-saying-stack rndpicks nip ;
: shieldofhope-phrase shieldofhope-saying-stack rndpicks nip ;

: .shieldofhope-saying args( thing ) shieldofhope-phrase <- thing statmod{ .yellmsglong } ;
: .death-saying args( thing ) random-death-phrase <- thing statmod{ .yellmsglong } ;
: thingyell .thing@ statmod{ .yellmsglong } ;

: death-handler args( chara )
	<- chara .char-droploot
	deadtally
	
	<- chara dog? if
		70 %chance if
			"whiiiiiiiine" <- chara thingyell
		else
			"ARRROOOOOO!" <- chara thingyell
		then
	then;

	<- chara goat? if
		1 %chance if
			"simulateur de chevre" fbold <- chara thingyell
		else
			"BAAAAAAAAAAA!" fbold <- chara thingyell
		then
	then;
	
	<- chara pig? if
		1 %chance if
			"UN COCHON" fbold <- chara thingyell
		else
			"SQUEEEEEL!" rbold <- chara thingyell
		then
	then;	
	
	<- chara cat? if
		1 %chance if
			"je deteste les lundis" fbold <- chara thingyell
		else
			"HISSSSSSSSSSSSS!" fbold <- chara thingyell
		then
	then;
	
	<- chara ispet? if
		"BLORFFF!" <- chara thingyell
	then;

	// TODO: Enumerate special characters instead of using magic numbers

	<- chara .specialtype@ 76 = if RED "*GNOOOOORT*" .. <- chara thingyell then;
	<- chara .specialtype@ 77 = if RED "nuuuuuuurp!" .. <- chara thingyell then;
	
	<- chara .perk@ "BART" $= if RED "DON'T HAVE.... COW" .. <- chara thingyell then;
	
	<- chara .specialtype@ 79 = if RED "COLD.... STEEEEEEEL" .. <- chara thingyell then;
	<- chara .specialtype@ 93 = if RED "............." .. <- chara thingyell then;
	<- chara .specialtype@ 95 = if RED "YOU ARE DEAD... no wait I am dead" .. <- chara thingyell then;
	<- chara .specialtype@ 97 = if RED "A PLUS TARD BUB" .. <- chara thingyell then;
	<- chara .perk@ "Reine Squelette" $= if "Enfin, je suis 100% squelette!" <- chara thingyell then;
	<- chara .specialtype@ 104 = if RED "THANKS A LOT... OBAMA... CAAAAAAAAAW" .. <- chara thingyell then;

	<- chara .specialtype@ 106 = if RED "BURY ME... WITH MY LOG" .. <- chara thingyell then;
	<- chara .specialtype@ 108 = if RED "YAAAAARRRRRggghhhhh!" .. <- chara thingyell then;
	<- chara .specialtype@ 109 = <- chara .specialtype@ 110 = or if FLASHY "ZZZZZZZZZT!" .. <- chara thingyell then;
	<- chara .specialtype@ 39 = if RED "Oh merde" .. <- chara thingyell then;
	<- chara .specialtype@ 40 = if BLUE "KLAXON !" .. <- chara thingyell then;
	<- chara .specialtype@ 88 = if FLASHY "* BRIIIIING *" .. <- chara thingyell then;
	<- chara .specialtype@ 96 = if RED "'JE SUIS OS !" .. <- chara thingyell then;
	<- chara .specialtype@ 98 = if BLUE "ENCORE UN DESATRE CAUSE PAR LE COSPLAY !" .. <- chara thingyell then;
	<- chara .specialtype@ 102 = if RED "Le futur cest de la merde !" .. <- chara thingyell then;
	<- chara .specialtype@ 10 = if RED "I made a little miscalculation..." .. <- chara thingyell then;
	<- chara .specialtype@ 20 = if RED "Pour les abeilles !" .. <- chara thingyell then;
	<- chara .specialtype@ 90 = if RED "Jespere que vous allez tous bruler !" .. <- chara thingyell then;
	
	// Default sayings, if none of above apply
	70 %chance if
		<- chara .thing@ .death-saying
	else
		"BARF!" <- chara thingyell
	then
;

statmod{
: human-thing-events (* "EVENEMENT CHOSE HUMAINE : " type PRINTSTACK *) 0 args( thing eventid chara )
	<- thing .character@ -> chara

//	beep
//	"ID EVENEMENT : " type <- eventid .s cr

		 <- eventid THING_EVENT_WAS_HIT
		?(
	
		// <- chara .dead? if then; - Doesn't work with a dead cancel
		<- chara .health@ 1 < if
			<- chara isbort? if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "AY CRUMBO!!!" .. <- chara thingyell
				<- chara .fullheal <- chara .superbortify 
			then;
			<- chara .trait@ "AMERIQUE" $= if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "CAAAAAAAAAAAAAAW!" .. <- chara thingyell
				<- chara .july4ify 
			then;
			<- chara .trait@ "Un Pied dans la Tombe" $= if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "Le squelette etait en moi depuis le debut !" .. <- chara thingyell
				<- chara .deadsamedify
			then;
			<- chara .perk@ "Bouclier despoir" $= <- chara .morale SHIELDOFHOPE_MIN > and if
				<- chara morale--hopeshield
				<- chara .thing@ .shieldofhope-saying
				1 <- chara .health!
				1 <- thing .hitpoints!
			else
				<- chara .trait@ "Phenix" $= if
					<- thing .pos 12 xypowboom -1 lt .hitcheck.blast!
					<- chara .phoenixify
					<- chara .perk@ "Pyromane" $= if then;
					25 <- chara .thing@ .flammability!
				then
			then
		then
			
		);
	
		THING_EVENT_DIED
		?(

			<- chara .name@ type " DIED!!!!" print
			<- chara death-handler

		);

		// Here you can set up anything on the human THING when it's created in a mission
		THING_EVENT_NEW
		?(
			// Change radius to smaller value here if you want

			5 <- thing .rad.x!

		);

		THING_EVENT_GOT_FATIGUED
		?(
			<- chara .tired? if <- chara MOD_TIRED #mod-icon$ <- thing .report then;
		);
;
}

last human-default-events!


// /////////////// //
// HUMAN AI ORDERS //
// /////////////// //

-1 value last-combat-order
-1 value last-tactic-order

: check-new-combat
	last-combat-order orders_combat@ dup ( last order order ) to last-combat-order ( last order ) <> ( true/false )
;

: check-new-tactic
	last-tactic-order orders_tactic@ dup to last-tactic-order <>
;

0 enum COMBAT_AUTO
enum COMBAT_MELEE
enum COMBAT_GUNS
drop

0 enum TACTIC_AUTO
enum TACTIC_FLEE
enum TACTIC_ATTACK
drop

: combat_report
	orders_combat@ case
		COMBAT_MELEE of
			"DEFONCE !"
		endof
		COMBAT_GUNS of 
			"TIRE !"
		endof
		otherwise
			"SOIT"
		( COMBAT_AUTO )
	endcase
;

: tactic_report
	orders_tactic@ case
		TACTIC_FLEE of 
			"COURS !"
		endof
		TACTIC_ATTACK of
			"LUTTE !"
		endof
		otherwise
			"DEFENDRE"
		( TACTIC_AUTO )
	endcase
;

: report-orders
	"COMBAT : " combat_report .. cr$ .. "  TACTIQUE : " .. tactic_report ..
	180 view_w 0.5 * 8 msgtickxy2
;

: loyalty-space args( chara )
	<- chara .loyalty 4 > if
		20
	else
		<- chara .loyalty 2 < if
			40
		else
			30
		then
	then
;

: .char-update-tactic-ai args( chara )
	orders_tactic@ case
		TACTIC_FLEE of
			0 <- chara .ai.loot_chance!
			0.01 <- chara .ai.wander_chance! // Don't look around
			0	<- chara .ai.rush_chance!
			4	<- chara .ai.attack_level!
			<- chara loyalty-space 2 /  dup <- chara .ai.follow_leash! 8 + <- chara .ai.safety_leash!
			-1   <- chara .ai.pickup_gun_max!
			-1  <- chara .ai.pickup_melee_max!
		endof
		TACTIC_ATTACK of
			<- chara .composure 4 > if 0.5 else 1 then <- chara .ai.rush_chance!
			0	<- chara .ai.attack_level! 
			<- chara loyalty-space  <- chara .ai.follow_leash!
			1   <- chara .ai.pickup_gun_max!
			3   <- chara .ai.pickup_melee_max!
		endof
		otherwise
			<- chara .composure 2 < if 0.5 else 0 then	<- chara .ai.rush_chance!
			2	<- chara .ai.attack_level! 		
			<- chara loyalty-space	<- chara .ai.follow_leash!
			1   <- chara .ai.pickup_gun_max!
			3   <- chara .ai.pickup_melee_max!
		( TACTIC_AUTO )
	endcase
;

: .char-update-combat-ai args( chara )

	orders_combat@ case
		COMBAT_MELEE of
			0	<- chara .ai.threat_respond_chance!
			1	<- chara .ai.threat_threshold!
			1	<- chara .ai.threat_relax_chance!
		endof
		COMBAT_GUNS of 
			1	<- chara .ai.threat_respond_chance!
			0	<- chara .ai.threat_threshold!
			0	<- chara .ai.threat_relax_chance!
		endof
		otherwise
			1	<- chara .ai.threat_respond_chance!
			0.9	<- chara .ai.threat_threshold!
			0.8	<- chara .ai.threat_relax_chance!
		( COMBAT_AUTO )
	endcase
;

: update-team-combat-ai
	mission-team-stack depths for pops .char-update-combat-ai next drop
;

: update-team-tactic-ai
	mission-team-stack depths for pops .char-update-tactic-ai next drop
;

: .reset-ai
	dup .default-ai-setup 
	.thing@
		0 over .ai.threat_mode!
		0 over .ai.threat_time!
		0 over .ai.safety_time!
	drop
;

: refresh-team-ai

	mission-team-stack depths for pops .reset-ai next drop

	update-team-tactic-ai
	update-team-combat-ai
;

: change-team-orders
	sfx{ fm 1 fx .j! 0.5 fx .duty! 0.5 fx .scale! } // BLURBLURBLE
	refresh-team-ai report-orders
;

last to main-event-mission-orders

: clown-end-day
	road{ nearcanada-day 1 + road-trip-days - } 1 < if
		cheevo: clown-swarm
		zombieclowns
	then
;


: time-music-reset
	' noop to main-event-mission-sunrise
	' noop to main-event-mission-noon
	' noop to main-event-mission-sunset
	' noop to main-event-mission-dusk
	' noop to main-event-mission-nightfall
;


: zombies-setup
	zombiedefaults
	29 stpick if clown-end-day then
;

last to main-event-mission-setup

: .char-special-condition args( char )
	// "Fart" <- char .name!
	// <- char .trait@ "Feu resistant" $= if - OLD FIREPROOF METHOD
	<- char statmod{ .fireproof? } if
		0 <- char .thing@ .flammability!
	then
;

: mission-ai-config
	mission-team-stack depths for pops .char-special-condition next drop
	refresh-team-ai
; 

last to main-event-mission-start

}
