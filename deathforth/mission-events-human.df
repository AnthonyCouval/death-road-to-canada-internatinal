
mission{

// : random-death-phrase

// pick from list
0 stack
	"'EI!" shove
	"['OH NEIN, DU']," shove
	"'Scheiss!" shove
	"C... CANADA" shove
	"noooooo" shove
	"'Ach poop" shove
	"uh wait... aaaaa" shove
	"'Verdammt!" shove
	"'Arrg!" shove
	"'Oops" shove
	"'Ich bin alles leid." shove
	"'Ich bin alles bereut." shove
	"Tell Tim Horton I..." shove
	"aaaaaaaaa!" shove
	"'Das ist die Schuld aller außer mir!" shove
	"'Wirklich reif, Zombies! WIRKLICH reif!" shove
	"aaaaa!" shove
	"heeeelp!" shove
	"'Ich fange dich auf der anderen Seite" shove
	"'Dieser Typ beißt mich!" shove
	"'Au!" shove
	"Well... could be worse" shove
	"'Ich wusste, dass das passieren wurde!" shove
	"Oh uh... woops!" shove
	"'Au! Au!!" shove
	"Hey... cut it out" shove
	"'Ich hoffe, ich werde kein Skelett" shove
	"'Bitte wirf mein Skelett nicht herum" shove
	"If only I threw more chairs..." shove
	"'verflixt" shove
	"'teuflisch" shove
	"'Gut! Das ist gut!" shove
	"Aaaaargh!" shove
	"Was auch immer!" shove
	"'Wer braucht schon Kanada?" shove
	"'Nein!" shove
	"Caaaaaaaaaaaaaaaaarl!" shove
	"'Au!" shove
	"'Warte, ich glaube, ich hab mein Kaugummi fallen lassen!" shove
	"'Time out! Time out!" shove
	"'Warte, die zahlte nicht!" shove
	"'Warte! Ich bekomme eine neue Chance!" shove
	"'Das ist alles deine Schuld!" shove
	"Uh... I meant to do that!" shove
	"This is aaaaall part of the plan, heh" shove
	"'Sagt allen, meine letzten Worte waren cool!" shove
	"'Betruger! Ihr habt als Zombies betrogen!" shove
	"'Rette mich, Rosdower!" shove
	"saaave meeeeeee" shove
	"Uhhh... little help?" shove
	"hilfe" shove
	"heeelp meeeee" shove
	"Keine Sorge, ich habe einen Plan!" shove
	"5" shove
	"Niemand beruhrt meine Sachen!" shove
	"Bury me... with my food cans!" shove
	"'Begrabe mich mit meinen geliebten Auto-Schlusseln!" shove
	"'Begrabe mich mit einem sußen Grabstein!" shove
	"'Nun ja! Pech gehabt, beim nachsten Mal wird's was!" shove
	"'Das war knapp! Oh, Moment, aua!" shove
	"'Ich hab ein Problem, hier." shove
	"'Das brennt!" shove
	"'Ha! Das kitzelt!" shove
	"Bring it on!!!" shove
	"WOOOooooooouch!" shove
	"'Kein Problem! Ich kriege das hin!" shove
	"'Au weh! Lauft!" shove
	"'Das war eine schlechte Idee!" shove
	"'Warte! Ich hab was im Auge!" shove
	"'Mir geht’s gut. Ich gehe es ab!" shove
	"'Ich habe den Wind aus meinen Lungen gedruckt." shove
	"'Heh, das ist nichts! Ich habe das Schlimmere erlebt!" shove
	"'Ich kann noch damit machen! Ein Moment!" shove
	"'Was-immer!" shove
	"'*augenscheinlich verargert auf die Zombies blickend*" shove
	"Excuse me... stop eating me please" shove
	"'Hor da, schlechter Zombie! Hor da!" shove
	"'Langsame Zombies sollen nicht gefahrlich sein!" shove
	"eeeeep" shove
	"shrieeeeeeek" shove
	"*g...gulp*" shove
	"'Ich bin jetzt dran!" shove
	"'Ich habe genug!" shove
	"'Das ist es fur mich!" shove
	"'Kein Fairness!" shove
	"'Keine Chance!" shove
	"Either these zombies go... or I do!" shove
	"'gurk', 'gerke" shove
	"'null" shove
	"'ugh!', 'ach!" shove
	"'OOF!', 'OOF!" shove
	"For cripes sake..." shove
	"'Ow my spleen', 'Mein Leber schmerzt" shove
	"'I hope that's just ketchup', 'Ich hoffe, das ist nur Ketchup" shove
	"'Well I'll be a monkey's uncle. I'm dead!', 'Wow, ich bin ein Affenonkel. Ich bin tot!" shove
	"KAKAROOOOT!!" shove
	"'Zombie spit, gross', 'Zombie-Saliva, grosstes Ubel" shove
	"No matter what... you gotta strut" shove
	"I've had worse..." shove
	"'ZOINKS!', 'ZOINKS!" shove
	"KHAAAAAAAN!!" shove
	"'Canada, more like Can'tada', 'Kanada, eher wie Kan\xe4da" shove
var death-saying-stack

// shuffles pops nip
// ;

0 stack
	"'These zombies are sassing me back', 'Diese Zombies reagieren mir aufs Gegenteil" shove
	"'Getting a little personal.', 'Es wird etwas personlicher." shove
	"'Hier ist keine Hoffnung!" shove
	"'*YAWN*\*" shove
	"'Ich wurde gebissen, ist nichts Ernstes!" shove
	"'Hor auf, du Nerd!" shove
	"'Kein Problem" shove
	"'Was fur ein kleiner Biss" shove
	"'2 legit 2 quit" shove
	"'Ich bin zu PUMPED, um zu sterben!" shove
	"'Hor auf, mich zu beruhren!" shove
	"'Das ist meine Handtasche, ich kenne dich nicht" shove
	"'Was - immer!" shove
	"SHIELD...OF...HOPE" shove
	"Shield... of.... HOPE" shove
	"'Ich kann es immer noch schaffen! Nach Kanada!" shove
	"I can still run... there's still hope!" shove
	"Noch immer da!" shove
	"Aua aua aua aua" shove
	"Kein Problem, kein Problem" shove
	"I'm ok... I wasn't bit!" shove
	"Ich kann das wegstecken!" shove
	"'Ich bin noch recht optimistisch, glaube ich!" shove
	"'SCHUTZSCHILD DES HOFFNUNGS!" shove
	"SHIIIIEEEEELLLD OF HOOOOOOOPE!" shove
var shieldofhope-saying-stack

: random-death-phrase death-saying-stack rndpicks nip ;
: shieldofhope-phrase shieldofhope-saying-stack rndpicks nip ;

: .shieldofhope-saying args( thing ) shieldofhope-phrase <- thing statmod{ .yellmsglong } ;
: .death-saying args( thing ) random-death-phrase <- thing statmod{ .yellmsglong } ;
: thingyell .thing@ statmod{ .yellmsglong } ;

: death-handler args( chara )
	<- chara .char-droploot
	deadtally
	
	<- chara dog? if
		70 %chance if
			"whiiiiiiiine" <- chara thingyell
		else
			"ARRROOOOOO!" <- chara thingyell
		then
	then;

	<- chara goat? if
		1 %chance if
			"'das war NICHT ein Goat-Simulator-Referenz" fbold <- chara thingyell
		else
			"BAAAAAAAAAAA!" fbold <- chara thingyell
		then
	then;
	
	<- chara pig? if
		1 %chance if
			"'EINES DER SAUEN" fbold <- chara thingyell
		else
			"SQUEEEEEL!" rbold <- chara thingyell
		then
	then;	
	
	<- chara cat? if
		1 %chance if
			"'Ich hasse Montag" fbold <- chara thingyell
		else
			"HISSSSSSSSSSSSS!" fbold <- chara thingyell
		then
	then;
	
	<- chara ispet? if
		"BLORFFF!" <- chara thingyell
	then;

	// TODO: Enumerate special characters instead of using magic numbers

	<- chara .specialtype@ 76 = if RED "*GNOOOOORT*" .. <- chara thingyell then;
	<- chara .specialtype@ 77 = if RED "nuuuuuuurp!" .. <- chara thingyell then;
	
	<- chara .perk@ "'BART" $= if RED "DON'T HAVE.... COW" .. <- chara thingyell then;
	
	<- chara .specialtype@ 79 = if RED "COLD.... STEEEEEEEL" .. <- chara thingyell then;
	<- chara .specialtype@ 93 = if RED "............." .. <- chara thingyell then;
	<- chara .specialtype@ 95 = if RED "YOU ARE DEAD... no wait I am dead" .. <- chara thingyell then;
	<- chara .specialtype@ 97 = if RED "'Auf Wiedersehen, Bub" .. <- chara thingyell then;
	<- chara .perk@ "'Skelett Konigin" $= if "'Endlich bin ich 100% Knochen!" <- chara thingyell then;
	<- chara .specialtype@ 104 = if RED "THANKS A LOT... OBAMA... CAAAAAAAAAW" .. <- chara thingyell then;

	<- chara .specialtype@ 106 = if RED "BURY ME... WITH MY LOG" .. <- chara thingyell then;
	<- chara .specialtype@ 108 = if RED "YAAAAARRRRRggghhhhh!" .. <- chara thingyell then;
	<- chara .specialtype@ 109 = <- chara .specialtype@ 110 = or if FLASHY "ZZZZZZZZZT!" .. <- chara thingyell then;
	<- chara .specialtype@ 39 = if RED "'SHAZBOT!" .. <- chara thingyell then;
	<- chara .specialtype@ 40 = if BLUE "'HONK!" .. <- chara thingyell then;
	<- chara .specialtype@ 88 = if FLASHY "'*Pfiff*" .. <- chara thingyell then;
	<- chara .specialtype@ 96 = if RED "'Ich bin verknochert!" .. <- chara thingyell then;
	<- chara .specialtype@ 98 = if BLUE "' yet another disaster caused by cosplay!" .. <- chara thingyell then;
	<- chara .specialtype@ 102 = if RED "'The future is crap!" .. <- chara thingyell then;
	<- chara .specialtype@ 10 = if RED "I made a little miscalculation..." .. <- chara thingyell then;
	<- chara .specialtype@ 20 = if RED "'For the bees!" .. <- chara thingyell then;
	<- chara .specialtype@ 90 = if RED "'I hope you all burn!" .. <- chara thingyell then;
	
	// Default sayings, if none of above apply
	70 %chance if
		<- chara .thing@ .death-saying
	else
		"'EI!" <- chara thingyell
	then
;

statmod{
: human-thing-events (* "'HUMAN THING EVENT: " type PRINTSTACK *) 0 args( thing eventid chara )
	<- thing .character@ -> chara

//	beep
//	"'EVENT ID: " type <- eventid .s cr

		 <- eventid THING_EVENT_WAS_HIT
		?(
	
		// <- chara .dead? if then; - Doesn't work with a dead cancel
		<- chara .health@ 1 < if
			<- chara isbort? if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "AY CRUMBO!!!" .. <- chara thingyell
				<- chara .fullheal <- chara .superbortify 
			then;
			<- chara .trait@ "'AMERIKA" $= if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "CAAAAAAAAAAAAAAW!" .. <- chara thingyell
				<- chara .july4ify 
			then;
			<- chara .trait@ "'Ein Bein im Grab" $= if 
				<- thing .pos 12 xypowboom -1 lt .hitcheck.blast! 
				RED "'The skeleton was inside of me the whole time!" .. <- chara thingyell
				<- chara .deadsamedify
			then;
			<- chara .perk@ "'Schild der Hoffnung" $= <- chara .morale SHIELDOFHOPE_MIN > and if
				<- chara morale--hopeshield
				<- chara .thing@ .shieldofhope-saying
				1 <- chara .health!
				1 <- thing .hitpoints!
			else
				<- chara .trait@ "'Phoenix" $= if
					<- thing .pos 12 xypowboom -1 lt .hitcheck.blast!
					<- chara .phoenixify
					<- chara .perk@ "'Pyromane" $= if then;
					25 <- chara .thing@ .flammability!
				then
			then
		then
			
		);
	
		THING_EVENT_DIED
		?(

			<- chara .name@ type " DIED!!!!" print
			<- chara death-handler

		);

		// Here you can set up anything on the human THING when it's created in a mission
		THING_EVENT_NEW
		?(
			// Change radius to smaller value here if you want

			5 <- thing .rad.x!

		);

		THING_EVENT_GOT_FATIGUED
		?(
			<- chara .tired? if <- chara MOD_TIRED #mod-icon$ <- thing .report then;
		);
;
}

last human-default-events!


// /////////////// //
// HUMAN AI ORDERS //
// /////////////// //

-1 value last-combat-order
-1 value last-tactic-order

: check-new-combat
	last-combat-order orders_combat@ dup ( last order order ) to last-combat-order ( last order ) <> ( true/false )
;

: check-new-tactic
	last-tactic-order orders_tactic@ dup to last-tactic-order <>
;

0 enum COMBAT_AUTO
enum COMBAT_MELEE
enum COMBAT_GUNS
drop

0 enum TACTIC_AUTO
enum TACTIC_FLEE
enum TACTIC_ATTACK
drop

: combat_report
	orders_combat@ case
		COMBAT_MELEE of
			"'SMASHIN!"
		endof
		COMBAT_GUNS of 
			"'SHOOTIN!"
		endof
		otherwise
			"'EITHER"
		( COMBAT_AUTO )
	endcase
;

: tactic_report
	orders_tactic@ case
		TACTIC_FLEE of 
			"'RUNNIN!"
		endof
		TACTIC_ATTACK of
			"'FIGHTIN!"
		endof
		otherwise
			"Verteidigen"
		( TACTIC_AUTO )
	endcase
;

: report-orders
	"'KAMPF: " combat_report .. cr$ .. " 'Taktik : ', " .. tactic_report ..
	180 view_w 0.5 * 8 msgtickxy2
;

: loyalty-space args( chara )
	<- chara .loyalty 4 > if
		20
	else
		<- chara .loyalty 2 < if
			40
		else
			30
		then
	then
;

: .char-update-tactic-ai args( chara )
	orders_tactic@ case
		TACTIC_FLEE of
			0 <- chara .ai.loot_chance!
			0.01 <- chara .ai.wander_chance! // Don't look around
			0	<- chara .ai.rush_chance!
			4	<- chara .ai.attack_level!
			<- chara loyalty-space 2 /  dup <- chara .ai.follow_leash! 8 + <- chara .ai.safety_leash!
			-1   <- chara .ai.pickup_gun_max!
			-1  <- chara .ai.pickup_melee_max!
		endof
		TACTIC_ATTACK of
			<- chara .composure 4 > if 0.5 else 1 then <- chara .ai.rush_chance!
			0	<- chara .ai.attack_level! 
			<- chara loyalty-space  <- chara .ai.follow_leash!
			1   <- chara .ai.pickup_gun_max!
			3   <- chara .ai.pickup_melee_max!
		endof
		otherwise
			<- chara .composure 2 < if 0.5 else 0 then	<- chara .ai.rush_chance!
			2	<- chara .ai.attack_level! 		
			<- chara loyalty-space	<- chara .ai.follow_leash!
			1   <- chara .ai.pickup_gun_max!
			3   <- chara .ai.pickup_melee_max!
		( TACTIC_AUTO )
	endcase
;

: .char-update-combat-ai args( chara )

	orders_combat@ case
		COMBAT_MELEE of
			0	<- chara .ai.threat_respond_chance!
			1	<- chara .ai.threat_threshold!
			1	<- chara .ai.threat_relax_chance!
		endof
		COMBAT_GUNS of 
			1	<- chara .ai.threat_respond_chance!
			0	<- chara .ai.threat_threshold!
			0	<- chara .ai.threat_relax_chance!
		endof
		otherwise
			1	<- chara .ai.threat_respond_chance!
			0.9	<- chara .ai.threat_threshold!
			0.8	<- chara .ai.threat_relax_chance!
		( COMBAT_AUTO )
	endcase
;

: update-team-combat-ai
	mission-team-stack depths for pops .char-update-combat-ai next drop
;

: update-team-tactic-ai
	mission-team-stack depths for pops .char-update-tactic-ai next drop
;

: .reset-ai
	dup .default-ai-setup 
	.thing@
		0 over .ai.threat_mode!
		0 over .ai.threat_time!
		0 over .ai.safety_time!
	drop
;

: refresh-team-ai

	mission-team-stack depths for pops .reset-ai next drop

	update-team-tactic-ai
	update-team-combat-ai
;

: change-team-orders
	sfx{ fm 1 fx .j! 0.5 fx .duty! 0.5 fx .scale! } // BLURBLURBLE
	refresh-team-ai report-orders
;

last to main-event-mission-orders

: clown-end-day
	road{ nearcanada-day 1 + road-trip-days - } 1 < if
		cheevo: clown-swarm
		zombieclowns
	then
;


: time-music-reset
	' noop to main-event-mission-sunrise
	' noop to main-event-mission-noon
	' noop to main-event-mission-sunset
	' noop to main-event-mission-dusk
	' noop to main-event-mission-nightfall
;


: zombies-setup
	zombiedefaults
	29 stpick if clown-end-day then
;

last to main-event-mission-setup

: .char-special-condition args( char )
	// "'Fahrt" <- char .name!
	// <- char .trait@ "'Brandschutz" $= if - OLD FIREPROOF METHOD
	<- char statmod{ .fireproof? } if
		0 <- char .thing@ .flammability!
	then
;

: mission-ai-config
	mission-team-stack depths for pops .char-special-condition next drop
	refresh-team-ai
; 

last to main-event-mission-start

}
