0 var 3-loc-stack

: cyoa-3-locs
	3-loc-stack sizes for 3-loc-stack drawcard next drop

	// cyoa-add-choice "FAHREN SIE WEITER ODER SO" cyoa-choice-text!
;

: test-bar cyoa-add-choice "bar" cyoa-choice-text! ;
: test-mart cyoa-add-choice "minimarkt" cyoa-choice-text! ;
: test-gunshop cyoa-add-choice "waffengeschaft" cyoa-choice-text! ;
: test-dingus choice( "Schotterstrae" )choice: roadloot-gravel ;

: fchoice-card: fbold choice-card: ;
: rchoice-card: rbold choice-card: ;

deck-new
	"Unberuhrtes Lebensmittelgeschaft" fchoice-card: grocery-death
	"Jagdhutte" fchoice-card: cabin1-huntlodge
	"Gefahrliche Materialien" fchoice-card: rare1-hazmat
	"Gefahrdung Ranger" fchoice-card: rare1-rangers
	"Kung Fu Meister" fchoice-card: rare1-bruce
	"UFO Landezelle" fchoice-card: rare1-ufo
	"'Einsiedlerhutte" fchoice-card: rare1-hermit
	"Groes Tier" fchoice-card: rare1-hotdog
	"Boses Haus" fchoice-card: rare1-altar
	"Geheimfabrik" fchoice-card: rare1-factory
	"Museum" fchoice-card: rare1-museum
	"Fischhutten" fchoice-card: rare1-fish
	"Abfallfreunde" fchoice-card: rare1-junk
	"Betonbunker" fchoice-card: rare1-bunker
	"Gefahrliche Labore" fchoice-card: rare1-lab
	"Gruselfriedhof" fchoice-card: rare2-draculagrave
	"Rasende Inferno" fchoice-card: rare2-inferno
	"Gothic Farm" fchoice-card: rare2-farm
	"Spukhaus" fchoice-card: rare2-ghostmansion
	"Gefrorener Freund" fchoice-card: rare2-caveman
	"Militardepot" fchoice-card: liver-mbunker
value loc-pick-rare-base

loc-pick-rare-base shuffles var loc-pick-rare

: get-a-rare-loc loc-pick-rare
	depths 0= if loc-pick-rare-base shuffles to loc-pick-rare then
pops nip ;

// Maybe make the above draw nothing if it runs out? Or could have it draw a normal location instead, see trader shuffler for a defer example. Currently not changing it, as it's an impossible situation right now. Will change when we do endless.

: get-and-execute-rare-loc get-a-rare-loc execute ;

: rare-loc-number 3 gstats{ ugnome-rarelocs } 0 > if // 3 if no upgrades, up to 5 if maxed
	gstats{ ugnome-rarelocs } 2 > if 2 else 1 then else 0 then + ;

deck-new
	"Groes Haus" choice-card: inner7-cyoa
	"Schwarmwohnung" choice-card: inner8-cyoa // sorta hard, but not fully...
	"Prepper Hutte" choice-card: cabin1-stash
	"Versteck im Wald" choice-card: cabin1-night
	"Volles Hotel" choice-card: inner4-cyoa
	"Haus mit Einschusslochern" choice-card: inner6-cyoa
	"Verlorene Festung" rchoice-card: card4-cyoa // Same as Swarmed Apartment but harder
	"Tankstellenbelagerung" rchoice-card: siege1-gas
	"Polizeizentrale" rchoice-card: policeHQ-cyoa
	"Krankenhausuberfall" choice-card: hospital-cyoa
	"Groer Burokomplex" choice-card: doubleoffice-cyoa
	"Schickes Buro" choice-card: safeoffice-cyoa
	"Schickes Haus" choice-card: safeinhouse-cyoa
	"Aufgeregtes Haus" rchoice-card: maginhouse-cyoa // Designated hard due to aggression
	"Aufgeregte Wohnung" rchoice-card: maginapt-cyoa
	"Fitnessstudiowohnung" choice-card: gymapt-cyoa // Formerly Big Apartment, this is more descriptive
	"Tote Spielhalle" choice-card: bigarcade-cyoa
	"Lebensmittelgeschaft" choice-card: grocery1
	"Groes Lebensmittelgeschaft" choice-card: grocery2
	"Uberfulltes Lebensmittelgeschaft" rchoice-card: grocery3
	"Baumarkt" choice-card: hardware
	"Uberfullter Yall Mart" choice-card: yallmart-mid
	"Todlicher Yall Mart" rchoice-card: yallmart-hard
	"Buchhandlung" choice-card: bookstore
	"Sportartikelgeschaft" choice-card: sporting
	"Schicke Fabrik" choice-card: indust-safe // actually Successful Factory
	"Geschaftszeile" choice-card: 4commercial-cyoa
	"Kleiner Vorort" choice-card: 4suburb-cyoa
	"Wohnungszeile" choice-card: 4apartment-cyoa
	"Wohnungsrettung" rchoice-card: rescueapt-cyoa
	"Hausrettung" rchoice-card: rescuehouse-cyoa
	"Lebensmittelrettung" rchoice-card: rescuegrocery
	"Fabrikrettung" rchoice-card: rescueindust
	"Kanalisationsrettung" rchoice-card: rescuesewer
	"Pannenhilfe" rchoice-card: siege1-rescuerest
	"Huttenrettung" rchoice-card: siege1-rescuecabin
	"Tankstellenrettung" rchoice-card: siege1-rescuegas
	"Einkaufszentrumrettung" rchoice-card: rescuemall
	"Einkaufszentrum" rchoice-card: malltest
	"Uberfulltes Fitnessstudio" rchoice-card: swarmgym-cyoa
	"Uberfullte Spielhalle" rchoice-card: swarmarcade-cyoa
	"Raststatte" choice-card: rest-stop 
	"Uberfullte Raststatte" rchoice-card: rest-death // Roadside Nightmare
	"Raststatte mit Auto" choice-card: rest-car // Roadside Car Stop
	"Autofriedhof mit Auto" choice-card: junk-car // Junkyard Car Parking
	"Autofriedhof" choice-card: junk-loot
	"Gesicherter Autofriedhof" choice-card: junk-safe
	"Hutte mit Auto" choice-card: cabin1-car // Car Rental Cabin
	"Stadtreihe mit Auto" choice-card: houserow-car // Free Car!
	"Brennendes Haus" rchoice-card: burnhouse
	"Ruhiger Bauernhof" choice-card: farm-toolbarn
	"Barn Rettung" rchoice-card: farm-pigbarn
	"Dunkel Schloss" rchoice-card: darkmansion
	"Friedhof mit Auto" rchoice-card: mandible-graveyard
	"Busy Park mit Auto" rchoice-card: mandible-crowded
	"Offentlicher Park" choice-card: mandible-park
	rare-loc-number cards: get-and-execute-rare-loc
value loc-pick-stack-base

loc-pick-stack-base shuffles var loc-pick-stack

deck-new
	"Stiller Hotel" choice-card: inner3-cyoa
	"Haus an der Strae" choice-card: inner5-cyoa
	"Raststatte" choice-card: rest-easy
	"Yall Mart" choice-card: yallmart-easy
	"Stiller Fabrik" choice-card: indust-easy
value easyloc-pick-stack-base

easyloc-pick-stack-base shuffles var easyloc-pick-stack

: get-a-loc loc-pick-stack
	depths 0= if loc-pick-stack-base shuffles to loc-pick-stack then
pops nip ;

: get-a-loc-easy easyloc-pick-stack
	depths 0= if easyloc-pick-stack-base shuffles to easyloc-pick-stack then
pops nip ;

: explorer-pick
	explorer? if drop 3 else drop 
		10 %chance if 3 else 2 then
	then 
;

: pick-3-locs 
	explorer-pick stack sizes for get-a-loc shove next to 3-loc-stack
	cyoa-3-locs
;

: pick-3-locs-easy 3 stack sizes for get-a-loc-easy shove next to 3-loc-stack
	cyoa-3-locs
;

: locpick-redrawcost road{ car-guzzle 2.5 * } >int ;

: explorer-redrawcost 
	gstats{ perk-explorer } 3 >= if
		road{ car-guzzle 1.5 * } >int
	else 
		gstats{ perk-explorer } 2 >= if
			road{ car-guzzle 2 * } >int
		else
			locpick-redrawcost
		then
	then
;

: locpick-repick
	cyoa-start
	"Fahrt uberall hin um interessante Orte zu finden" cyoa-title!
	($ Thegroup .. " entscheidet sich dazu Gas in der Hoffnung auf interessantere Platze zu verbrennen " .. gThey .. " findet" .. g1s .. "  einige neue Orte: " $) text!
	locpick-redrawcost -1 * trunk-gas+ -1 car-tune+
	pick-3-locs
	gas-skip
;

: explorer-repick
	cyoa-start
	"Vorsichtige Erkundung" cyoa-title!
	($ Thegroup .. "  braucht mehr Zeit fur die Erkundung. " .. gThey .. " findet" .. g1s .. "  einige neue Orte: " $) text!
	explorer-redrawcost -1 * trunk-gas+ -1 car-tune+
	pick-3-locs
	gas-skip
;

: locpick
	cyoa-start
	"Plundere immer" cyoa-title!
	($ "Wahrend der Fahrt auf der Death Road, " .. thegroup .. "  beschliet einen Halt fur Vorrate einzulegen: " $) text!
	pick-3-locs
	explorer? if drop
		trunk-gas explorer-redrawcost 1 - > if
			choice( "Entdecker: " pbold .. "Fahre mehr   " .. explorer-redrawcost .. "  benzin"  )choice: explorer-repick
		else
			gas-skip
		then
	else drop
		trunk-gas locpick-redrawcost 1 - > if
			choice( "Fahre mehr herum   " .. locpick-redrawcost .. "  benzin"  )choice: locpick-repick
		else
			gas-skip
		then
	then
;

: easylocpick
	cyoa-start
	"Begebe dich auf die Death Road" cyoa-title!
	($ "Um die Reise zu beginnen " .. thegroup .. " ' beschliet, sich an einem nahegelegenen Ort mit Vorraten einzudecken.		Um den Death Road zu uberleben, musst du so viele Vorrate wie moglich horten! Du musst auch Wege finden, dein Team zu trainieren und zu vergroern." $) text!
	// Temp Testing
	// choice( "Gefrorener Freund" fbold )choice: rare2-caveman
	pick-3-locs-easy
	explorer? if drop
		easyloc-pick-stack drawcard
	then
;
	
(* AUTO CHOICE DECK EXAMPLE

deck-new 
	"Raststatte" choice-card: beep ( <- the choice handler, i.e. rest-stop )
value choices-list

: test-cyoa cyoa-start choices-list drawcard ;

;

*)
