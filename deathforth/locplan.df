0 var 3-loc-stack

: cyoa-3-locs
	3-loc-stack sizes for 3-loc-stack drawcard next drop

	// cyoa-add-choice "CONTINUER A CONDUire OU AUCUNE CHOSSE" cyoa-choice-text!
;

: test-bar cyoa-add-choice "barre" cyoa-choice-text! ;
: test-mart cyoa-add-choice "mini marche" cyoa-choice-text! ;
: test-gunshop cyoa-add-choice "magasin darmes" cyoa-choice-text! ;
: test-dingus choice( "Route de gravier" )choice: roadloot-gravel ;

: fchoice-card: fbold choice-card: ;
: rchoice-card: rbold choice-card: ;

deck-new
	"Epicerie Intouchee" fchoice-card: grocery-death
	"Pavillon de Chasse" fchoice-card: cabin1-huntlodge
	"Matieres dangereuses" fchoice-card: rare1-hazmat
	"Danger Rangers" fchoice-card: rare1-rangers
	"Maitre de kung fu" fchoice-card: rare1-bruce
	"Site datterrissage dOVNI" fchoice-card: rare1-ufo
	"'Cabane d'ermite" fchoice-card: rare1-hermit
	"Animal geant" fchoice-card: rare1-hotdog
	"Maison malveillante" fchoice-card: rare1-altar
	"Usine mysterieuse" fchoice-card: rare1-factory
	"Musee" fchoice-card: rare1-museum
	"Cabines de peche" fchoice-card: rare1-fish
	"Copains de la casse" fchoice-card: rare1-junk
	"Bunker en beton" fchoice-card: rare1-bunker
	"Laboratoires inquietants" fchoice-card: rare1-lab
	"Cimetiere etrange" fchoice-card: rare2-draculagrave
	"Enfer de feu" fchoice-card: rare2-inferno
	"Ferme gothique" fchoice-card: rare2-farm
	"Manoir hante" fchoice-card: rare2-ghostmansion
	"Ami gele" fchoice-card: rare2-caveman
	"Depot militaire" fchoice-card: liver-mbunker
value loc-pick-rare-base

loc-pick-rare-base shuffles var loc-pick-rare

: get-a-rare-loc loc-pick-rare
	depths 0= if loc-pick-rare-base shuffles to loc-pick-rare then
pops nip ;

// Maybe make the above draw nothing if it runs out? Or could have it draw a normal location instead, see trader shuffler for a defer example. Currently not changing it, as it's an impossible situation right now. Will change when we do endless.

: get-and-execute-rare-loc get-a-rare-loc execute ;

: rare-loc-number 3 gstats{ ugnome-rarelocs } 0 > if // 3 if no upgrades, up to 5 if maxed
	gstats{ ugnome-rarelocs } 2 > if 2 else 1 then else 0 then + ;

deck-new
	"Grande maison" choice-card: inner7-cyoa
	"Appartement envahi" choice-card: inner8-cyoa // sorta hard, but not fully...
	"Cabane de preparation" choice-card: cabin1-stash
	"Cachette dans les bois" choice-card: cabin1-night
	"Hotel anime" choice-card: inner4-cyoa
	"Maison criblee de balles" choice-card: inner6-cyoa
	"Forteresse perdue" rchoice-card: card4-cyoa // Same as Swarmed Apartment but harder
	"Siege de la station service" rchoice-card: siege1-gas
	"Quartier general de la police" rchoice-card: policeHQ-cyoa
	"Raide sur lhopital" choice-card: hospital-cyoa
	"Grande complexe bureautique" choice-card: doubleoffice-cyoa
	"Bureau elegant" choice-card: safeoffice-cyoa
	"Maison elegante" choice-card: safeinhouse-cyoa
	"Maison en colere" rchoice-card: maginhouse-cyoa // Designated hard due to aggression
	"Appartement en colere" rchoice-card: maginapt-cyoa
	"Appartement de gym" choice-card: gymapt-cyoa // Formerly Big Apartment, this is more descriptive
	"Arcade morte" choice-card: bigarcade-cyoa
	"Magasin alimentaire" choice-card: grocery1
	"Grand magasin alimentaire" choice-card: grocery2
	"Magasin alimentaire bonde" rchoice-card: grocery3
	"Quincaillerie" choice-card: hardware
	"Yall Mart bonde" choice-card: yallmart-mid
	"Yall Mart mortel" rchoice-card: yallmart-hard
	"Librairie" choice-card: bookstore
	"Magasin darticles de sport" choice-card: sporting
	"Usine chic" choice-card: indust-safe // actually Successful Factory
	"Rangee commerciale" choice-card: 4commercial-cyoa
	"Petite banlieue" choice-card: 4suburb-cyoa
	"Rangee dappartements" choice-card: 4apartment-cyoa
	"Secours en appartement" rchoice-card: rescueapt-cyoa
	"Secours a domicile" rchoice-card: rescuehouse-cyoa
	"Secours en epicerie" rchoice-card: rescuegrocery
	"Secours dusine" rchoice-card: rescueindust
	"Secours degout" rchoice-card: rescuesewer
	"Recuperation routiere" rchoice-card: siege1-rescuerest
	"Recuperation de cabane" rchoice-card: siege1-rescuecabin
	"Recuperation de station service" rchoice-card: siege1-rescuegas
	"Recuperation au centre commercial" rchoice-card: rescuemall
	"Centre commercial" rchoice-card: malltest
	"Gymnase envahi" rchoice-card: swarmgym-cyoa
	"Arcade envahie" rchoice-card: swarmarcade-cyoa
	"Aire de repos" choice-card: rest-stop 
	"Aire de repos envahie" rchoice-card: rest-death // Roadside Nightmare
	"Aire de repos avec voiture" choice-card: rest-car // Roadside Car Stop
	"Cimetiere mecanique avec voiture" choice-card: junk-car // Junkyard Car Parking
	"Cimetiere mecanique" choice-card: junk-loot
	"Cimetiere securise" choice-card: junk-safe
	"Cabane avec voiture" choice-card: cabin1-car // Car Rental Cabin
	"Rangee de maisons avec voiture" choice-card: houserow-car // Free Car!
	"Maison en feu" rchoice-card: burnhouse
	"Ferme tranquille" choice-card: farm-toolbarn
	"Sauvetage de grange" rchoice-card: farm-pigbarn
	"Manoir sombre" rchoice-card: darkmansion
	"Cimetiere avec voiture" rchoice-card: mandible-graveyard
	"Parc anime avec voiture" rchoice-card: mandible-crowded
	"Parc public" choice-card: mandible-park
	rare-loc-number cards: get-and-execute-rare-loc
value loc-pick-stack-base

loc-pick-stack-base shuffles var loc-pick-stack

deck-new
	"Hotel calme" choice-card: inner3-cyoa
	"Maison sur la route" choice-card: inner5-cyoa
	"Aire de repos" choice-card: rest-easy
	"Yall Mart" choice-card: yallmart-easy
	"Usine calme" choice-card: indust-easy
value easyloc-pick-stack-base

easyloc-pick-stack-base shuffles var easyloc-pick-stack

: get-a-loc loc-pick-stack
	depths 0= if loc-pick-stack-base shuffles to loc-pick-stack then
pops nip ;

: get-a-loc-easy easyloc-pick-stack
	depths 0= if easyloc-pick-stack-base shuffles to easyloc-pick-stack then
pops nip ;

: explorer-pick
	explorer? if drop 3 else drop 
		10 %chance if 3 else 2 then
	then 
;

: pick-3-locs 
	explorer-pick stack sizes for get-a-loc shove next to 3-loc-stack
	cyoa-3-locs
;

: pick-3-locs-easy 3 stack sizes for get-a-loc-easy shove next to 3-loc-stack
	cyoa-3-locs
;

: locpick-redrawcost road{ car-guzzle 2.5 * } >int ;

: explorer-redrawcost 
	gstats{ perk-explorer } 3 >= if
		road{ car-guzzle 1.5 * } >int
	else 
		gstats{ perk-explorer } 2 >= if
			road{ car-guzzle 2 * } >int
		else
			locpick-redrawcost
		then
	then
;

: locpick-repick
	cyoa-start
	"Rouler partout" cyoa-title!
	($ Thegroup .. "  decide de bruler de lessence dans lespoir de trouver des endroits plus interessants. " .. gThey .. "  trouver" .. g1s .. "  quelques nouveaux emplacements : " $) text!
	locpick-redrawcost -1 * trunk-gas+ -1 car-tune+
	pick-3-locs
	gas-skip
;

: explorer-repick
	cyoa-start
	"Exploration prudente" cyoa-title!
	($ Thegroup .. "  prend plus de temps a explorer. " .. gThey .. "  trouver" .. g1s .. "  quelques nouveaux emplacements : " $) text!
	explorer-redrawcost -1 * trunk-gas+ -1 car-tune+
	pick-3-locs
	gas-skip
;

: locpick
	cyoa-start
	"Toujours piller" cyoa-title!
	($ "En conduisant sur la route de la mort, " .. thegroup .. "  decide de faire un arret pour les fournitures : " $) text!
	pick-3-locs
	explorer? if drop
		trunk-gas explorer-redrawcost 1 - > if
			choice( "Explorateur : " pbold .. "Conduisez plus   " .. explorer-redrawcost .. "  essence"  )choice: explorer-repick
		else
			gas-skip
		then
	else drop
		trunk-gas locpick-redrawcost 1 - > if
			choice( "Conduisez plus autour   " .. locpick-redrawcost .. "  essence"  )choice: locpick-repick
		else
			gas-skip
		then
	then
;

: easylocpick
	cyoa-start
	"Sembarquer sur la route de la mort" cyoa-title!
	($ "Pour commencer le voyage " .. thegroup .. " ' decide de se procurer quelques fournitures d'un endroit voisin.		Pour survivre a la route de la Mort, il vous faudra rassembler autant de fournitures que possible ! Vous aurez egalement besoin de trouver des moyens de former et de faire grandir votre equipe." $) text!
	// Temp Testing
	// choice( "Ami gele" fbold )choice: rare2-caveman
	pick-3-locs-easy
	explorer? if drop
		easyloc-pick-stack drawcard
	then
;
	
(* AUTO CHOICE DECK EXAMPLE

deck-new 
	"Aire de repos" choice-card: beep ( <- the choice handler, i.e. rest-stop )
value choices-list

: test-cyoa cyoa-start choices-list drawcard ;

;

*)
