0 var 3-loc-stack

: cyoa-3-locs
	3-loc-stack sizes for 3-loc-stack drawcard next drop

	// cyoa-add-choice "'WEITER FAHREN ODER ETWAS" cyoa-choice-text!
;

: test-bar cyoa-add-choice "'Bar" cyoa-choice-text! ;
: test-mart cyoa-add-choice "'Minimarkt" cyoa-choice-text! ;
: test-gunshop cyoa-add-choice "'Schusswaffenladen" cyoa-choice-text! ;
: test-dingus choice( "'Kiesstraße" )choice: roadloot-gravel ;

: fchoice-card: fbold choice-card: ;
: rchoice-card: rbold choice-card: ;

deck-new
	"'Unberuhrter Lebensmittelmarkt" fchoice-card: grocery-death
	"'Jagdschloss" fchoice-card: cabin1-huntlodge
	"'Gefahrliche Stoffe" fchoice-card: rare1-hazmat
	"'Alarm-Ranger" fchoice-card: rare1-rangers
	"'Kung-Fu-Meister" fchoice-card: rare1-bruce
	"'UFO-Landezone" fchoice-card: rare1-ufo
	"'Einsiedlerhutte" fchoice-card: rare1-hermit
	"'Großes Tier" fchoice-card: rare1-hotdog
	"Boses Haus" fchoice-card: rare1-altar
	"'Geheimes Fabrikat" fchoice-card: rare1-factory
	"'Museum" fchoice-card: rare1-museum
	"'Fischhutten" fchoice-card: rare1-fish
	"'Sperrbecher-Kameraden" fchoice-card: rare1-junk
	"'Betonbunker" fchoice-card: rare1-bunker
	"'Das bedrohliche Labor" fchoice-card: rare1-lab
	"'Spukender Friedhof" fchoice-card: rare2-draculagrave
	"'Wutender Feuersturm" fchoice-card: rare2-inferno
	"'Gotisches Bauernhof" fchoice-card: rare2-farm
	"'Hexenhaus" fchoice-card: rare2-ghostmansion
	"'Froster Freund" fchoice-card: rare2-caveman
	"'Militardepot" fchoice-card: liver-mbunker
value loc-pick-rare-base

loc-pick-rare-base shuffles var loc-pick-rare

: get-a-rare-loc loc-pick-rare
	depths 0= if loc-pick-rare-base shuffles to loc-pick-rare then
pops nip ;

// Maybe make the above draw nothing if it runs out? Or could have it draw a normal location instead, see trader shuffler for a defer example. Currently not changing it, as it's an impossible situation right now. Will change when we do endless.

: get-and-execute-rare-loc get-a-rare-loc execute ;

: rare-loc-number 3 gstats{ ugnome-rarelocs } 0 > if // 3 if no upgrades, up to 5 if maxed
	gstats{ ugnome-rarelocs } 2 > if 2 else 1 then else 0 then + ;

deck-new
	"'Großes Haus" choice-card: inner7-cyoa
	"'Bewohnter Hochhaus" choice-card: inner8-cyoa // sorta hard, but not fully...
	"'Vorratskeller der Prapper" choice-card: cabin1-stash
	"'Versteck im Wald" choice-card: cabin1-night
	"'Besonders belastetes Hotel" choice-card: inner4-cyoa
	"'Durchlochertes Haus" choice-card: inner6-cyoa
	"'Verlorenes Fort" rchoice-card: card4-cyoa // Same as Swarmed Apartment but harder
	"'Benzin-Tankstelle" rchoice-card: siege1-gas
	"'Polizeihauptquartier" rchoice-card: policeHQ-cyoa
	"'Krankenhausraub" choice-card: hospital-cyoa
	"'Großes Burokomplex" choice-card: doubleoffice-cyoa
	"'Schicke Buro" choice-card: safeoffice-cyoa
	"'Schickes Haus" choice-card: safeinhouse-cyoa
	"'Aufgeregtes Haus" rchoice-card: maginhouse-cyoa // Designated hard due to aggression
	"'Aufgeregte Wohnung" rchoice-card: maginapt-cyoa
	"'Fitness-Wohnung" choice-card: gymapt-cyoa // Formerly Big Apartment, this is more descriptive
	"'Tote Spielhalle" choice-card: bigarcade-cyoa
	"'Lebensmittelgeschaft" choice-card: grocery1
	"'Großes Lebensmittelgeschaft" choice-card: grocery2
	"'Volles Yall-Supermarkt" rchoice-card: grocery3
	"'Baumarkt" choice-card: hardware
	"'Voller All-Mart" choice-card: yallmart-mid
	"Todlicher Yall-Mart" rchoice-card: yallmart-hard
	"Buchhandlung" choice-card: bookstore
	"'Laden fur Sportartikel" choice-card: sporting
	"'Schone Manufaktur" choice-card: indust-safe // actually Successful Factory
	"'Gewerbezeile" choice-card: 4commercial-cyoa
	"'Kleines Vorort" choice-card: 4suburb-cyoa
	"'Reihe von Wohnhausern" choice-card: 4apartment-cyoa
	"'Rettung fur Wohneinheiten" rchoice-card: rescueapt-cyoa
	"'Rettung fur Hauser" rchoice-card: rescuehouse-cyoa
	"'Rettung fur den Lebensmittelmarkt" rchoice-card: rescuegrocery
	"'Rettung fur die Fabrik" rchoice-card: rescueindust
	"'Rettung in der Klaranlage" rchoice-card: rescuesewer
	"'Rettung an der Straße" rchoice-card: siege1-rescuerest
	"'Huttenrettung" rchoice-card: siege1-rescuecabin
	"'Tankstellenrettung" rchoice-card: siege1-rescuegas
	"'Einkaufszentrum-Rettung" rchoice-card: rescuemall
	"'Einkaufszentrum" rchoice-card: malltest
	"'Uberfullte Turnhalle" rchoice-card: swarmgym-cyoa
	"'Uberfulltes Spielcenter" rchoice-card: swarmarcade-cyoa
	"'Raststatte" choice-card: rest-stop 
	"'Uberfullte Raststatte" rchoice-card: rest-death // Roadside Nightmare
	"'Raststatte mit Auto" choice-card: rest-car // Roadside Car Stop
	"'Schrottplatz mit Auto" choice-card: junk-car // Junkyard Car Parking
	"'Schrottplatz" choice-card: junk-loot
	"'Sicherer Schrottplatz" choice-card: junk-safe
	"'Ein Cabin mit Auto" choice-card: cabin1-car // Car Rental Cabin
	"Stadt Reihe mit Auto" choice-card: houserow-car // Free Car!
	"'Brennendes Haus" rchoice-card: burnhouse
	"'Stilles Bauernhof" choice-card: farm-toolbarn
	"'Scheune retten" rchoice-card: farm-pigbarn
	"'Dunkles Schloss" rchoice-card: darkmansion
	"'Friedhof mit Auto" rchoice-card: mandible-graveyard
	"'Busy Park mit Auto" rchoice-card: mandible-crowded
	"'Offentlicher Park" choice-card: mandible-park
	rare-loc-number cards: get-and-execute-rare-loc
value loc-pick-stack-base

loc-pick-stack-base shuffles var loc-pick-stack

deck-new
	"'Stilles Hotel" choice-card: inner3-cyoa
	"'Haus an der Straße" choice-card: inner5-cyoa
	"'Raststatte" choice-card: rest-easy
	"'Yall-Mart" choice-card: yallmart-easy
	"'Stiller Fabrik" choice-card: indust-easy
value easyloc-pick-stack-base

easyloc-pick-stack-base shuffles var easyloc-pick-stack

: get-a-loc loc-pick-stack
	depths 0= if loc-pick-stack-base shuffles to loc-pick-stack then
pops nip ;

: get-a-loc-easy easyloc-pick-stack
	depths 0= if easyloc-pick-stack-base shuffles to easyloc-pick-stack then
pops nip ;

: explorer-pick
	explorer? if drop 3 else drop 
		10 %chance if 3 else 2 then
	then 
;

: pick-3-locs 
	explorer-pick stack sizes for get-a-loc shove next to 3-loc-stack
	cyoa-3-locs
;

: pick-3-locs-easy 3 stack sizes for get-a-loc-easy shove next to 3-loc-stack
	cyoa-3-locs
;

: locpick-redrawcost road{ car-guzzle 2.5 * } >int ;

: explorer-redrawcost 
	gstats{ perk-explorer } 3 >= if
		road{ car-guzzle 1.5 * } >int
	else 
		gstats{ perk-explorer } 2 >= if
			road{ car-guzzle 2 * } >int
		else
			locpick-redrawcost
		then
	then
;

: locpick-repick
	cyoa-start
	"'Uberall herumfahren" cyoa-title!
	($ Thegroup .. " ' entscheidet sich, etwas Benzin zu verbrennen, in der Hoffnung, interessantere Orte zu finden. " .. gThey .. " 'findet" .. g1s .. " 'einige neue Orte: " $) text!
	locpick-redrawcost -1 * trunk-gas+ -1 car-tune+
	pick-3-locs
	gas-skip
;

: explorer-repick
	cyoa-start
	"'Vorsichtige Erkundung" cyoa-title!
	($ Thegroup .. " 'benotigt mehr Zeit fur die Erkundung. " .. gThey .. " 'findet" .. g1s .. " 'einige neue Orte: " $) text!
	explorer-redrawcost -1 * trunk-gas+ -1 car-tune+
	pick-3-locs
	gas-skip
;

: locpick
	cyoa-start
	"'Immer Beute machen" cyoa-title!
	($ "'Wahrend der Fahrt auf der Todessstraße, " .. thegroup .. " 'entscheidet sich fur einen Stopp fur Nachschub: " $) text!
	pick-3-locs
	explorer? if drop
		trunk-gas explorer-redrawcost 1 - > if
			choice( "'Entdecker: " pbold .. "'Fahre mehr - " .. explorer-redrawcost .. " 'Benzin"  )choice: explorer-repick
		else
			gas-skip
		then
	else drop
		trunk-gas locpick-redrawcost 1 - > if
			choice( "'Fahre mehr herum - " .. locpick-redrawcost .. " 'Benzin"  )choice: locpick-repick
		else
			gas-skip
		then
	then
;

: easylocpick
	cyoa-start
	"'Auf dem Todesweg ansetzen" cyoa-title!
	($ "'Um die Reise aufzunehmen, " .. thegroup .. " ' entscheidet sich, etwas zu kaufen von einer nahegelegenen Lage.		Um den Todesweg zu uberleben, mussen Sie so viele Sachen wie moglich sammeln! Ihr Team wird auch trainieren und wachsen lassen mussen." $) text!
	// Temp Testing
	// choice( "'Froster Freund" fbold )choice: rare2-caveman
	pick-3-locs-easy
	explorer? if drop
		easyloc-pick-stack drawcard
	then
;
	
(* AUTO CHOICE DECK EXAMPLE

deck-new 
	"'Raststatte" choice-card: beep ( <- the choice handler, i.e. rest-stop )
value choices-list

: test-cyoa cyoa-start choices-list drawcard ;

;

*)
