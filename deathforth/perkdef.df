perkdef{

: boring 2 4 rnd ;
: hilow 50 %chance if 0 1 rnd else 5 6 rnd then ;

// WEAPON_ <- chara .trademarkwep
: .trademarkwep args( weapon chara )
	<- chara .perk@ "Arma de Marca Registrada" $= if
		<- weapon <- chara .weapona!
		1 <- chara .weapon_nodropa!
	then
;

// Traits

: paranoidtrait args( chara )
	"PARANOICO APLICADO NO CHAR " type <- chara .name@ print
	6 <- chara .wits! 0 <- chara .attitude!
	<- chara .witsREV <- chara .attitudeREV
;

: oblivtrait args( chara )
	"OBLIVIOSO APLICADO NO CHAR " type <- chara .name@ print
	0 <- chara .wits! 6 <- chara .attitude!
	<- chara .witsREV <- chara .attitudeREV
;

: bandittrait args( chara )
	"BANDIDO APLICADO NO CHAR " type <- chara .name@ print
	0 <- chara .composure! 0 <- chara .loyalty!
	boring <- chara .wits! boring <- chara .attitude!
	<- chara .temperREV <- chara .loyaltyREV
;

: charmtrait args( chara )
	"ENCANTADOR APLICADO NO CHAR " type <- chara .name@ print
	6 <- chara .wits! 6 <- chara .attitude!
	<- chara .witsREV <- chara .attitudeREV
;

: tmgrating-main-events ( teid ) args( chara eventid )
	<- chara .party@ 0= if then;
	<- eventid MAIN_EVENT_DRIVING_START = if
		WEAPON_SPORTSHORN <- chara .weapona@ = if 
			20 <- chara .stackeda!
		then;
	then;
;

: gratingtrait args( chara )
	"IRRITATANTE APLICADO NO CHAR " type <- chara .name@ print
	0 <- chara .wits! 0 <- chara .attitude!
	<- chara .witsREV <- chara .attitudeREV
	WEAPON_SPORTSHORN <- chara .trademarkwep
	<- chara .perk@ "Arma de Marca Registrada" $= if
		' tmgrating-main-events <- chara .main_events!
	then
;

: fiercetrait args( chara )
	"TEMPERAMENTO FORTE APLICADO NO CHAR " type <- chara .name@ print
	0 <- chara .composure!
	1 STAT_STRENGTH <- chara .stat+
	<- chara .temperREV <- chara .strengthREV
;

: calmtrait args( chara )
	"CALMO SOB FOGO APLICADO NO CHAR " type <- chara .name@ print
	6 <- chara .composure!
	1 STAT_SHOOTING <- chara .stat+
	<- chara .temperREV <- chara .shootingREV
	WEAPON_HUNTING <- chara .trademarkwep
;

: nurturetrait args( chara )
	"PROTEGENDO APLICADO NO CHAR " type <- chara .name@ print
	boring <- chara .wits! 6 <- chara .attitude!
	1 STAT_MEDICAL <- chara .bonus+
	1 STAT_MEDICAL <- chara .stat+
	<- chara .attitudeREV <- chara .medicalREV
	WEAPON_BONESAW <- chara .trademarkwep
;

: tminvent-main-events ( teid ) args( chara eventid )
	<- chara .party@ 0= if then;
	<- eventid MAIN_EVENT_DRIVING_START = if
		WEAPON_EBLOWER <- chara .weapona@ = if 
			25 <- chara .stackeda!
		then;
	then;
;

: inventtrait args( chara )
	"CRIATIVO APLICADO NO CHAR " type <- chara .name@ print
	6 <- chara .wits! boring <- chara .attitude!
	1 STAT_MECHANICAL <- chara .bonus+
	1 STAT_MECHANICAL <- chara .stat+
	<- chara .witsREV <- chara .mechanicREV
	WEAPON_EBLOWER <- chara .trademarkwep
	<- chara .perk@ "Arma de Marca Registrada" $= if
		' tminvent-main-events <- chara .main_events!
	then
;

: frantictrait args( chara )
	"GEMIDOR FRENETICO APLICADO NO CHAR " type <- chara .name@ print
	boring <- chara .wits! 0 <- chara .attitude!
	1 STAT_DEXTERITY <- chara .stat+ 
	-1 STAT_VITALITY <- chara .stat+ <- chara .health--
	<- chara .attitudeREV
	WEAPON_NIGHTSTICK <- chara .trademarkwep
;

: toughtrait args( chara )
	"TIPO RESILIENTE APLICADO NO CHAR " type <- chara .name@ print
	boring <- chara .attitude! 0 <- chara .wits!
	1 STAT_VITALITY <- chara .stat+ <- chara .health++nostat
	<- chara .witsREV
;

: berserktrait args( chara )
	"BERSERK! APLICADO NO CHAR " type <- chara .name@ print
	0 <- chara .wits! 0 <- chara .attitude! 0 <- chara .composure! 0 <- chara .loyalty!
	1 STAT_STRENGTH <- chara .bonus+
	1 STAT_FITNESS <- chara .bonus+
	1 STAT_SHOOTING <- chara .bonus+
	3 STAT_STRENGTH <- chara .stat+
	3 STAT_FITNESS <- chara .stat+
	3 STAT_SHOOTING <- chara .stat+
	-2 STAT_VITALITY <- chara .stat+ <- chara .health-- <- chara .health--
	<- chara .witsREV <- chara .attitudeREV <- chara .temperREV <- chara .loyaltyREV 
	<- chara .shootingREV <- chara .strengthREV <- chara .fitnessREV
;

: civiltrait args( chara )
	"CIVILIZADO APLICADO EM CHAR " type <- chara .name@ print
	6 <- chara .wits! 6 <- chara .attitude! 6 <- chara .composure! 6 <- chara .loyalty!
	1 STAT_MEDICAL <- chara .stat+ 1 STAT_MECHANICAL <- chara .stat+
	-3 STAT_MORALE <- chara .bonus+ 4 <- chara .morale!
	<- chara .witsREV <- chara .attitudeREV <- chara .temperREV <- chara .loyaltyREV 
	<- chara .mechanicREV <- chara .medicalREV
	WEAPON_GUITAR <- chara .trademarkwep
;

: mysterytrait args( chara )
	"MISTERIOSO APLICADO EM CHAR " type <- chara .name@ print
	hilow <- chara .wits! hilow <- chara .attitude! hilow <- chara .composure!
	<- chara .perk@ "Artista Marcial" $= if
		3 for 50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_FITNESS <- chara .stat+ then next
	else
		50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_SHOOTING <- chara .stat+ then
		50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_FITNESS <- chara .stat+ then  
		50 %chance if 1 STAT_FITNESS <- chara .stat+ else 1 STAT_SHOOTING <- chara .stat+ then
	then
;

: practicaltrait args( chara )
	"PRATICO APLICADO EM CHAR " type <- chara .name@ print
	boring <- chara .wits! boring <- chara .attitude! boring <- chara .composure!
	// <- chara .witsREV <- chara .attitudeREV <- chara .temperREV
	50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_SHOOTING <- chara .stat+ then
	50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_FITNESS <- chara .stat+ then  
	50 %chance if 1 STAT_FITNESS <- chara .stat+ else 1 STAT_SHOOTING <- chara .stat+ then
	50 %chance if 1 STAT_MEDICAL <- chara .stat+ else 1 STAT_MECHANICAL <- chara .stat+ then
	1 STAT_MEDICAL <- chara .stat+ 1 STAT_MECHANICAL <- chara .stat+	
;

: warriortrait args( chara )
	"GUERREIRO APLICADO EM CHAR " type <- chara .name@ print
	2 STAT_STRENGTH <- chara .stat+ 2 STAT_FITNESS <- chara .stat+
	boring <- chara .wits! boring <- chara .attitude! boring <- chara .composure!
	<- chara .strengthREV <- chara .fitnessREV
;

: spectrait args( chara )
	"ESPECIALISTA APLICADO EM CHAR " type <- chara .name@ print
	// boring <- chara .wits! boring <- chara .attitude! boring <- chara .composure!
	1 STAT_STRENGTH <- chara .bonus+
	1 STAT_FITNESS <- chara .bonus+
	1 STAT_SHOOTING <- chara .bonus+
	1 STAT_STRENGTH <- chara .stat+
	1 STAT_FITNESS <- chara .stat+
	1 STAT_SHOOTING <- chara .stat+
	1 <- chara .carrying.slot_count!
	<- chara .shootingREV <- chara .strengthREV <- chara .fitnessREV
	<- chara .perk@ "Arco e Flechas" $= if
		WEAPON_BOW <- chara .weapona!
		1 <- chara .weapon_nodropa!
		0 <- chara .weaponb!
		60 <- chara .stackeda!
	then
	<- chara .perk@ "Colecionador de Armas" $= if
		gstats{ perk-guncrazy } 3 >= if 1 WEAPON_SHOTGUN trunk.weapon+ then
		gstats{ perk-guncrazy } 2 >= if 1 WEAPON_RIFLE trunk.weapon+ then
		gstats{ perk-guncrazy } 3 < if 1 WEAPON_PISTOL trunk.weapon+ then
		0 <- chara .weaponb!
		0 <- chara .weaponc!
	then
	<- chara .perk@ "Piromaniaco" $= if
		WEAPON_NAPALM <- chara .weapona!
		1 <- chara .weapon_nodropa!
		0 <- chara .weaponb!
		25 <- chara .stackeda!
	then
	WEAPON_KNIGHT <- chara .trademarkwep
;

: travellighttrait args( chara )
	"VIAJANTE APLICADO EM CHAR " type <- chara .name@ print
	1 STAT_DEXTERITY <- chara .stat+ 
	1 STAT_FITNESS <- chara .stat+
	2 <- chara .carrying.slot_count!
	<- chara .perk@ "Colecionador de Armas" $= if
		gstats{ perk-guncrazy } 2 >= if 1 WEAPON_RIFLE trunk.weapon+ then
		0 <- chara .weaponc!
	then
	WEAPON_SCLEAVER <- chara .trademarkwep
;

: grapplertrait args( chara )
	"LUTADOR APLICADO EM CHAR " type <- chara .name@ print
	boring <- chara .wits! boring <- chara .attitude! boring <- chara .composure!
	
	<- chara .perk@ "Ex Lutador" $= if
		// 2 STAT_STRENGTH <- chara .stat+ 2 STAT_FITNESS <- chara .stat+
		8 <- chara .specialbody!
		<- chara statmod{ .zombiewrestler }
		<- chara statmod{ .nocanshoot }
	else
		<- chara statmod{ .zombielifter }
	then
	
	WEAPON_NIGHTSTICK <- chara .trademarkwep
;

: herotypetrait args( chara )
	"HEROTIPO APLICADO EM CHAR " type <- chara .name@ print
	6 <- chara .loyalty! <- chara .loyaltyREV
;

: soundsleeptrait args( chara )
	"SONOPROFUNDO APLICADO EM CHAR " type <- chara .name@ print
	<- chara statmod{ .soundsleep }
;

: gourmandtrait args( chara )
	"GOURMAND APLICADO EM CHAR " type <- chara .name@ print
	1 STAT_VITALITY <- chara .stat+	<- chara .health++nostat
	WEAPON_SCLEAVER <- chara .trademarkwep
;

: cityseektrait args( chara )
	"USUARIO CITYSEEKER APLICOU EM CHAR " type <- chara .name@ print
;

: tinyeattrait args( chara )
	"USUARIO TINYEATER APLICOU EM CHAR " type <- chara .name@ print
	-1 STAT_FITNESS <- chara .bonus+ -2 STAT_STRENGTH <- chara .bonus+
	WEAPON_SCLEAVER <- chara .trademarkwep
;

: animefantrait args( chara )
	"USUARIO ANIMEFAN APLICOU EM CHAR " type <- chara .name@ print
	4 <- chara .morale!
	WEAPON_TRUEKATANA <- chara .weapona!
	1 <- chara .weapon_nodropa!
	WEAPON_NKATANA <- chara .trademarkwep
;

: phoenixtrait args( chara )
	"USUARIO PHOENIX APLICOU EM CHAR " type <- chara .name@ print
	<- chara statmod{ .fireproof }
	WEAPON_HOTPOKER <- chara .trademarkwep
;

: savanttrait args( chara )
	"USUARIO SAVANT APLICOU EM CHAR " type <- chara .name@ print
	-1 STAT_VITALITY <- chara .stat+ <- chara .health--
	-2 STAT_MORALE <- chara .bonus+ 4 <- chara .morale!
	1 STAT_SHOOTING <- chara .bonus+
	1 STAT_MECHANICAL <- chara .bonus+
	1 STAT_MEDICAL <- chara .bonus+
;

: fastlearntrait args( chara )
	"USUARIO RAPIDO APRENDENTES APLICOU EM CHAR " type <- chara .name@ print
;
	
// Perks

: healthcareperk args( chara )
	"USUARIO CUIDADO DE SAUDE APLICOU EM CHAR " type <- chara .name@ print
	gstats{ perk-healthcare } 3 >= if
		7 trunk-medical+
		2 STAT_MEDICAL <- chara .stat+
	else
		gstats{ perk-healthcare } 2 >= if
			5 trunk-medical+
			2 STAT_MEDICAL <- chara .stat+
		else
			4 trunk-medical+
			1 STAT_MEDICAL <- chara .stat+
		then
	then crap-weapon <- chara .weapona!
;
	
: mechanicperk args( chara )
	"USUARIO MECANICO APLICOU EM CHAR " type <- chara .name@ print
	gstats{ perk-mechanic } 3 >= if
		2 STAT_MECHANICAL <- chara .stat+ 2 STAT_FITNESS <- chara .stat+
	else
		gstats{ perk-mechanic } 2 >= if
			2 STAT_MECHANICAL <- chara .stat+ 1 STAT_FITNESS <- chara .stat+
		else
			1 STAT_MECHANICAL <- chara .stat+ 1 STAT_FITNESS <- chara .stat+
		then	
	then WEAPON_WRENCH <- chara .weapona!
	
;

: athleteperk args( chara )
	"USUARIO ATHLETICO APLICOU EM CHAR " type <- chara .name@ print
	gstats{ perk-athlete } 3 >= if
		2 STAT_FITNESS <- chara .stat+ 2 STAT_STRENGTH <- chara .stat+
	else
		gstats{ perk-athlete } 2 >= if
			2 STAT_FITNESS <- chara .stat+ 1 STAT_STRENGTH <- chara .stat+
		else
			1 STAT_FITNESS <- chara .stat+ 1 STAT_STRENGTH <- chara .stat+
		then	
	then sports-weapon <- chara .weapona!
;

: fighterperk args( chara )
	"USUARIO LUTADOR APLICOU EM CHAR " type <- chara .name@ print
	gstats{ perk-fighter } 3 >= if
		2 STAT_STRENGTH <- chara .stat+ 2 STAT_SHOOTING <- chara .stat+
	else
		gstats{ perk-fighter } 2 >= if
			2 STAT_STRENGTH <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		else
			1 STAT_STRENGTH <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		then	
	then WEAPON_HATCHET <- chara .weapona!

;

: surgeonperk args( chara )
	"USUARIO CIRURGAO APLICOU EM CHAR " type <- chara .name@ print
	gstats{ perk-surgeon } 3 >= if
		2 STAT_MEDICAL <- chara .stat+ 2 STAT_SHOOTING <- chara .stat+
	else
		gstats{ perk-surgeon } 2 >= if
			2 STAT_MEDICAL <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		else
			1 STAT_MEDICAL <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		then	
	then WEAPON_SCALPEL <- chara .weapona!
;

: gungineerperk args( chara )
	"USUARIO GUNGINEIRO APLICOU EM CHAR " type <- chara .name@ print
	gstats{ perk-gungineer } 3 >= if
		2 STAT_MECHANICAL <- chara .stat+ 2 STAT_SHOOTING <- chara .stat+
	else
		gstats{ perk-gungineer } 2 >= if
			1 STAT_MECHANICAL <- chara .stat+ 2 STAT_SHOOTING <- chara .stat+
		else
			1 STAT_MECHANICAL <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		then	
	then WEAPON_CROWBAR <- chara .weapona!
;

// Pistoleer, Shotgunner, and Rifleman are no longer available
// I set them to have no level in the new system for legacy support

: pistolperk args( chara )
	"PISTOLA APLICADA NO CHAR " type <- chara .name@ print
	3 STAT_SHOOTING <- chara .stat+	
	30 trunk-bullet+
	crap-weapon <- chara .weapona!
	WEAPON_PISTOL <- chara .weaponb!
;

: shotgunperk args( chara )
	"ESCOPETA APLICADA NO CHAR " type <- chara .name@ print
	3 STAT_SHOOTING <- chara .stat+	
	crap-weapon <- chara .weapona!
	15 trunk-shotgun-shell+
	WEAPON_SHOTGUN <- chara .weaponb!	
;

: rifleperk args( chara )
	"RIFLE APLICADO NO CHAR " type <- chara .name@ print
	3 STAT_SHOOTING <- chara .stat+
	crap-weapon <- chara .weapona!
	24 trunk-rifle-shell+
	WEAPON_RIFLE <- chara .weaponb!	
;

: guncrazyperk args( chara )
	"GUNCRAZY APLICADO NO CHAR " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	gstats{ perk-guncrazy } 3 >= if
		3 STAT_SHOOTING <- chara .stat+
		WEAPON_SHOTGUN <- chara .weaponb! 8 trunk-shotgun-shell+
		WEAPON_RIFLE <- chara .weaponc!	12 trunk-rifle-shell+
		1 WEAPON_PISTOL trunk.weapon+
	else
		gstats{ perk-guncrazy } 2 >= if
			2 STAT_SHOOTING <- chara .stat+
			WEAPON_RIFLE <- chara .weaponc!	12 trunk-rifle-shell+
		else
			1 STAT_SHOOTING <- chara .stat+
		then WEAPON_PISTOL <- chara .weaponb!
	then 17 trunk-bullet+
;

: carnut-picker
	0 stack
		CAR_BUG shove
		CAR_GRANDPA shove
		CAR_MUSCLE1 shove
		CAR_MUSCLE2 shove
		CAR_HOTROD shove
		CAR_STATIONWAGON shove
	shuffles pops nip
;

: carnut? args( chara ) <- chara .perk@ "Car Nut" $= ;

: carnutperk args( chara )
	"CAR NUT APLICADO NO CHAR " type <- chara .name@ print
	gstats{ perk-carnut } 3 >= if
		3 STAT_MECHANICAL <- chara .stat+
	else
		gstats{ perk-carnut } 2 >= if
			2 STAT_MECHANICAL <- chara .stat+
		else
			1 STAT_MECHANICAL <- chara .stat+
		then	
	then crap-weapon <- chara .weapona!
// Commented out to fix the "faces familiares dao carro contra a vontade" problem
//	carnut-picker to starting-car
//	starting-car get-car
;

: megabuffperk args( chara )
	"MEGABUFF APLICADO NO CHAR " type <- chara .name@ print
	gstats{ perk-megabuff } 3 >= if
		4 STAT_STRENGTH <- chara .stat+
	else
		gstats{ perk-megabuff } 2 >= if
			3 STAT_STRENGTH <- chara .stat+	
		else
			2 STAT_STRENGTH <- chara .stat+	
		then	
	then WEAPON_METAL <- chara .weapona!
;

: ultrafitperk args( chara )
	"ULTRAFIT APLICADO NO CHAR " type <- chara .name@ print
	gstats{ perk-ultrafit } 3 >= if
		4 STAT_FITNESS <- chara .stat+
	else
		gstats{ perk-ultrafit } 2 >= if
			3 STAT_FITNESS <- chara .stat+
		else
			2 STAT_FITNESS <- chara .stat+
		then	
	then crap-weapon <- chara .weapona! 2 trunk-food+
;

: bruiserperk args( chara )
	"BRUISER APLICADO NO CHAR " type <- chara .name@ print
	gstats{ perk-bruiser } 3 >= if
		3 STAT_STRENGTH <- chara .stat+
	else
		gstats{ perk-bruiser } 2 >= if
			2 STAT_STRENGTH <- chara .stat+	
		else
			1 STAT_STRENGTH <- chara .stat+	
		then	
	then WEAPON_BOXING <- chara .weapon_default! 
	1 STAT_VITALITY <- chara .stat+	<- chara .health++nostat
	-1 STAT_DEXTERITY <- chara .bonus+
;

: martialartistperk args( chara )
	"MARTIAL ARTIST APLICADO NO CHAR " type <- chara .name@ print
	gstats{ perk-martialartist } 3 >= if
		2 STAT_FITNESS <- chara .stat+ 1 STAT_FITNESS <- chara .bonus+
	else
		gstats{ perk-martialartist } 2 >= if
			2 STAT_FITNESS <- chara .stat+
		else
			1 STAT_FITNESS <- chara .stat+
		then	
	then 1 STAT_STRENGTH <- chara .stat+
	WEAPON_KUNG <- chara .weapon_default! <- chara .nocanshoot
	-10 STAT_SHOOTING <- chara .bonus+
;

: dogfriendperk args( chara )
	"FRIEND OF DOG APLICADO NO CHAR " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	<- chara statmod{ .dogpal }
;

: explorerperk args( chara )
	"EXPLORER APLICADO NO CHAR " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	<- chara statmod{ .explorer }
;

: exwrestlerperk args( chara )
	"EX WRESTLER APLICADO NO CHAR " type <- chara .name@ print
	gstats{ perk-exwrestler } 3 >= if
		2 STAT_FITNESS <- chara .stat+ 1 STAT_STRENGTH <- chara .stat+
	else
		gstats{ perk-exwrestler } 2 >= if
			1 STAT_FITNESS <- chara .stat+ 1 STAT_STRENGTH <- chara .stat+
		else
			1 STAT_FITNESS <- chara .stat+
		then 
	then <- chara statmod{ .zombielifter }
		-3 STAT_SHOOTING <- chara .bonus+
		0 <- chara .loyalty! <- chara .loyaltyREV 
;

: hiddenpotentialperk args( chara )
	"POTENCIAL OCULTO APLICADO NO PERSONAGEM " type <- chara .name@ print
	50 %chance if
		1 STAT_FITNESS <- chara .bonus+
		gstats{ perk-hiddenpotential } 2 >= if 1 STAT_STRENGTH <- chara .stat+ then
	else
		1 STAT_STRENGTH <- chara .bonus+
		gstats{ perk-hiddenpotential } 2 >= if 1 STAT_FITNESS <- chara .stat+ then
	then
	gstats{ perk-hiddenpotential } 3 >= if
		50 %chance if
			1 STAT_STRENGTH <- chara .stat+
		else
			1 STAT_FITNESS <- chara .stat+
		then
	then
;

: hagglerperk args( chara )
	"REGATEADOR APLICADO NO PERSONAGEM " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	<- chara statmod{ .haggler }
;

: pathfinderperk args( chara )
	"DESBRAVADOR APLICADO NO PERSONAGEM " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	<- chara statmod{ .pathfinder }
;

: trademarkperk args( chara )
	"MARCA REGISTRADA APLICADA NO PERSONAGEM " type <- chara .name@ print
	gstats{ perk-trademark } 3 >= if
		WEAPON_MACHETE2
	else
		gstats{ perk-trademark } 2 >= if
			50 %chance if WEAPON_ALUMINUM else WEAPON_MACHETE2 then
		else
			WEAPON_ALUMINUM 
		then	
	then <- chara .trademarkwep
;

: naturalshotperk args( chara )
	"TIRO NATURAL APLICADO NO PERSONAGEM " type <- chara .name@ print
	gstats{ perk-naturalshot } 3 >= if
		2 STAT_SHOOTING <- chara .bonus+ 
	else
		gstats{ perk-naturalshot } 2 >= if
			1 STAT_SHOOTING <- chara .bonus+ 
			1 STAT_SHOOTING <- chara .stat+
		else
			1 STAT_SHOOTING <- chara .bonus+ 
		then 
	then
	crap-weapon <- chara .weapona!
;

: tstcperk args( chara )
	"T*S*T*C APLICADO NO PERSONAGEM " type <- chara .name@ print
	gstats{ perk-tstc } 3 >= if
		-4 STAT_FITNESS <- chara .bonus+ 
	else
		gstats{ perk-tstc } 2 >= if
			-5 STAT_FITNESS <- chara .bonus+ 
		else
			-6 STAT_FITNESS <- chara .bonus+ 
		then 
	then 6 STAT_FITNESS <- chara .stat+ 
	6 STAT_STRENGTH <- chara .bonus+
;

: shieldofhopeperk args( chara )
	"ESCUDO DA ESPERANCA APLICADO NO PERSONAGEM " type <- chara .name@ print
	crap-weapon <- chara .weapona!
;

: archer-formula args( chara )
	gstats{ perk-archer } 3 * 1 + <- chara .trait@ "Especialista" $= if 2 * then +
;

: archer-max args( chara )
	<- chara .trait@ "Especialista" $= if 60 else 30 then
;

: archer-main-events ( teid ) args( chara eventid )
	<- chara .party@ 0= if then;
	<- eventid MAIN_EVENT_DRIVING_START = if
		WEAPON_BOW <- chara .weapona@ = if 
			<- chara .stackeda@ <- chara archer-formula <- chara .stackeda!
			<- chara .stackeda@ <- chara archer-max > if <- chara archer-max <- chara .stackeda! then
		then;
		WEAPON_BOW <- chara .weaponb@ = if 
			<- chara .stackedb@ <- chara archer-formula <- chara .stackedb!
			<- chara .stackedb@ <- chara archer-max > if <- chara archer-max <- chara .stackedb! then
		then;
	then;
;

: archerperk args( chara )
	"ARCO E FLECHA APLICADO NO PERSONAGEM " type <- chara .name@ print
	2 STAT_STRENGTH <- chara .stat+
	crap-weapon <- chara .weapona!
	WEAPON_BOW <- chara .weaponb!
	1 <- chara .weapon_nodropb!
	30 <- chara .stackedb!
	' archer-main-events <- chara .main_events!
;

: pyro-weapon args( chara )
	<- chara .trait@ "Especialista" $= if WEAPON_NAPALM else WEAPON_BLOWTORCH then
;

: pyro-formula args( chara )
	gstats{ perk-pyro } 2 * 2 + <- chara .trait@ "Especialista" $= if 2 + then +
;

: pyro-max args( chara )
	<- chara .trait@ "Especialista" $= if 25 else 30 then
;

: pyro-main-events ( teid ) args( chara eventid )
	<- chara .party@ 0= if then;
	<- eventid MAIN_EVENT_DRIVING_START = if
		<- chara pyro-weapon <- chara .weapona@ = if 
			<- chara .stackeda@ <- chara pyro-formula <- chara .stackeda!
			<- chara .stackeda@ <- chara pyro-max > if <- chara pyro-max <- chara .stackeda! then
		then;
		<- chara pyro-weapon <- chara .weaponb@ = if 
			<- chara .stackedb@ <- chara pyro-formula <- chara .stackedb!
			<- chara .stackedb@ <- chara pyro-max > if <- chara pyro-max <- chara .stackedb! then
		then;
	then;
;

: pyroperk args( chara )
	"PIROMANIACO PERSONAGEM " type <- chara .name@ print
	<- chara statmod{ .fireproof }
	crap-weapon <- chara .weapona!
	WEAPON_BLOWTORCH <- chara .weaponb!
	1 <- chara .weapon_nodropb!
	30 <- chara .stackedb!
	' pyro-main-events <- chara .main_events!
;

: NEXT_LEVEL cr$ .. cr$ .. RED .. "PROXIMO NIVEL: " ;
: LOCKED cr$ .. cr$ .. RED .. 
	game.location 0 > if "BLOQUEADO! " else "BLOQUEADO: Desbloqueie na Cabana de Vantagens e Tracos em Zombo Town" then
	
;
// Formerly : cr$ .. "PROXIMO NIVEL: " rbold

: mechaniclevel 
	gstats{ perk-mechanic } 3 >= if
		($ "+ Ganhe 2 pontos em mecanica!		+ Ganhe 2 pontos em condicionamento fisico!" $) 2 lvl
	then;
	gstats{ perk-mechanic } 2 >= if
		($ "+ Ganhe 2 pontos em mecanica!		+ Ganhe 1 ponto em condicionamento fisico" .. NEXT_LEVEL .. "2 pontos em condicionamento fisico!" $) 1 lvl
	then;
		($ "+ Ganhe 1 ponto em mecanica		+ Ganhe 1 ponto em condicionamento fisico" .. 
		gstats{ perk-mechanic } 1 < if 
			($ LOCKED $) 1 lock
		else
			NEXT_LEVEL .. "2 pontos em mecanica!"
		then $)
;

: athletelevel 
	gstats{ perk-athlete } 3 >= if
		($ "+ Ganhe 2 pontos em condicionamento fisico!		+ Ganhe 2 pontos em forca!" $) 2 lvl
	then;
	gstats{ perk-athlete } 2 >= if
		($ "+ Ganhe 2 pontos em condicionamento fisico!		+ Ganhe 1 ponto em forca" .. NEXT_LEVEL .. "2 pontos em forca!" $) 1 lvl
	then;
		($ "+ Ganhe 1 ponto em condicionamento fisico		+ Ganhe 1 ponto em forca" .. NEXT_LEVEL .. "2 pontos em condicionamento fisico!" $)
;

: fighterlevel 
	gstats{ perk-fighter } 3 >= if
		($ "+ Ganhe 2 pontos em forca!		+ Ganhe 2 pontos em tiro!" $) 2 lvl
	then;
	gstats{ perk-fighter } 2 >= if
		($ "+ Ganhe 2 pontos em forca!		+ Ganhe 1 ponto em tiro" .. NEXT_LEVEL .. "2 pontos em tiro!" $) 1 lvl
	then;
		($ "+ Ganhe 1 ponto em forca		+ Ganhe 1 ponto em tiro" .. NEXT_LEVEL .. "2 pontos em forca!" $)
;

: surgeonlevel 
	gstats{ perk-surgeon } 3 >= if
		($ "+ Ganhe 2 pontos em medicina!		+ Ganhe 2 pontos em tiro!" $) 2 lvl
	then;
	gstats{ perk-surgeon } 2 >= if
		($ "+ Ganhe 2 pontos em medicina!		+ Ganhe 1 ponto em tiro" .. NEXT_LEVEL .. "2 pontos em tiro!" $) 1 lvl
	then;
		($ "+ Ganhe 1 ponto em medico		+ Ganhe 1 ponto em tiro" .. NEXT_LEVEL .. "2 pontos em medico!" $)
;

: gungineerlevel 
	gstats{ perk-gungineer } 3 >= if
		($ "+ Ganhe 2 pontos em tiro!		+ Ganhe 2 pontos em mecanico!" $) 2 lvl
	then;
	gstats{ perk-gungineer } 2 >= if
		($ "+ Ganhe 2 pontos em tiro!		+ Ganhe 1 ponto em mecanico" .. NEXT_LEVEL .. "2 pontos em mecanica!" $) 1 lvl
	then;
		($ "+ Ganhe 1 ponto em tiro		+ Ganhe 1 ponto em mecanico" .. NEXT_LEVEL .. "2 pontos em tiro!" $)
;

: healthcarelevel 
	gstats{ perk-healthcare } 3 >= if
		($ "+ Comece com 7 suprimentos medicos!		+ Ganhe 2 pontos em medico!" $) 2 lvl
	then;
	gstats{ perk-healthcare } 2 >= if
		($ "+ Comece com 5 suprimentos medicos		+ Ganhe 2 pontos em medico!" .. NEXT_LEVEL .. "7 suprimentos medicos!" $) 1 lvl
	then;
		($ "+ Comece com 4 suprimentos medicos		+ Ganhe 1 ponto em medico" .. NEXT_LEVEL .. "5 suprimentos medicos, 2 em medico!" $)
;


// Pistoleer, shotgunner, rifleman supported for legacy but no longer with level tracking
: pistollevel ($ "+ Ganhe 3 pontos em tiro!" $) 2 lvl ;
: shotgunlevel ($ "+ Ganhe 3 pontos em tiro!" $) 2 lvl ;
: riflelevel ($ "+ Ganhe 3 pontos em tiro!" $) 2 lvl ;

: guncrazylevel 
	gstats{ perk-guncrazy } 3 >= if
		($ "+ Gain 3 points in shooting!
			+ Start with a shotgun, rifle, pistol, and ammo!!" $) 2 lvl
	then;
	gstats{ perk-guncrazy } 2 >= if
		($ "+ Gain 2 points in shooting
			+ Start with a rifle, pistol, and ammo!" .. NEXT_LEVEL .. "3 em tiro e uma espingarda!" $) 1 lvl
	then;
		($ "+ Gain 1 point in shooting
			+ Start with a pistol and bullets!" .. NEXT_LEVEL .. "2 em tiro e um rifle!" $)
;

: carnutlevel 
	gstats{ perk-carnut } 3 >= if
		($ "+ Ganhe 3 pontos em mecanico!" $) 2 lvl
	then;
	gstats{ perk-carnut } 2 >= if
		($ "point in electrical" .. NEXT_LEVEL .. "3 pontos em mecanica!" $) 1 lvl
	then;
		($ "+ Ganhe 1 ponto em mecanica" .. NEXT_LEVEL .. "point in electrical" $)
;

: megabufflevel 
	gstats{ perk-megabuff } 3 >= if
		($ "+ Ganhe 4 pontos em forca!" $) 2 lvl
	then;
	gstats{ perk-megabuff } 2 >= if
		($ "+ Ganhe 3 pontos em forca" .. NEXT_LEVEL .. "4 pontos em forca!" $) 1 lvl
	then;
		($ "+ Ganhe 2 pontos em forca" .. NEXT_LEVEL .. "3 pontos em forca" $)
;

: ultrafitlevel 
	gstats{ perk-ultrafit } 3 >= if
		($ "+ Ganhe 4 pontos em preparo fisico!" $) 2 lvl
	then;
	gstats{ perk-ultrafit } 2 >= if
		($ "+ Ganhe 3 pontos em preparo fisico" .. NEXT_LEVEL .. "4 pontos em preparo fisico!" $) 1 lvl
	then;
		($ "+ Ganhe 2 pontos em preparo fisico" .. NEXT_LEVEL .. "3 pontos em preparo fisico" $)
;

: martialartistlevel 
	gstats{ perk-martialartist } 3 >= if
		($ "+ Gain 3 points in fitness, 1 in strength!
			+ Fitness can go 1 point over the usual maximum!" $) 2 lvl
	then;
	gstats{ perk-martialartist } 2 >= if
		($ "+ Ganhe 2 pontos em forma, 1 em forca" .. NEXT_LEVEL .. "3 de forma, agora pode ir 1 acima do maximo!" $) 1 lvl
	then;
		($ "+ Ganhe 1 pontos em forma, 1 em forca" .. NEXT_LEVEL .. "2 pontos em forma" $)
;

: bruiserlevel 
	gstats{ perk-bruiser } 3 >= if
		($ "+ Ganhe 3 pontos em forca!" $) 2 lvl
	then;
	gstats{ perk-bruiser } 2 >= if
		($ "+ Ganhe 2 pontos em forca" .. NEXT_LEVEL .. "3 em forca!" $) 1 lvl
	then;
		($ "+ Ganhe 1 pontos em forca" .. NEXT_LEVEL .. "2 pontos em forca" $)
;

: doglevel 
	gstats{ perk-dogfriend } 3 >= if
		($ "+ 70% de chance extra de recrutas aleatorios serem caes" $) 2 lvl
	then;
	gstats{ perk-dogfriend } 2 >= if
		($ "+ 35% de chance extra de recrutas aleatorios serem caes" .. NEXT_LEVEL .. "70% de chance!" $) 1 lvl
	then;
		($ NEXT_LEVEL .. "35% de chance de recrutas serem caes" $)
;

: explorerlevel 
	gstats{ perk-explorer } 3 >= if
		($ "+ O custo de relancamento do ABL e muito menor!" $) 2 lvl
	then;
	gstats{ perk-explorer } 2 >= if
		($ "+ O custo de relancamento do ABL e menor" .. NEXT_LEVEL .. "Muito menos gas para rerolls de ABL!" $) 1 lvl
	then;
		($ NEXT_LEVEL .. "Menos gas para rerolls de ABL" $)
;

: exwrestlerlevel 
	gstats{ perk-exwrestler } 3 >= if
		($ "+ Ganha 2 pontos em aptidao!		+ Ganha 1 ponto em forca!" $) 2 lvl
	then;
	gstats{ perk-exwrestler } 2 >= if
		($ "+ Ganha 1 ponto em aptidao		+ Ganha 1 ponto em forca!" .. NEXT_LEVEL .. "2 pontos em condicionamento fisico!" $) 1 lvl
	then;
		($ "+ Ganha 1 ponto em aptidao" .. 
		gstats{ perk-exwrestler } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "1 ponto de forca!"
		then $)
;

: hiddenpotentiallevel 
	gstats{ perk-hiddenpotential } 3 >= if
		($ "+ Ganha 1 ponto na habilidade nao escolhida		+ Ganha 1 ponto final em aptidao ou forca, a sorte!" $) 2 lvl
	then;
	gstats{ perk-hiddenpotential } 2 >= if
		($ "+ Ganha 1 ponto na outra habilidade" .. NEXT_LEVEL .. "Ponto aleatorio em aptidao ou forca!" $) 1 lvl
	then;
		gstats{ perk-hiddenpotential } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "1 ponto na habilidade nao escolhida" $)
		then
;

: hagglerlevel 
	gstats{ perk-haggler } 3 >= if
		($ "+ Tolls de bandidos sao menos caros!" $) 2 lvl
	then;
	gstats{ perk-haggler } 2 >= if
		($ "+ Tolls de bandidos sao menos caros" .. NEXT_LEVEL .. "Pedagios ainda menores!" $) 1 lvl
	then;
		gstats{ perk-haggler } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "Pedagios de bandidos sao menores" $)
		then
;

: pathfinderlevel 
	gstats{ perk-pathfinder } 3 >= if
		($ "+ 75% de chance de pular penalidades para o 2 dia de caminhada!" $) 2 lvl
	then;
	gstats{ perk-pathfinder } 2 >= if
		($ "+ 60% de chance de pular penalidade para o 2 dia de caminhada" .. NEXT_LEVEL .. "75% de chance!" $) 1 lvl
	then;
		gstats{ perk-pathfinder } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "60% de chance de pular penalidade para o 2 dia de caminhada" $)
		then
;

: trademarklevel 
	gstats{ perk-trademark } 3 >= if
		($ "+ Arma padrao e um facao resistente!!" $) 2 lvl
	then;
	gstats{ perk-trademark } 2 >= if
		($ "+ Arma padrao: 50% chance de batao de aluminio, 50% de machete" .. NEXT_LEVEL .. "100% chance de machete robusto!" $) 1 lvl
	then;
		($ "+ Arma padrao e um batao de aluminio!" ..
		gstats{ perk-trademark } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "50% chance de machete robusto!" $)
		then $)
;

: naturalshotlevel 
	gstats{ perk-naturalshot } 3 >= if
		($ "+ Ganha 2 pontos em tiro!		+ O tiro pode ter 2 pontos a mais do que o normal" $) 2 lvl
	then;
	gstats{ perk-naturalshot } 2 >= if
		($ "+ Ganha 2 pontos em tiro!		+ O tiro pode ter 1 ponto a mais do que o normal" .. NEXT_LEVEL .. "2 acima do maximo!" $) 1 lvl
	then;
		($ "+ Gana 1 ponto em tiro		+ O tiro pode ter 1 ponto a mais do que o normal" .. 
		gstats{ perk-naturalshot } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "2 pontos em tiro!"
		then $)
;

: tstclevel 
		($ "- Can't raise fitness!!! " $) ..
	gstats{ perk-tstc } 3 >= if
		($ "A aptidao comeca em 2!" $) 2 lvl
	then;
	gstats{ perk-tstc } 2 >= if
		($ "A aptidao comeca em 1" .. NEXT_LEVEL .. "A aptidao chega a 2!" $) 1 lvl
	then;
		gstats{ perk-tstc } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "A aptidao chega a 1" $)
		then
;

: shieldofhopelevel 
	gstats{ perk-shieldofhope } 3 >= if
		($ "2 morale" $) 2 lvl
	then;
	gstats{ perk-shieldofhope } 2 >= if
		($ "3 morale" .. NEXT_LEVEL .. "Apenas 2 moral!" $) 1 lvl
	then;
		($ "  voce perde 4 de moral cada vez que foge da morte" ..
		gstats{ perk-shieldofhope } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "3 moral perdido"
		then $)
;

: archerlevel
		($ "+ Faca flechas para seu arco entre missoes, " $) ..
	gstats{ perk-archer } 3 >= if
		($ "ate 10!" $) 2 lvl
	then;
	gstats{ perk-archer } 2 >= if
		($ "ate 7" .. NEXT_LEVEL .. "Crie 10 flechas!" $) 1 lvl
	then;
		($ "ate 4" ..
		gstats{ perk-archer } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "Crie 7 flechas"
		then $)
;

: pyrolevel
		($ "+ Recarregue seu macarico entre missoes, " $) ..
	gstats{ perk-pyro } 3 >= if
		($ "ate 8 cargas!" $) 2 lvl
	then;
	gstats{ perk-pyro } 2 >= if
		($ "ate 6 cargas" .. NEXT_LEVEL .. "Encontre 8 cargas!" $) 1 lvl
	then;
		($ "ate 4 cargas" ..
		gstats{ perk-pyro } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "6 charges"
		then $)
;

: specialist-lock
	gstats{ trait-specialist } 1 < if ($ LOCKED $) 1 lock else "" then ;
: travellight-lock
	gstats{ trait-travellight } 1 < if ($ LOCKED $) 1 lock else "" then ;
: grappler-lock
	gstats{ trait-grappler } 1 < if ($ LOCKED $) 1 lock else "" then ;
: herotype-lock
	gstats{ trait-herotype } 1 < if ($ LOCKED $) 1 lock else "" then ;
: animefan-lock
	gstats{ trait-animefan } 1 < if ($ LOCKED $) 1 lock else "" then ;
: soundsleep-lock
	gstats{ trait-soundsleep } 1 < if ($ LOCKED $) 1 lock else "" then ;
: cityseek-lock
	gstats{ trait-cityseek } 1 < if ($ LOCKED $) 1 lock else "" then ;
: tinyeat-lock
	gstats{ trait-tinyeat } 1 < if ($ LOCKED $) 1 lock else "" then ;
: gourmand-lock
	gstats{ trait-gourmand } 1 < if ($ LOCKED $) 1 lock else "" then ;
: phoenix-lock
	gstats{ trait-phoenix } 1 < if ($ LOCKED $) 1 lock else "" then ;
: savant-lock // Rewrote this from fireproof, so uses trait-fireproof
	gstats{ trait-fireproof } 1 < if ($ LOCKED $) 1 lock else "" then ;
: fastlearn-lock
	gstats{ trait-fastlearn } 1 < if ($ LOCKED $) 1 lock else "" then ;

// Definitions

: defperks init

	// Perks
	"Mecanico" $perk
		($ "O carro e vida! Nota: Nao necessariamente um mecanico COMPETENTE.		+ Comecar com uma chave inglesa		" .. mechaniclevel $) $desc
		' mechanicperk applyword
		
	"Atleta" $perk
		($ "Um passado atletico se traduz bem na sobrevivencia a zumbis.		+ Comecar com uma arma esportiva aleatoria		" .. athletelevel $) $desc
		' athleteperk applyword
		
	"Lutador" $perk
		($ "Essa pessoa sempre foi uma lutadora de verdade.		+ Comecar com uma machadinha		" .. fighterlevel $) $desc
		' fighterperk applyword
		
	"Cirurgiao" $perk
		($ "Tem uma boa intuicao de anatomia e uma mao firme.		+ Comecar com um bisturi		" .. surgeonlevel $) $desc
		' surgeonperk applyword
		
	"Engenheiro de armas" $perk
		($ "Bom com qualquer coisa mecanica, e armas sao mecanicas.		+ Comecar com um pe de cabra		" .. gungineerlevel $) $desc
		' gungineerperk applyword
		
(*	"Pistoleiro" $perk
		($ "Pistolas miram rapido e a municao e abundante!		+ Comecar com uma pistola e 30 balas		" .. pistollevel $) $desc
		' pistolperk applyword
		
	"Atirador de rifle" $perk
		($ "Um tiro de rifle pode atravessar uma linha de zumbis, nas maos certas!		+ Comecar com um rifle e 24 municoes		" .. riflelevel $) $desc
		' rifleperk applyword
		
	"Escopeteiro" $perk
		($ "Todo mundo sabe que espingardas sao a verdadeira arma anti zumbi!		+ Comece com uma espingarda e 15 cartuchos		" .. shotgunlevel $) $desc
		' shotgunperk applyword *)

	"Artista Marcial" $perk
		($ "Sem armas? Sem problemas!		+ Comece com um poderoso ataque desarmado de dois golpes!!		  Recusa se a usar armas de fogo, motosserras e algumas outras!!		" .. martialartistlevel $) $desc
		' martialartistperk applyword		
		
	"Brutamontes" $perk
		($ "Move se devagar, bate muito forte, leva uma surra!		+ Comece com um ataque desarmado melhor! Receba mais um golpe do que o normal!		  Velocidade de caminhada mais lenta!		" .. bruiserlevel $) $desc
		' bruiserperk applyword
	
	"Colecionador de Armas" $perk
		($ "Voce sabia que acumular todas essas armas seria util! Eventualmente. Voce simplesmente sabia disso!		" .. guncrazylevel $) $desc
		' guncrazyperk applyword
	
	"Saude" $perk
		($ "Os idiotas sao mordidos por zumbis o tempo todo. Melhor estar preparado! 		" .. healthcarelevel $) $desc
		' healthcareperk applyword	
		
	"Car Nut" $perk
		($ "Ser um entusiasta de carros e praticamente um superpoder agora!		+ Comece com um carro melhor		" .. carnutlevel $) $desc
		' carnutperk applyword
				
	"Megabuff" $perk
		($ "Possivelmente muito forte para controlar. Util para pegar e jogar moveis pesados!		+ Comece com um cano de metal		" .. megabufflevel $) $desc
		' megabuffperk applyword
		
	"Ultrafit" $perk
		($ "Toda aquela ioga realmente valeu a pena!		+ Comece com algumas barras de granola		" .. ultrafitlevel $) $desc 
		' ultrafitperk applyword
				
	"Amigo do Cachorro" $perk
		($ "Esta pessoa adora caes e tende a encontra los!		+ Caes raivosos podem se tornar amigaveis" .. doglevel $) $desc
		' dogfriendperk applyword

	"Explorador" $perk
		($ "Algumas pessoas simplesmente tem um otimo senso de direcao ao dirigir! + Obtenha uma escolha de local extra durante os eventos Always Be Looting!" .. explorerlevel $) $desc
		' explorerperk applyword
		
	"Ex Lutador" $perk
		($ "Era o chefao antes de um tragico acidente no ringue! + Pegue zumbis caidos, entao jogue ou bata neles!   Grande penalidade para habilidade maxima de tiro." .. exwrestlerlevel $) $desc
		' exwrestlerperk applyword
		
	"Potencial Oculto" $perk
		($ "Parece despretensioso, mas pode superar os outros com treinamento! + Ganhe um ponto em forca ou condicionamento fisico aleatoriamente. Em seguida, pode ir 1 acima do maximo!" .. hiddenpotentiallevel $) $desc
		' hiddenpotentialperk applyword
	
	"Maior Vendedor" $perk
		($ "O bom senso de vendas ainda tem seu proprio nicho! + Obtem 1 8 alimentos extras ao vender para um comprador de armas, dependendo do preco original. + Sem penalidade de moral ao pagar pedagios de bandidos com comida!" .. hagglerlevel $) $desc
		' hagglerperk applyword
	
	"Desbravador" $perk
		($ "A experiencia de caminhada ajuda a evitar os terrores da floresta! + Remove um evento de penalidade do primeiro dia de caminhada, toda vez que voce perde o carro!" .. pathfinderlevel $) $desc
		' pathfinderperk applyword
	
	"Arma de Marca Registrada" $perk
		($ "Destaca se da multidao, com uma arma exclusiva! + Comeca com uma arma especial, dependendo do traco!   Nao pode largar esta arma, mesmo na morte." .. trademarklevel $) $desc
		' trademarkperk applyword
		
	"Tiro Natural" $perk
		($ "Um talento natural para atirar! So precisa de mais treinamento e talvez ate mesmo uma arma e municao!" .. naturalshotlevel $) $desc
		' naturalshotperk applyword
	
	"T*S*T*C" $perk
		($ "Definitely too swole! REFUSES to do cardio!
		+ Starts at full strength!
		+ May train strength 6 times over the maximum!!!
		" .. tstclevel $) $desc
		' tstcperk applyword
		
	"Escudo da Esperanca" $perk
		($ "Continua passando por pura forca de vontade! + Protege contra acertos fatais se o moral estiver acima de :" .. shieldofhopelevel $) $desc
		' shieldofhopeperk applyword
		
	"Arco e Flechas" $perk
		($ "O tiro com arco acabou sendo um hobby util!		+ Comece com um arco silencioso, 30 flechas, 2 pontos em forca!		  Nao pode largar este arco, nem mesmo na morte.		" .. archerlevel $) $desc
		' archerperk applyword
		
	"Piromaniaco" $perk
		($ "'Zumbis sao extremamente inflamaveis!		+ Comece com um macarico e protecao contra fogo!		  Nao pode largar este macarico, nem mesmo na morte.		" .. pyrolevel $) $desc
		' pyroperk applyword

// TEST MAX PERKS
(*

	32 for

	"TESTE" i .. $perk
		($ "O tiro com arco acabou sendo um hobby util!		+ Comece com um arco silencioso, 30 flechas, 2 pontos em forca!		  Nao pode largar este arco, nem mesmo na morte.		" .. archerlevel $) $desc
		' archerperk applyword
	next
*)
		
	// "Barbaro"
	// "Campeao de Home Run"
	// "Feroz"
			
	// Traits
	"Paranoico" $trait
		"Uma combinacao de alta percepcao e pessimismo extremo permite que alguem se prepare para o pior!		+ Pode identificar tracos em novos recrutas		+ Sempre atento ao perigo		  Pode ser um verdadeiro resmungao" $desc
		' paranoidtrait applyword
	"Alheio" $trait
		"Uma otima visao da vida combinada com pouca percepcao permite alguns feitos magicos de negacao!		+ Pode ignorar o desespero		  Rolagens ruins para percepcao e inteligencia" $desc
		' oblivtrait applyword
	"Encantador" $trait
		"'Da percepcao dos outros, uma boa atitude e puro carisma, ha algo nessa pessoa que abre portas!		+ Encanta se para obter coisas de graca ou sair de situacoes ruins		  Nao pode se livrar de tudo" $desc
		' charmtrait applyword
	"Irritante" $trait
		"This person thinks they're soooooo cool. But they're not! They're just annoying!
		+ Tell people to 'Cool it'
		- Anger pretty much everybody" $desc
		' gratingtrait applyword
	"Bandido" $trait
		"Ser indigno de confianca pode ser uma vantagem no pos apocalipse.		+ Enganar os outros		  Enganar o grupo		  Bomba relogio" $desc
		' bandittrait applyword
	"Passado misterioso" $trait
		"This person... has a mysterious past......
		+ 3 points given to fight skills at random
		- Randomized and extreme personality!" $desc
		' mysterytrait applyword
	"Pratico" $trait
		"Possui uma variedade de habilidades uteis, mas e um pouco aburrido.		+ 3 pontos adicionais em habilidades de luta aleatorias		+ 3 pontos adicionais em habilidades de apoio aleatorios		  Personalidade aborrecida" $desc
		' practicaltrait applyword
	"Guerreiro" $trait
		"Bom comeco nas habilidades de zumbi batida, com uma personalidade nondescripta.		+ 2 pontos a mais forca!		+ 2 pontos a mais em aptidao fisica!		  Personalidade aborrecida" $desc
		' warriortrait applyword
	"Temperado Feroz" $trait
		"'Alguem tem um mau temperamento! A agressao pode vir a ser util.		+ 1 ponto extra em forca		  Temperamento ruim devido a baixa composicao		+ Temperamento as vezes pode ser bom" $desc
		' fiercetrait applyword
	"Calmo sob Fogo" $trait
		"Calmo e coletivo. Util ao disparar em uma multidao!		+ Muito calmo devido a alta composicao		+ 1 ponto extra em tiro		  Atraente para zumbis" $desc
		' calmtrait applyword
	"Nutridor" $trait
		"Always thinking of others! Nao se tornou alimento de zumbi ainda.		+ 2 pontos a mais em cura! Otima atitude		+ Pode ir um ponto acima do limite maximo para habilidade medica!!		  Talvez seja uma artefato" $desc
		' nurturetrait applyword
	"Inventivo" $trait
		"A gente se sinta a vontade com a maquinaria, como carros.		+ 2 pontos a mais em mecanica! Otima inteligencia logica!		+ Pode ir um ponto acima do limite maximo para habilidade mecanica!!		  Precisa de mais pratica para reparar carro" $desc
		' inventtrait applyword
	"Chorao Desesperado" $trait
		"Tipo fragil. Mas muito bom em fugir!		+ Bonus de velocidade de corrida!		  Leva um golpe a menos do que o normal		  Ma atitude" $desc
		' frantictrait applyword
	"Tipo Resiliente" $trait
		"Muito resistente! O musculo! Nao e um planejador de longo prazo.		+ Leva um golpe a mais do que o normal		  Rolagens de inteligencia ruins" $desc
		' toughtrait applyword
	"BERSERK!" $trait
		"Destroy all zombies! Never retreat! Oh no, I got bit!
		+ 4 points to strength, fitness, and shooting!!
		+ Can go one over the maximum for the above stats!!!
		- Super low personality stats! Dies in one bite!!" $desc
		' berserktrait applyword
	"Civilizado" $trait
		"Mantem valores antigos antes do mundo enlouquecer. Isso e bom e ruim.		+ Estatisticas de lealdade e personalidade super altas!		+ 1 ponto para habilidades medicas e mecanicas!!		  Penalidade de moral permanente e significativa!!" $desc
		' civiltrait applyword
	"Sono Profundo" $trait
		($ "Dorma a qualquer hora, em qualquer lugar. #1 melhor em dormir!		+ Sono sobre humano! Precisa de muito pouco sono.		+ Nunca fica com o status de CANSADO, nunca." .. soundsleep-lock $) $desc
		' soundsleeptrait applyword
	"Gourmand" $trait
		($ "'Realmente aprecia comida enlatada velha!		+ Comer uma refeicao completa restaura 1 ponto da moral deste personagem, ate o maximo! Ganha um ponto extra de saude maxima!		  Come um pouco mais, 3 alimentos em vez de 2. Ficar com pouca comida diminui a moral mais rapido!" .. gourmand-lock $) $desc
		' gourmandtrait applyword
	"Buscador de Cidade" $trait
		($ "Abencoado com uma vida interessante!		+ Muito mais chance de encontrar um predio ou personagem estranho em eventos de saque na cidade! Chance normal: 10%  Com traco: 50%		+ Duplica a chance de encontrar acampamentos de comerciantes raros!" .. cityseek-lock $) $desc
		' cityseektrait applyword
	"Viaje Leve" $trait
		($ "Carregue menos para que possa correr um pouco mais rapido!		+ Bonus de velocidade de corrida!		+ 1 ponto a mais em fitness!		  So pode carregar duas armas por vez!" .. travellight-lock $) $desc
		' travellighttrait applyword
	"Tipo de Heroi" $trait
		($ "'Eu sempre serei seu guarda costas. Bem, uma vez.		+ Salva um companheiro de equipe da morte em um evento de texto!		  So faz isso uma vez por jogo!		+ Comeca com lealdade maxima!" .. herotype-lock $) $desc
		' herotypetrait applyword
	"Comilaozinho" $trait
		($ "Come muito menos do que o normal! Da pequenas mordidas!		+ Uma refeicao completa requer apenas 1 alimento!!		  Recebe uma penalidade de 2 pontos na forca maxima!		  Recebe uma penalidade de 1 ponto na forma fisica maxima." .. tinyeat-lock $) $desc
		' tinyeattrait applyword	
	"Fa de Anime" $trait
		($ "'Isso e exatamente como meus animes de zumbis!		+ A arma e substituida por uma Katana Forte superpoderosa.		  A Katana nao pode ser largada, mesmo na morte.		  AVISO: Evite obter moral total! CUIDADO COM ANIME!" .. animefan-lock $) $desc
		' animefantrait applyword	
	"Especialista" $trait
		($ "Um pouco obcecado por um metodo de matar zumbis.		+ 2 pontos de forca, condicionamento fisico e tiro		+ Pode passar do maximo para as estatisticas acima!!		  So pode carregar UMA ARMA por vez!!" .. specialist-lock $) $desc
		' spectrait applyword
	"Grappler" $trait
		($ "Se um zumbi cair, voce pode pega lo!		+ Arremessar ou arremessar zumbis carregados!		  Personalidade chata" .. grappler-lock $) $desc
		' grapplertrait applyword
	"Fenix" $trait
		($ "A Fenix renasce das cinzas! *bate os bracos como se fossem asas*		+ Ressuscita se na morte, com saude total!!		+ Inflamavel! Fique nas chamas!		  Perde todo o traco apos a primeira morte!" .. phoenix-lock $) $desc
		' phoenixtrait applyword
	"Dingus Savant" $trait
		($ "Sempre destinado a grandes coisas! Nunca se preocupou em trabalhar para isso.		+ Recebe um bonus de 1 ponto no maximo para todas as habilidades!		  Leva 1 golpe a menos do que o normal!		  Penalidade de 2 pontos na moral maxima!" .. savant-lock $) $desc
		' savanttrait applyword
	"Aprendiz Rapido" $trait
		($ "Comeca baixo, mas aprende novas habilidades rapidamente!		+ Obtem o dobro da quantidade de tiro, mecanica e habilidade medica!		  Cada bonus de crescimento para apos sua habilidade chegar a 4 pontos" .. fastlearn-lock $) $desc
		' fastlearntrait applyword
	
		
	// "Sono Profundo"
	// "Gourmand"
	// "Buscador de Cidade"
	// "Viaje Leve"
	
	// "Comilaozinho"
	// "Fa de Anime"
	// "Especialista"
	// "Grappler"
	// "Fenix"
	// ""
	// ""
	// ""
;

defperks

}
