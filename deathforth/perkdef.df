perkdef{

: boring 2 4 rnd ;
: hilow 50 %chance if 0 1 rnd else 5 6 rnd then ;

// WEAPON_ <- chara .trademarkwep
: .trademarkwep args( weapon chara )
	<- chara .perk@ "Arme de marque deposee" $= if
		<- weapon <- chara .weapona!
		1 <- chara .weapon_nodropa!
	then
;

// Traits

: paranoidtrait args( chara )
	"LA PARANOIA EST APPLIQUEE SUR LE CHAR. " type <- chara .name@ print
	6 <- chara .wits! 0 <- chara .attitude!
	<- chara .witsREV <- chara .attitudeREV
;

: oblivtrait args( chara )
	"L'APPLICATION D'OBLIVION SUR LE PERSONNAGE. " type <- chara .name@ print
	0 <- chara .wits! 6 <- chara .attitude!
	<- chara .witsREV <- chara .attitudeREV
;

: bandittrait args( chara )
	"LE BANDIT A ETE APPLIQUE SUR LE CHAR. " type <- chara .name@ print
	0 <- chara .composure! 0 <- chara .loyalty!
	boring <- chara .wits! boring <- chara .attitude!
	<- chara .temperREV <- chara .loyaltyREV
;

: charmtrait args( chara )
	"APPLICATION DE CHARME SUR CHAR " type <- chara .name@ print
	6 <- chara .wits! 6 <- chara .attitude!
	<- chara .witsREV <- chara .attitudeREV
;

: tmgrating-main-events ( teid ) args( chara eventid )
	<- chara .party@ 0= if then;
	<- eventid MAIN_EVENT_DRIVING_START = if
		WEAPON_SPORTSHORN <- chara .weapona@ = if 
			20 <- chara .stackeda!
		then;
	then;
;

: gratingtrait args( chara )
	"GRILLE APPLIQUEE SUR CHAR. " type <- chara .name@ print
	0 <- chara .wits! 0 <- chara .attitude!
	<- chara .witsREV <- chara .attitudeREV
	WEAPON_SPORTSHORN <- chara .trademarkwep
	<- chara .perk@ "Arme de marque deposee" $= if
		' tmgrating-main-events <- chara .main_events!
	then
;

: fiercetrait args( chara )
	"APPLICATION DE L'ACIER DURS SUR LE CHAR. " type <- chara .name@ print
	0 <- chara .composure!
	1 STAT_STRENGTH <- chara .stat+
	<- chara .temperREV <- chara .strengthREV
;

: calmtrait args( chara )
	"APPLIQUER CALM UNDER FIRE SUR LE CHAR : " type <- chara .name@ print
	6 <- chara .composure!
	1 STAT_SHOOTING <- chara .stat+
	<- chara .temperREV <- chara .shootingREV
	WEAPON_HUNTING <- chara .trademarkwep
;

: nurturetrait args( chara )
	"S'OCCUPER DE CHAR, LE NOURRIR. " type <- chara .name@ print
	boring <- chara .wits! 6 <- chara .attitude!
	1 STAT_MEDICAL <- chara .bonus+
	1 STAT_MEDICAL <- chara .stat+
	<- chara .attitudeREV <- chara .medicalREV
	WEAPON_BONESAW <- chara .trademarkwep
;

: tminvent-main-events ( teid ) args( chara eventid )
	<- chara .party@ 0= if then;
	<- eventid MAIN_EVENT_DRIVING_START = if
		WEAPON_EBLOWER <- chara .weapona@ = if 
			25 <- chara .stackeda!
		then;
	then;
;

: inventtrait args( chara )
	"APPLICATION INVENTIVE SUR CHAR " type <- chara .name@ print
	6 <- chara .wits! boring <- chara .attitude!
	1 STAT_MECHANICAL <- chara .bonus+
	1 STAT_MECHANICAL <- chara .stat+
	<- chara .witsREV <- chara .mechanicREV
	WEAPON_EBLOWER <- chara .trademarkwep
	<- chara .perk@ "Arme de marque deposee" $= if
		' tminvent-main-events <- chara .main_events!
	then
;

: frantictrait args( chara )
	"LE FRANTIC WHINER A ETE APPLIQUE AU PERSONNAGE. " type <- chara .name@ print
	boring <- chara .wits! 0 <- chara .attitude!
	1 STAT_DEXTERITY <- chara .stat+ 
	-1 STAT_VITALITY <- chara .stat+ <- chara .health--
	<- chara .attitudeREV
	WEAPON_NIGHTSTICK <- chara .trademarkwep
;

: toughtrait args( chara )
	"TYPE RESILIENT APPLIQUE SUR CHAR. " type <- chara .name@ print
	boring <- chara .attitude! 0 <- chara .wits!
	1 STAT_VITALITY <- chara .stat+ <- chara .health++nostat
	<- chara .witsREV
;

: berserktrait args( chara )
	"LE PERSONNAGE SUBIT DES DEGATS ADDITIONNELS ET UNE AUGMENTATION DE LA VITESSE D'ATTAQUE. " type <- chara .name@ print
	0 <- chara .wits! 0 <- chara .attitude! 0 <- chara .composure! 0 <- chara .loyalty!
	1 STAT_STRENGTH <- chara .bonus+
	1 STAT_FITNESS <- chara .bonus+
	1 STAT_SHOOTING <- chara .bonus+
	3 STAT_STRENGTH <- chara .stat+
	3 STAT_FITNESS <- chara .stat+
	3 STAT_SHOOTING <- chara .stat+
	-2 STAT_VITALITY <- chara .stat+ <- chara .health-- <- chara .health--
	<- chara .witsREV <- chara .attitudeREV <- chara .temperREV <- chara .loyaltyREV 
	<- chara .shootingREV <- chara .strengthREV <- chara .fitnessREV
;

: civiltrait args( chara )
	"CIVILISE ! APPLIQUE SUR CHAR. " type <- chara .name@ print
	6 <- chara .wits! 6 <- chara .attitude! 6 <- chara .composure! 6 <- chara .loyalty!
	1 STAT_MEDICAL <- chara .stat+ 1 STAT_MECHANICAL <- chara .stat+
	-3 STAT_MORALE <- chara .bonus+ 4 <- chara .morale!
	<- chara .witsREV <- chara .attitudeREV <- chara .temperREV <- chara .loyaltyREV 
	<- chara .mechanicREV <- chara .medicalREV
	WEAPON_GUITAR <- chara .trademarkwep
;

: mysterytrait args( chara )
	"APPLICATION MYSTERIEUSE SUR LE CHAR " type <- chara .name@ print
	hilow <- chara .wits! hilow <- chara .attitude! hilow <- chara .composure!
	<- chara .perk@ "Artiste martial" $= if
		3 for 50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_FITNESS <- chara .stat+ then next
	else
		50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_SHOOTING <- chara .stat+ then
		50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_FITNESS <- chara .stat+ then  
		50 %chance if 1 STAT_FITNESS <- chara .stat+ else 1 STAT_SHOOTING <- chara .stat+ then
	then
;

: practicaltrait args( chara )
	"PRATIQUES APPLIQUEES SUR LE PERSONNAGE. " type <- chara .name@ print
	boring <- chara .wits! boring <- chara .attitude! boring <- chara .composure!
	// <- chara .witsREV <- chara .attitudeREV <- chara .temperREV
	50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_SHOOTING <- chara .stat+ then
	50 %chance if 1 STAT_STRENGTH <- chara .stat+ else 1 STAT_FITNESS <- chara .stat+ then  
	50 %chance if 1 STAT_FITNESS <- chara .stat+ else 1 STAT_SHOOTING <- chara .stat+ then
	50 %chance if 1 STAT_MEDICAL <- chara .stat+ else 1 STAT_MECHANICAL <- chara .stat+ then
	1 STAT_MEDICAL <- chara .stat+ 1 STAT_MECHANICAL <- chara .stat+	
;

: warriortrait args( chara )
	"GUERRIER S'EST APPLIQUE AU PERSONNAGE " type <- chara .name@ print
	2 STAT_STRENGTH <- chara .stat+ 2 STAT_FITNESS <- chara .stat+
	boring <- chara .wits! boring <- chara .attitude! boring <- chara .composure!
	<- chara .strengthREV <- chara .fitnessREV
;

: spectrait args( chara )
	"SPECIALISTE APPLIQUE SUR LE CHAR. " type <- chara .name@ print
	// boring <- chara .wits! boring <- chara .attitude! boring <- chara .composure!
	1 STAT_STRENGTH <- chara .bonus+
	1 STAT_FITNESS <- chara .bonus+
	1 STAT_SHOOTING <- chara .bonus+
	1 STAT_STRENGTH <- chara .stat+
	1 STAT_FITNESS <- chara .stat+
	1 STAT_SHOOTING <- chara .stat+
	1 <- chara .carrying.slot_count!
	<- chara .shootingREV <- chara .strengthREV <- chara .fitnessREV
	<- chara .perk@ "Fabriquer des fleches et un arc long." $= if
		WEAPON_BOW <- chara .weapona!
		1 <- chara .weapon_nodropa!
		0 <- chara .weaponb!
		60 <- chara .stackeda!
	then
	<- chara .perk@ "Collectionneur d'armes a feu" $= if
		gstats{ perk-guncrazy } 3 >= if 1 WEAPON_SHOTGUN trunk.weapon+ then
		gstats{ perk-guncrazy } 2 >= if 1 WEAPON_RIFLE trunk.weapon+ then
		gstats{ perk-guncrazy } 3 < if 1 WEAPON_PISTOL trunk.weapon+ then
		0 <- chara .weaponb!
		0 <- chara .weaponc!
	then
	<- chara .perk@ "Pyromane" $= if
		WEAPON_NAPALM <- chara .weapona!
		1 <- chara .weapon_nodropa!
		0 <- chara .weaponb!
		25 <- chara .stackeda!
	then
	WEAPON_KNIGHT <- chara .trademarkwep
;

: travellighttrait args( chara )
	"LUMINAIRE VOYAGEUR APPLIQUE SUR UN BLINDE " type <- chara .name@ print
	1 STAT_DEXTERITY <- chara .stat+ 
	1 STAT_FITNESS <- chara .stat+
	2 <- chara .carrying.slot_count!
	<- chara .perk@ "Collectionneur d'armes a feu" $= if
		gstats{ perk-guncrazy } 2 >= if 1 WEAPON_RIFLE trunk.weapon+ then
		0 <- chara .weaponc!
	then
	WEAPON_SCLEAVER <- chara .trademarkwep
;

: grapplertrait args( chara )
	"L'ADVERSAIRE A PRIS A LA GORGE TON PERSONNAGE. " type <- chara .name@ print
	boring <- chara .wits! boring <- chara .attitude! boring <- chara .composure!
	
	<- chara .perk@ "Ancien lutteur" $= if
		// 2 STAT_STRENGTH <- chara .stat+ 2 STAT_FITNESS <- chara .stat+
		8 <- chara .specialbody!
		<- chara statmod{ .zombiewrestler }
		<- chara statmod{ .nocanshoot }
	else
		<- chara statmod{ .zombielifter }
	then
	
	WEAPON_NIGHTSTICK <- chara .trademarkwep
;

: herotypetrait args( chara )
	"L'HEROGLYPHE APPLIQUE SUR LE PERSONNAGE. " type <- chara .name@ print
	6 <- chara .loyalty! <- chara .loyaltyREV
;

: soundsleeptrait args( chara )
	"L'APPLICATION SONNYSLEEP A ETE APPLIQUEE SUR LE PERSONNAGE. " type <- chara .name@ print
	<- chara statmod{ .soundsleep }
;

: gourmandtrait args( chara )
	"APPLICATE GOURMAND SUR LE CHAR " type <- chara .name@ print
	1 STAT_VITALITY <- chara .stat+	<- chara .health++nostat
	WEAPON_SCLEAVER <- chara .trademarkwep
;

: cityseektrait args( chara )
	"RECHERCHE DE VILLE APPLIQUEE SUR CHAR. " type <- chara .name@ print
;

: tinyeattrait args( chara )
	"L'ALIMENTATEUR TINYEATER APPLIQUE SUR UN CHAR. " type <- chara .name@ print
	-1 STAT_FITNESS <- chara .bonus+ -2 STAT_STRENGTH <- chara .bonus+
	WEAPON_SCLEAVER <- chara .trademarkwep
;

: animefantrait args( chara )
	"LE PERSONNAGE D'ANIME A ETE APPLIQUE SUR LE CARACTERE. " type <- chara .name@ print
	4 <- chara .morale!
	WEAPON_TRUEKATANA <- chara .weapona!
	1 <- chara .weapon_nodropa!
	WEAPON_NKATANA <- chara .trademarkwep
;

: phoenixtrait args( chara )
	"L'APPLICATION PHOENIX A ETE APPLIQUEE SUR LE CHAR. " type <- chara .name@ print
	<- chara statmod{ .fireproof }
	WEAPON_HOTPOKER <- chara .trademarkwep
;

: savanttrait args( chara )
	"EXPERT APPLIQUE SUR CHARIOT. " type <- chara .name@ print
	-1 STAT_VITALITY <- chara .stat+ <- chara .health--
	-2 STAT_MORALE <- chara .bonus+ 4 <- chara .morale!
	1 STAT_SHOOTING <- chara .bonus+
	1 STAT_MECHANICAL <- chara .bonus+
	1 STAT_MEDICAL <- chara .bonus+
;

: fastlearntrait args( chara )
	"APPRENANT RAPIDE APPLIQUE SUR CHAR. " type <- chara .name@ print
;
	
// Perks

: healthcareperk args( chara )
	"SOINS DE SANTE APPLIQUES SUR CHAR " type <- chara .name@ print
	gstats{ perk-healthcare } 3 >= if
		7 trunk-medical+
		2 STAT_MEDICAL <- chara .stat+
	else
		gstats{ perk-healthcare } 2 >= if
			5 trunk-medical+
			2 STAT_MEDICAL <- chara .stat+
		else
			4 trunk-medical+
			1 STAT_MEDICAL <- chara .stat+
		then
	then crap-weapon <- chara .weapona!
;
	
: mechanicperk args( chara )
	"MECANICIEN APPLIQUE SUR CHAR " type <- chara .name@ print
	gstats{ perk-mechanic } 3 >= if
		2 STAT_MECHANICAL <- chara .stat+ 2 STAT_FITNESS <- chara .stat+
	else
		gstats{ perk-mechanic } 2 >= if
			2 STAT_MECHANICAL <- chara .stat+ 1 STAT_FITNESS <- chara .stat+
		else
			1 STAT_MECHANICAL <- chara .stat+ 1 STAT_FITNESS <- chara .stat+
		then	
	then WEAPON_WRENCH <- chara .weapona!
	
;

: athleteperk args( chara )
	"L'ATHLETE S'EST PRESENTE SUR LE CHAR. " type <- chara .name@ print
	gstats{ perk-athlete } 3 >= if
		2 STAT_FITNESS <- chara .stat+ 2 STAT_STRENGTH <- chara .stat+
	else
		gstats{ perk-athlete } 2 >= if
			2 STAT_FITNESS <- chara .stat+ 1 STAT_STRENGTH <- chara .stat+
		else
			1 STAT_FITNESS <- chara .stat+ 1 STAT_STRENGTH <- chara .stat+
		then	
	then sports-weapon <- chara .weapona!
;

: fighterperk args( chara )
	"COMBATTANT APPLIQUE SUR LE CHAR. " type <- chara .name@ print
	gstats{ perk-fighter } 3 >= if
		2 STAT_STRENGTH <- chara .stat+ 2 STAT_SHOOTING <- chara .stat+
	else
		gstats{ perk-fighter } 2 >= if
			2 STAT_STRENGTH <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		else
			1 STAT_STRENGTH <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		then	
	then WEAPON_HATCHET <- chara .weapona!

;

: surgeonperk args( chara )
	"CHIRURGIEN A APPLIQUE SUR LE CHAR. " type <- chara .name@ print
	gstats{ perk-surgeon } 3 >= if
		2 STAT_MEDICAL <- chara .stat+ 2 STAT_SHOOTING <- chara .stat+
	else
		gstats{ perk-surgeon } 2 >= if
			2 STAT_MEDICAL <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		else
			1 STAT_MEDICAL <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		then	
	then WEAPON_SCALPEL <- chara .weapona!
;

: gungineerperk args( chara )
	"INGENIEUR GUNG EN APPLIQUE SUR CHAR. " type <- chara .name@ print
	gstats{ perk-gungineer } 3 >= if
		2 STAT_MECHANICAL <- chara .stat+ 2 STAT_SHOOTING <- chara .stat+
	else
		gstats{ perk-gungineer } 2 >= if
			1 STAT_MECHANICAL <- chara .stat+ 2 STAT_SHOOTING <- chara .stat+
		else
			1 STAT_MECHANICAL <- chara .stat+ 1 STAT_SHOOTING <- chara .stat+
		then	
	then WEAPON_CROWBAR <- chara .weapona!
;

// Pistoleer, Shotgunner, and Rifleman are no longer available
// I set them to have no level in the new system for legacy support

: pistolperk args( chara )
	"PISTO APPLIQUE SUR CHAR " type <- chara .name@ print
	3 STAT_SHOOTING <- chara .stat+	
	30 trunk-bullet+
	crap-weapon <- chara .weapona!
	WEAPON_PISTOL <- chara .weaponb!
;

: shotgunperk args( chara )
	"ARME A FEU A CANNISSE APPLIQUEE SUR LE CHAR. " type <- chara .name@ print
	3 STAT_SHOOTING <- chara .stat+	
	crap-weapon <- chara .weapona!
	15 trunk-shotgun-shell+
	WEAPON_SHOTGUN <- chara .weaponb!	
;

: rifleperk args( chara )
	"FUSIL APPLIQUE SUR CHAR " type <- chara .name@ print
	3 STAT_SHOOTING <- chara .stat+
	crap-weapon <- chara .weapona!
	24 trunk-rifle-shell+
	WEAPON_RIFLE <- chara .weaponb!	
;

: guncrazyperk args( chara )
	"IL A ETE APPLIQUE LA MODIFI CATION GUNCRAZY SUR LE PERSONNAGE. " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	gstats{ perk-guncrazy } 3 >= if
		3 STAT_SHOOTING <- chara .stat+
		WEAPON_SHOTGUN <- chara .weaponb! 8 trunk-shotgun-shell+
		WEAPON_RIFLE <- chara .weaponc!	12 trunk-rifle-shell+
		1 WEAPON_PISTOL trunk.weapon+
	else
		gstats{ perk-guncrazy } 2 >= if
			2 STAT_SHOOTING <- chara .stat+
			WEAPON_RIFLE <- chara .weaponc!	12 trunk-rifle-shell+
		else
			1 STAT_SHOOTING <- chara .stat+
		then WEAPON_PISTOL <- chara .weaponb!
	then 17 trunk-bullet+
;

: carnut-picker
	0 stack
		CAR_BUG shove
		CAR_GRANDPA shove
		CAR_MUSCLE1 shove
		CAR_MUSCLE2 shove
		CAR_HOTROD shove
		CAR_STATIONWAGON shove
	shuffles pops nip
;

: carnut? args( chara ) <- chara .perk@ "Roulement de voiture" $= ;

: carnutperk args( chara )
	"AMATEUR DE VOITURES APPLIQUE SUR CHARRETTE. " type <- chara .name@ print
	gstats{ perk-carnut } 3 >= if
		3 STAT_MECHANICAL <- chara .stat+
	else
		gstats{ perk-carnut } 2 >= if
			2 STAT_MECHANICAL <- chara .stat+
		else
			1 STAT_MECHANICAL <- chara .stat+
		then	
	then crap-weapon <- chara .weapona!
// Commented out to fix the "visages familiers donnent voiture sans consentement." problem
//	carnut-picker to starting-car
//	starting-car get-car
;

: megabuffperk args( chara )
	"LE PERSONNAGE A BENEFICIE D'UN BUFFER MEGAPOUVOIR " type <- chara .name@ print
	gstats{ perk-megabuff } 3 >= if
		4 STAT_STRENGTH <- chara .stat+
	else
		gstats{ perk-megabuff } 2 >= if
			3 STAT_STRENGTH <- chara .stat+	
		else
			2 STAT_STRENGTH <- chara .stat+	
		then	
	then WEAPON_METAL <- chara .weapona!
;

: ultrafitperk args( chara )
	"L'ADVERSAIRE A PRIS A LA GORGE TON PERSONNAGE. " type <- chara .name@ print
	gstats{ perk-ultrafit } 3 >= if
		4 STAT_FITNESS <- chara .stat+
	else
		gstats{ perk-ultrafit } 2 >= if
			3 STAT_FITNESS <- chara .stat+
		else
			2 STAT_FITNESS <- chara .stat+
		then	
	then crap-weapon <- chara .weapona! 2 trunk-food+
;

: bruiserperk args( chara )
	"LE PERSONNAGE A APPLIQUE UN BRAS DE FER SUR LE CARACTERE. " type <- chara .name@ print
	gstats{ perk-bruiser } 3 >= if
		3 STAT_STRENGTH <- chara .stat+
	else
		gstats{ perk-bruiser } 2 >= if
			2 STAT_STRENGTH <- chara .stat+	
		else
			1 STAT_STRENGTH <- chara .stat+	
		then	
	then WEAPON_BOXING <- chara .weapon_default! 
	1 STAT_VITALITY <- chara .stat+	<- chara .health++nostat
	-1 STAT_DEXTERITY <- chara .bonus+
;

: martialartistperk args( chara )
	"L'ARTISTE MARTIAL S'EST APPLIQUE SUR LE CHAR. " type <- chara .name@ print
	gstats{ perk-martialartist } 3 >= if
		2 STAT_FITNESS <- chara .stat+ 1 STAT_FITNESS <- chara .bonus+
	else
		gstats{ perk-martialartist } 2 >= if
			2 STAT_FITNESS <- chara .stat+
		else
			1 STAT_FITNESS <- chara .stat+
		then	
	then 1 STAT_STRENGTH <- chara .stat+
	WEAPON_KUNG <- chara .weapon_default! <- chara .nocanshoot
	-10 STAT_SHOOTING <- chara .bonus+
;

: dogfriendperk args( chara )
	"AMI DE CHIEN APPLIQUE SUR CHAR " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	<- chara statmod{ .dogpal }
;

: explorerperk args( chara )
	"EXPLORER APPLIQUE SUR CHAR : L'EXPLORATEUR EST MONTE SUR LE CHAR. " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	<- chara statmod{ .explorer }
;

: exwrestlerperk args( chara )
	"ANCIEN CATCHEUR S'EST AGRIPPE A CHAR. " type <- chara .name@ print
	gstats{ perk-exwrestler } 3 >= if
		2 STAT_FITNESS <- chara .stat+ 1 STAT_STRENGTH <- chara .stat+
	else
		gstats{ perk-exwrestler } 2 >= if
			1 STAT_FITNESS <- chara .stat+ 1 STAT_STRENGTH <- chara .stat+
		else
			1 STAT_FITNESS <- chara .stat+
		then 
	then <- chara statmod{ .zombielifter }
		-3 STAT_SHOOTING <- chara .bonus+
		0 <- chara .loyalty! <- chara .loyaltyREV 
;

: hiddenpotentialperk args( chara )
	"LA COMMANDE HIDDENPOT A ETE APPLIQUEE SUR LE PERSONNAGE. " type <- chara .name@ print
	50 %chance if
		1 STAT_FITNESS <- chara .bonus+
		gstats{ perk-hiddenpotential } 2 >= if 1 STAT_STRENGTH <- chara .stat+ then
	else
		1 STAT_STRENGTH <- chara .bonus+
		gstats{ perk-hiddenpotential } 2 >= if 1 STAT_FITNESS <- chara .stat+ then
	then
	gstats{ perk-hiddenpotential } 3 >= if
		50 %chance if
			1 STAT_STRENGTH <- chara .stat+
		else
			1 STAT_FITNESS <- chara .stat+
		then
	then
;

: hagglerperk args( chara )
	"NEGOCIER APPLIQUE SUR LE CHAR. " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	<- chara statmod{ .haggler }
;

: pathfinderperk args( chara )
	"LE PERSONNAGE A UTILISE UN OUTIL DE RECHERCHE DE CHEMIN OPTIMAL, CE QUI LUI A PERMIS D'ATTEINDRE SA CIBLE EN MINIMISANT " type <- chara .name@ print
	crap-weapon <- chara .weapona!
	<- chara statmod{ .pathfinder }
;

: trademarkperk args( chara )
	"DEMANDE DE MARQUE DEPOSEE SUR LE CARACTERE. " type <- chara .name@ print
	gstats{ perk-trademark } 3 >= if
		WEAPON_MACHETE2
	else
		gstats{ perk-trademark } 2 >= if
			50 %chance if WEAPON_ALUMINUM else WEAPON_MACHETE2 then
		else
			WEAPON_ALUMINUM 
		then	
	then <- chara .trademarkwep
;

: naturalshotperk args( chara )
	"APPLICATION DE NATURALSHOT SUR CHAR. " type <- chara .name@ print
	gstats{ perk-naturalshot } 3 >= if
		2 STAT_SHOOTING <- chara .bonus+ 
	else
		gstats{ perk-naturalshot } 2 >= if
			1 STAT_SHOOTING <- chara .bonus+ 
			1 STAT_SHOOTING <- chara .stat+
		else
			1 STAT_SHOOTING <- chara .bonus+ 
		then 
	then
	crap-weapon <- chara .weapona!
;

: tstcperk args( chara )
	"LA METHODE TSTC " type <- chara .name@ print
	gstats{ perk-tstc } 3 >= if
		-4 STAT_FITNESS <- chara .bonus+ 
	else
		gstats{ perk-tstc } 2 >= if
			-5 STAT_FITNESS <- chara .bonus+ 
		else
			-6 STAT_FITNESS <- chara .bonus+ 
		then 
	then 6 STAT_FITNESS <- chara .stat+ 
	6 STAT_STRENGTH <- chara .bonus+
;

: shieldofhopeperk args( chara )
	"CE QU'ON NE PEUT ARRETER.MP3 " type <- chara .name@ print
	crap-weapon <- chara .weapona!
;

: archer-formula args( chara )
	gstats{ perk-archer } 3 * 1 + <- chara .trait@ "Specialiste" $= if 2 * then +
;

: archer-max args( chara )
	<- chara .trait@ "Specialiste" $= if 60 else 30 then
;

: archer-main-events ( teid ) args( chara eventid )
	<- chara .party@ 0= if then;
	<- eventid MAIN_EVENT_DRIVING_START = if
		WEAPON_BOW <- chara .weapona@ = if 
			<- chara .stackeda@ <- chara archer-formula <- chara .stackeda!
			<- chara .stackeda@ <- chara archer-max > if <- chara archer-max <- chara .stackeda! then
		then;
		WEAPON_BOW <- chara .weaponb@ = if 
			<- chara .stackedb@ <- chara archer-formula <- chara .stackedb!
			<- chara .stackedb@ <- chara archer-max > if <- chara archer-max <- chara .stackedb! then
		then;
	then;
;

: archerperk args( chara )
	"ARC ET FLECHE APPLIQUEES SUR CHAR " type <- chara .name@ print
	2 STAT_STRENGTH <- chara .stat+
	crap-weapon <- chara .weapona!
	WEAPON_BOW <- chara .weaponb!
	1 <- chara .weapon_nodropb!
	30 <- chara .stackedb!
	' archer-main-events <- chara .main_events!
;

: pyro-weapon args( chara )
	<- chara .trait@ "Specialiste" $= if WEAPON_NAPALM else WEAPON_BLOWTORCH then
;

: pyro-formula args( chara )
	gstats{ perk-pyro } 2 * 2 + <- chara .trait@ "Specialiste" $= if 2 + then +
;

: pyro-max args( chara )
	<- chara .trait@ "Specialiste" $= if 25 else 30 then
;

: pyro-main-events ( teid ) args( chara eventid )
	<- chara .party@ 0= if then;
	<- eventid MAIN_EVENT_DRIVING_START = if
		<- chara pyro-weapon <- chara .weapona@ = if 
			<- chara .stackeda@ <- chara pyro-formula <- chara .stackeda!
			<- chara .stackeda@ <- chara pyro-max > if <- chara pyro-max <- chara .stackeda! then
		then;
		<- chara pyro-weapon <- chara .weaponb@ = if 
			<- chara .stackedb@ <- chara pyro-formula <- chara .stackedb!
			<- chara .stackedb@ <- chara pyro-max > if <- chara pyro-max <- chara .stackedb! then
		then;
	then;
;

: pyroperk args( chara )
	"PYROMANE : PERSONNAGE QUI AIME LA FLAMME. " type <- chara .name@ print
	<- chara statmod{ .fireproof }
	crap-weapon <- chara .weapona!
	WEAPON_BLOWTORCH <- chara .weaponb!
	1 <- chara .weapon_nodropb!
	30 <- chara .stackedb!
	' pyro-main-events <- chara .main_events!
;

: NEXT_LEVEL cr$ .. cr$ .. RED .. "NIVAUX SUPERIEUR: " ;
: LOCKED cr$ .. cr$ .. RED .. 
	game.location 0 > if "SERRE ! " else "Deverrouement: debloquer a l'hutte des traits et des talents dans zombo town" then
	
;
// Formerly : cr$ .. "NIVAUX SUPERIEUR: " rbold

: mechaniclevel 
	gstats{ perk-mechanic } 3 >= if
		($ "+ gagnez 2 points dans le mecanique !. . 	+ gagnez 2 points dans la fitness !" $) 2 lvl
	then;
	gstats{ perk-mechanic } 2 >= if
		($ "+ ameliorer votre note de 2 points dans le domaine mecanique.		+ ameliorer votre note d'1 point dans le domaine du fitness." .. NEXT_LEVEL .. "deux points en fitness !" $) 1 lvl
	then;
		($ "+ augmenter de 1 point en mecanique . . 	+ augmenter de 1 point dans la fitness" .. 
		gstats{ perk-mechanic } 1 < if 
			($ LOCKED $) 1 lock
		else
			NEXT_LEVEL .. "deux points pour la mecanique !"
		then $)
;

: athletelevel 
	gstats{ perk-athlete } 3 >= if
		($ "+ gagnez 2 points de fitness !. . 	+ gagnez 2 points de force !" $) 2 lvl
	then;
	gstats{ perk-athlete } 2 >= if
		($ "+ ajouter 2 points au niveau de la fitness !" .. NEXT_LEVEL .. "deux points en force !" $) 1 lvl
	then;
		($ "+ ajouter 1 point en fitness.		+ ajouter 1 point en force" .. NEXT_LEVEL .. "deux points en fitness !" $)
;

: fighterlevel 
	gstats{ perk-fighter } 3 >= if
		($ "+ augmentez votre force de 2 points !	+ augmentez vos points de tir de 2 points !" $) 2 lvl
	then;
	gstats{ perk-fighter } 2 >= if
		($ "+ ajoutez 2 points a votre force !	+ ajoutez 1 point a votre tir" .. NEXT_LEVEL .. "deux points en tir !" $) 1 lvl
	then;
		($ "+ ajouter 1 point a votre force . 	+ ajouter 1 point a votre tir" .. NEXT_LEVEL .. "deux points en force !" $)
;

: surgeonlevel 
	gstats{ perk-surgeon } 3 >= if
		($ "+ ajouter 2 points dans la categorie medicale ! . 		+ ajouter 2 points dans la categorie tir !" $) 2 lvl
	then;
	gstats{ perk-surgeon } 2 >= if
		($ "+ afin de gagner 2 points dans le domaine medical, vous pouvez effectuer les suivantes actions:" .. NEXT_LEVEL .. "deux points en tir !" $) 1 lvl
	then;
		($ "+ un point supplementaire dans la competence medicale.		+ un point supplementaire dans la competence tir." .. NEXT_LEVEL .. "deux points en medecine !" $)
;

: gungineerlevel 
	gstats{ perk-gungineer } 3 >= if
		($ "+ gagnez 2 points en tir!. . 		+ gagnez 2 points en mecanique!" $) 2 lvl
	then;
	gstats{ perk-gungineer } 2 >= if
		($ "+ gagnez 2 points en tir !.			+ gagnez 1 point en mecanique." .. NEXT_LEVEL .. "deux points pour la mecanique !" $) 1 lvl
	then;
		($ "+ ajoutez 1 point a votre score de tir.	+ ajoutez 1 point a votre score mecanique." .. NEXT_LEVEL .. "deux points en tir !" $)
;

: healthcarelevel 
	gstats{ perk-healthcare } 3 >= if
		($ "+ commencez par 7 approvisionnements medicaux !. . 		+ faites gagner 2 points dans la categorie medicale !" $) 2 lvl
	then;
	gstats{ perk-healthcare } 2 >= if
		($ "+ commencez par 5 approvisionnements medicaux. . 		+ gagnez 2 points dans la medicale !" .. NEXT_LEVEL .. "7 approvisionnements medicaux !" $) 1 lvl
	then;
		($ "+ commencez avec 4 approvisionnements medicaux. 	+ obtenez 1 point de competence en medecine." .. NEXT_LEVEL .. "cinq fournisseurs de materiels medicaux, deux d'entre eux sont dans une pharmacie ou un hopital." $)
;


// Pistoleer, shotgunner, rifleman supported for legacy but no longer with level tracking
: pistollevel ($ "+ reussir a marquer trois points a la tire !" $) 2 lvl ;
: shotgunlevel ($ "+ reussir a marquer trois points a la tire !" $) 2 lvl ;
: riflelevel ($ "+ reussir a marquer trois points a la tire !" $) 2 lvl ;

: guncrazylevel 
	gstats{ perk-guncrazy } 3 >= if
		($ "+ Gain 3 points in shooting!
			+ Start with a shotgun, rifle, pistol, and ammo!!" $) 2 lvl
	then;
	gstats{ perk-guncrazy } 2 >= if
		($ "+ Gain 2 points in shooting
			+ Start with a rifle, pistol, and ammo!" .. NEXT_LEVEL .. "tir a trois : trois balles, et un fusil a chasse !" $) 1 lvl
	then;
		($ "+ Gain 1 point in shooting
			+ Start with a pistol and bullets!" .. NEXT_LEVEL .. "deux coups au tir, et un fusil !" $)
;

: carnutlevel 
	gstats{ perk-carnut } 3 >= if
		($ "+ gagnez 3 points dans le mecanique !" $) 2 lvl
	then;
	gstats{ perk-carnut } 2 >= if
		($ "+ ameliorer deux points dans la mecanique" .. NEXT_LEVEL .. "trois points en mecanique !" $) 1 lvl
	then;
		($ "+ obtenez une unite supplementaire dans le domaine mecanique." .. NEXT_LEVEL .. "deux points en mecanique." $)
;

: megabufflevel 
	gstats{ perk-megabuff } 3 >= if
		($ "+ gagnez 4 points de force !" $) 2 lvl
	then;
	gstats{ perk-megabuff } 2 >= if
		($ "+ augmentez votre force de 3 points." .. NEXT_LEVEL .. "quatre points de force !" $) 1 lvl
	then;
		($ "+ augmentez votre force de deux points." .. NEXT_LEVEL .. "trois points de force." $)
;

: ultrafitlevel 
	gstats{ perk-ultrafit } 3 >= if
		($ "+ gagnez 4 points en fitness !" $) 2 lvl
	then;
	gstats{ perk-ultrafit } 2 >= if
		($ "gagnez 3 points en fitness." .. NEXT_LEVEL .. "quatre points dans le fitness!" $) 1 lvl
	then;
		($ "gagnez 2 points de fitness." .. NEXT_LEVEL .. "3 points de fitness" $)
;

: martialartistlevel 
	gstats{ perk-martialartist } 3 >= if
		($ "+ Gain 3 points in fitness, 1 in strength!
			+ Fitness can go 1 point over the usual maximum!" $) 2 lvl
	then;
	gstats{ perk-martialartist } 2 >= if
		($ "+ gagnez 2 points en fitness, 1 point en force." .. NEXT_LEVEL .. "trois entrainements, peuvent maintenant en passer un au-dela du maximum!" $) 1 lvl
	then;
		($ "+ ajouter 1 point dans la categorie fitness, 1 point dans la categorie force." .. NEXT_LEVEL .. "deux points en fitness" $)
;

: bruiserlevel 
	gstats{ perk-bruiser } 3 >= if
		($ "+ faites gagner 3 points de force !" $) 2 lvl
	then;
	gstats{ perk-bruiser } 2 >= if
		($ "+ augmentez votre force de deux points." .. NEXT_LEVEL .. "tres fort, trois fois!" $) 1 lvl
	then;
		($ "+ gagnez 1 point de force." .. NEXT_LEVEL .. "deux points en force" $)
;

: doglevel 
	gstats{ perk-dogfriend } 3 >= if
		($ "+ chance supplementaire de 70% pour qu'un recrutement aleatoire soit un chien." $) 2 lvl
	then;
	gstats{ perk-dogfriend } 2 >= if
		($ "+ chance supplementaire de 35% pour qu'un recrutement aleatoire soit un chien." .. NEXT_LEVEL .. "60% de chances !" $) 1 lvl
	then;
		($ NEXT_LEVEL .. "35% de chances pour les recrutes d'etre un chien." $)
;

: explorerlevel 
	gstats{ perk-explorer } 3 >= if
		($ "couts beaucoup moins en gaz pour refaire une action abl!" $) 2 lvl
	then;
	gstats{ perk-explorer } 2 >= if
		($ "les couts en gaz pour reroller abl sont moins eleves." .. NEXT_LEVEL .. "Moins de gaz beaucoup pour les re-lancements d'abl !" $) 1 lvl
	then;
		($ NEXT_LEVEL .. "Moins de gaz pour les re-essais d'abl" $)
;

: exwrestlerlevel 
	gstats{ perk-exwrestler } 3 >= if
		($ "+ ajouter 2 points dans le fitness !	+ ajouter 1 point dans la force !" $) 2 lvl
	then;
	gstats{ perk-exwrestler } 2 >= if
		($ "+ un point de gain en aptitude physique. . 	+ un point de gain en force !" .. NEXT_LEVEL .. "deux points en fitness !" $) 1 lvl
	then;
		($ "+ ajouter 1 point a la sante physique" .. 
		gstats{ perk-exwrestler } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "une bonne pointe en force !"
		then $)
;

: hiddenpotentiallevel 
	gstats{ perk-hiddenpotential } 3 >= if
		($ "+ ajoutez 1 point dans une competence non selectionnee. . 	+ obtienez 1 point supplementaire au force ou a la condition physique, au hasard !" $) 2 lvl
	then;
	gstats{ perk-hiddenpotential } 2 >= if
		($ "+ obtenez une unite supplementaire dans une autre competence." .. NEXT_LEVEL .. "Un point aleatoire dans la fitness ou la force !" $) 1 lvl
	then;
		gstats{ perk-hiddenpotential } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "1 point dans une autre competence" $)
		then
;

: hagglerlevel 
	gstats{ perk-haggler } 3 >= if
		($ "les peages du bandit sont moins chers." $) 2 lvl
	then;
	gstats{ perk-haggler } 2 >= if
		($ "les frais de passage du bandit sont reduits." .. NEXT_LEVEL .. "Des frais de passage encore plus reduits !" $) 1 lvl
	then;
		gstats{ perk-haggler } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "Les frais de passage du bandit sont reduits." $)
		then
;

: pathfinderlevel 
	gstats{ perk-pathfinder } 3 >= if
		($ "> 75% de chances d'eviter les penalites pour la 2eme journee de marche !" $) 2 lvl
	then;
	gstats{ perk-pathfinder } 2 >= if
		($ "une chance de 60% de ne pas subir la penalite pour le deuxieme jour de marche." .. NEXT_LEVEL .. "60% de chances!" $) 1 lvl
	then;
		gstats{ perk-pathfinder } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "chance de 60% d'eviter la penalite pour le 2eme jour de marche." $)
		then
;

: trademarklevel 
	gstats{ perk-trademark } 3 >= if
		($ "> l'arme par defaut est une machete solide !!" $) 2 lvl
	then;
	gstats{ perk-trademark } 2 >= if
		($ "+ arme par defaut : 50% chance bat en aluminium, 50% couteau de machete." .. NEXT_LEVEL .. "100% de chances pour une machete solide !" $) 1 lvl
	then;
		($ "defaut, l'arme est une batte en aluminium !" ..
		gstats{ perk-trademark } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "50% de chance d'une machette solide !" $)
		then $)
;

: naturalshotlevel 
	gstats{ perk-naturalshot } 3 >= if
		($ "+ faites gagner 2 points dans le tir !		+ le tir peut gagner jusqu'a 2 points de plus que la limite habituelle !" $) 2 lvl
	then;
	gstats{ perk-naturalshot } 2 >= if
		($ "+ ajouter 2 points a la tir. . 		+ le tir peut depasser d'un point le maximum habituel." .. NEXT_LEVEL .. "deux au-dela du maximum!" $) 1 lvl
	then;
		($ "+ augmenter votre competence de tir de 1 point. . 		+ la competence de tir peut atteindre un point supplementaire au-dela du maximum habituel." .. 
		gstats{ perk-naturalshot } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "deux points en tir !"
		then $)
;

: tstclevel 
		($ "- Can't raise fitness!!! " $) ..
	gstats{ perk-tstc } 3 >= if
		($ "L'entrainement au fitness debute a 2 ans!" $) 2 lvl
	then;
	gstats{ perk-tstc } 2 >= if
		($ "L'entrainement au fitness debute a 1." .. NEXT_LEVEL .. "L'agrement de la sante physique monte a 2!" $) 1 lvl
	then;
		gstats{ perk-tstc } 1 < if 
			($ LOCKED $) 1 lock
		else
			($ NEXT_LEVEL .. "A l'aide de la levre au visage." $)
		then
;

: shieldofhopelevel 
	gstats{ perk-shieldofhope } 3 >= if
		($ "vous perdez 2 points de moral chaque fois que vous echappez a la mort !" $) 2 lvl
	then;
	gstats{ perk-shieldofhope } 2 >= if
		($ "vous perdez 3 points de moral chaque fois que vous echappez a la mort." .. NEXT_LEVEL .. "Deux seuls morceaux d'esprit." $) 1 lvl
	then;
		($ "vous perdez 4 points de moral chaque fois que vous evitez la mort." ..
		gstats{ perk-shieldofhope } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "trois points de moral perdus."
		then $)
;

: archerlevel
		($ "faire des fleches pour votre arc entre les missions. " $) ..
	gstats{ perk-archer } 3 >= if
		($ "jusqu'a dix !" $) 2 lvl
	then;
	gstats{ perk-archer } 2 >= if
		($ "jusqu'a 7" .. NEXT_LEVEL .. "Creez 10 fleches !" $) 1 lvl
	then;
		($ "jusqu'a 4" ..
		gstats{ perk-archer } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "Creer 7 fleches"
		then $)
;

: pyrolevel
		($ "rechargez votre torchon a gaz par rapport a vos missions, " $) ..
	gstats{ perk-pyro } 3 >= if
		($ "jusqu'a 8 charges !" $) 2 lvl
	then;
	gstats{ perk-pyro } 2 >= if
		($ "jusqu'a 6 charges" .. NEXT_LEVEL .. "Trouvez huit chargeurs !" $) 1 lvl
	then;
		($ "jusqu'a 4 charges" ..
		gstats{ perk-pyro } 1 < if 
			LOCKED 1 lock
		else
			NEXT_LEVEL .. "Trouvez six charges."
		then $)
;

: specialist-lock
	gstats{ trait-specialist } 1 < if ($ LOCKED $) 1 lock else "" then ;
: travellight-lock
	gstats{ trait-travellight } 1 < if ($ LOCKED $) 1 lock else "" then ;
: grappler-lock
	gstats{ trait-grappler } 1 < if ($ LOCKED $) 1 lock else "" then ;
: herotype-lock
	gstats{ trait-herotype } 1 < if ($ LOCKED $) 1 lock else "" then ;
: animefan-lock
	gstats{ trait-animefan } 1 < if ($ LOCKED $) 1 lock else "" then ;
: soundsleep-lock
	gstats{ trait-soundsleep } 1 < if ($ LOCKED $) 1 lock else "" then ;
: cityseek-lock
	gstats{ trait-cityseek } 1 < if ($ LOCKED $) 1 lock else "" then ;
: tinyeat-lock
	gstats{ trait-tinyeat } 1 < if ($ LOCKED $) 1 lock else "" then ;
: gourmand-lock
	gstats{ trait-gourmand } 1 < if ($ LOCKED $) 1 lock else "" then ;
: phoenix-lock
	gstats{ trait-phoenix } 1 < if ($ LOCKED $) 1 lock else "" then ;
: savant-lock // Rewrote this from fireproof, so uses trait-fireproof
	gstats{ trait-fireproof } 1 < if ($ LOCKED $) 1 lock else "" then ;
: fastlearn-lock
	gstats{ trait-fastlearn } 1 < if ($ LOCKED $) 1 lock else "" then ;

// Definitions

: defperks init

	// Perks
	"Mecanicien" $perk
		($ "Commencez avec une cle de tuyau." .. mechaniclevel $) $desc
		' mechanicperk applyword
		
	"Athlete" $perk
		($ "Une ancienne experience athletique se traduit bien dans la survie aux zomes .. .  ." .. athletelevel $) $desc
		' athleteperk applyword
		
	"Combattant" $perk
		($ "Cette personne a toujours ete un vrai combattant... . 		+ commencez avec une hachette. ." .. fighterlevel $) $desc
		' fighterperk applyword
		
	"Autres" $perk
		($ "A une bonne comprehension de l'anatomie et une main stable assez fine..." .. surgeonlevel $) $desc
		' surgeonperk applyword
		
	"Marqueur de jeu" $perk
		($ "Tres habile avec tout ce qui est mecanique, et les armes sont mecaniques... commencez par un crochet." .. gungineerlevel $) $desc
		' gungineerperk applyword
		
(*	"Casse-cou" $perk
		($ "Commencez avec une pistolet et 30 cartouches. ." .. pistollevel $) $desc
		' pistolperk applyword
		
	"Tirateur de fusil" $perk
		($ "Dans certaines mains, un coup de feu d'arme a feu peut percer une file de zombies. ." .. riflelevel $) $desc
		' rifleperk applyword
		
	"Chasseur a canon" $perk
		($ "Commencez avec un fusil a pompe et 15 cartouches." .. shotgunlevel $) $desc
		' shotgunperk applyword *)

	"Artiste martial" $perk
		($ "Pas d'arme ? pas de souci !. . 		+ commencez par une attaque puissante a deux coups sans arme !!. . 		- refuse de utiliser des armes a feu, chaines et quelques autres !!. ." .. martialartistlevel $) $desc
		' martialartistperk applyword		
		
	"Gros bouchon" $perk
		($ "Une allure lente, des coups durs et resistants !. . 		+ commencez par une attaque non armee plus efficace ! prendrez un coup de plus que d'habitude !. . 		- vitesse de marche ralentie !. ." .. bruiserlevel $) $desc
		' bruiserperk applyword
	
	"Collectionneur d'armes a feu" $perk
		($ "Tu savais conserver tous ces fusils, ca serait utilisateur a un moment donne ! tu en avais tant fait confiance !" .. guncrazylevel $) $desc
		' guncrazyperk applyword
	
	"Dead arcade : jeu mort" $perk
		($ "Il est important de se preparer contre les attaques de zombis, car les gaffeurs en subissent frequemment." .. healthcarelevel $) $desc
		' healthcareperk applyword	
		
	"Roulement de voiture" $perk
		($ "Commencer par posseder une voiture plus agreable. ." .. carnutlevel $) $desc
		' carnutperk applyword
				
	"Amplification megawatt" $perk
		($ "Peut-etre trop gros pour maitriser. pratique pour lever et jeter des meubles lourds !. . 		+ commencez par un tuyau en metal. ." .. megabufflevel $) $desc
		' megabuffperk applyword
		
	"Ultrafit : ultra formation phys" $perk
		($ "Cela a vraiment fait ses effets avec le yoga ! 		+ commencez par quelques barres de granola. ." .. ultrafitlevel $) $desc 
		' ultrafitperk applyword
				
	"Ami de chien" $perk
		($ "Cette personne aime les chiens et a tendance a s'y heurter ! . . 		+ les chiens agressifs peuvent devenir amis. ." .. doglevel $) $desc
		' dogfriendperk applyword

	"Explorateur" $perk
		($ "Certaines personnes possedent vraiment un bon sens de l'orientation lorsqu'elles conduisent !. . 		+ obtiennent une option supplementaire de localisation pendant les evenements always be looting !. ." .. explorerlevel $) $desc
		' explorerperk applyword
		
	"Ancien lutteur" $perk
		($ "Avait la premiere place avant un tragique accident au ring !. . 		+ prenez en main les zombies a terre, puis jetez ou jetez dessus !. . 		- lourd penalite sur votre habilete de tir maximum.. ." .. exwrestlerlevel $) $desc
		' exwrestlerperk applyword
		
	"Potentiel cache" $perk
		($ "Cela semble banal, mais avec une bonne formation, il peut depasser les autres !. . 		+ obtiennes un point au hasard entre la force ou la fitness. il peut ensuite aller au-dela du maximum !. ." .. hiddenpotentiallevel $) $desc
		' hiddenpotentialperk applyword
	
	"Vendeur le plus effront" $perk
		($ "Vendez efficacement et garder votre niche de vente de produits d'armes !. . 		+ vous recevrez de 1 a 8 aliments supplementaires lors de la vente aupres d'un acheteur d'armes, en fonction du prix initial. .  . 		+ pas de malus de morale lorsque vous payez les taxes des bandits avec des aliments !" .. hagglerlevel $) $desc
		' hagglerperk applyword
	
	"Chemin de geant" $perk
		($ "Experience randonnee evite les horreurs forestieres !. . 		+ retire un evenement de penalite du jour initial de marche chaque fois que tu perds la voiture !. ." .. pathfinderlevel $) $desc
		' pathfinderperk applyword
	
	"Arme de marque deposee" $perk
		($ "S'affirmer dans la foule, avec une arme signe!. . 		+ demarre avec une arme speciale, en fonction du trait!. . 		- ne peut pas y laisser cette arme, meme a la mort.. ." .. trademarklevel $) $desc
		' trademarkperk applyword
		
	"Prise naturelle" $perk
		($ "Excellente a la tire ! il manque peut-etre encore de l'entrainement et peut-etre meme d'une arme et des munitions !" .. naturalshotlevel $) $desc
		' naturalshotperk applyword
	
	"LES JEUX SPORTIFS" $perk
		($ "Definitely too swole! REFUSES to do cardio!
		+ Starts at full strength!
		+ May train strength 6 times over the maximum!!!
		" .. tstclevel $) $desc
		' tstcperk applyword
		
	"Bouclier de l'espoir" $perk
		($ "Continue a avancer avec une volonte infatigable !. . 		+ protege contre des coups mortels si le moral est superieur :" .. shieldofhopelevel $) $desc
		' shieldofhopeperk applyword
		
	"Fabriquer des fleches et un arc long." $perk
		($ "Commencez par une fleche tueuse silencieuse, 30 fleches et deux points de force !. . 		- vous ne pouvez pas laisser tomber cette arme a arc, meme en mourant.. ." .. archerlevel $) $desc
		' archerperk applyword
		
	"Pyromane" $perk
		($ "Les zombies sont extremement inflammables !. . 		+ commencez par une bougie de soudure, et une protection contre le feu !. . 		- vous ne pouvez pas laisser tomber ce soudure, meme apres votre mort.. ." .. pyrolevel $) $desc
		' pyroperk applyword

// TEST MAX PERKS
(*

	32 for

	"TEST" i .. $perk
		($ "Commencez par une fleche tueuse silencieuse, 30 fleches et deux points de force !. . 		- vous ne pouvez pas laisser tomber cette arme a arc, meme en mourant.. ." .. archerlevel $) $desc
		' archerperk applyword
	next
*)
		
	// "Guerrier barbare"
	// "Champion de coup de circuit"
	// "Feroce"
			
	// Traits
	"Jour de l'amerique du nord du canada" $trait
		"Une combinaison de grande perception et d'extreme pessimisme permet a quelqu'un de se preparer au pire ! . . 		+ peut identifier des traits chez les nouveaux recrutes. . 		+ est toujours sur la garde pour la danger. . 		- pouvait etre vraiment grommelle" $desc
		' paranoidtrait applyword
	"Inconscient" $trait
		"Ce point de vue exceptionnel sur la vie associe a une faible sensibilite permet de realiser des merveilles en niant !. . 		+ peut ignorer le desespoir . 		- mauvaises jetees pour la perception et l'intelligence" $desc
		' oblivtrait applyword
	"Charmant/charmante" $trait
		"Cette personne attire les gens par son attitude agreable et sa charisma pure. elle parvient a s'introduire gratuitement ou a sortir de situations difficiles grace a ses facultes de charme. cependant, elle ne peut pas en charmer la sortie de tous les problemes." $desc
		' charmtrait applyword
	"Genante" $trait
		"This person thinks they're soooooo cool. But they're not! They're just annoying!
		+ Tell people to 'Cool it'
		- Anger pretty much everybody" $desc
		' gratingtrait applyword
	"Voleur" $trait
		"Etre infidele peut etre une ressource dans l'apres-apocalypses... . 		+ escroquer autrui. . 		- escroquer le groupe. . 		- temps d'explosion" $desc
		' bandittrait applyword
	"Passe mysterieux" $trait
		"This person... has a mysterious past......
		+ 3 points given to fight skills at random
		- Randomized and extreme personality!" $desc
		' mysterytrait applyword
	"Exercice pratique" $trait
		"Avantages : dispose d'une grande variete de competences utiles, mais un peu ennuyeux... ." $desc
		' practicaltrait applyword
	"Chassis." $trait
		"Commencement satisfaisant dans les competences de battage de zombies, avec une personnalite non descriptive... . .  + 2 points supplementaires de force !. .  + 2 points supplementaires de condition physique !. .  - personnalite peu interessante" $desc
		' warriortrait applyword
	"Courageusement affute" $trait
		"La personne a un mauvais temperament ! l'agression peut etre utile... . 		+ 1 point supplementaire en force. . 		- mauvaise humeur a cause d'une faible composure. . 		+ le mauvais temperament peut parfois etre benefique" $desc
		' fiercetrait applyword
	"Sang-froid sous le feu" $trait
		"Tranquille et apaise. utilise avec efficacite lors d'une attaque en masse !		+ tres tranquille a cause de sa haute composure.		+ 1 point supplementaire dans le tir" $desc
		' calmtrait applyword
	"Nourrissage." $trait
		"Pense toujours a autrui ! quelque chose de plus pour la medecine ! une excellente attitude. . 		+ peut aller un peu au-dela du maximum pour la competence medicale !!. . 		- peut etre une acte" $desc
		' nurturetrait applyword
	"Genialement inventif." $trait
		"> tres a l'aise avec les machines, comme des voitures...  + deux points supplementaires mecanique !  grande verification d'esprit!. . 	+ peut aller au-dela de la limite pour la competence mecanique!!. . 		- pourrait necessiter plus de pratique pour reparer une voiture." $desc
		' inventtrait applyword
	"Plaintif accablant" $trait
		"Ce type est assez fragile. mais excellent dans la fuite !. . 	+ bonus de vitesse de course !. . 		- un coup de moins qu'habituellement. . 		- mauvaise humeur." $desc
		' frantictrait applyword
	"Type resilient" $trait
		"Tres difficile ! la musculature ! pas un stratege a long terme... . 		+ un coup supplementaire que la normale . . 		- mauvais lancers de jets intellectuels" $desc
		' toughtrait applyword
	"FOURBISSEZ !" $trait
		"Destroy all zombies! Never retreat! Oh no, I got bit!
		+ 4 points to strength, fitness, and shooting!!
		+ Can go one over the maximum for the above stats!!!
		- Super low personality stats! Dies in one bite!!" $desc
		' berserktrait applyword
	"Politement" $trait
		"Avant que le monde se fasse fou, gardait ses valeurs anciennes. cela est agreable et inquietant... . 		+ des statistiques de loyalty et de personnalite elevees !. . 		+ 1 point a la competence medicale et mecanique !!. . 		- une penalite morale permanente et significative !!" $desc
		' civiltrait applyword
	"Son dormeur" $trait
		($ "Sommeil a tout moment, n'importe ou. #1 au meilleur niveau pour dormir !. . 		+ un sommeil surhumain ! necessite tres peu de repos.. . 		+ jamais atteint l'etat etere, jamais." .. soundsleep-lock $) $desc
		' soundsleeptrait applyword
	"Gourmet" $trait
		($ "Apprecie vraiment beaucoup les anciennes boites de conserves !. . 		+ une repas complete retablit 1 point de moralite supplementaire de ce personnage a plein, jusqu'a atteindre le maximum! gagne un point supplementaire de point de vie maximal !. . 		- mange un peu plus, 3 aliments au lieu de 2. manque gravement de nourriture ralentit la baisse du moral!" .. gourmand-lock $) $desc
		' gourmandtrait applyword
	"Recherche de ville" $trait
		($ "Beni" .. cityseek-lock $) $desc
		' cityseektrait applyword
	"Voyager legerement" $trait
		($ "Portez moins pour courir un peu plus vite !. . 		+ bonus de vitesse de course !. . 		+ 1 point supplementaire en aptitude physique !. . 		- ne pouvez porter qu'une paire d'armes a la fois !" .. travellight-lock $) $desc
		' travellighttrait applyword
	"Type heros" $trait
		($ "Je serai toujours votre gardien de corps. bref, une fois... .		+ sauve un equipier de la mort dans un evenement textuel !. . 		- n'effectue cela qu'une seule fois par partie !. . 		+ demarre avec une loyaute maximale !" .. herotype-lock $) $desc
		' herotypetrait applyword
	"Mangeur de petite taille" $trait
		($ "Mange beaucoup moins qu'habituellement ! prend des bouchees minimes !. . 	+ une repas complet necessite 1 aliment !!. . 	- a subit une penalite de 2 points pour sa force maximale !. . 	- a subit une penalite de 1 point pour sa fitness maximale." .. tinyeat-lock $) $desc
		' tinyeattrait applyword	
	"Un fan de l'anime." $trait
		($ "Ceci ressemble a mes anime zombies !. . 		+ l'arme est remplacee par une katana surpuissante.. . 		- la katana ne peut etre abandonnee, meme en cas de mort.. . 		- avertissement : faites attention pour ne pas avoir un moral plein ! animes dangereux !" .. animefan-lock $) $desc
		' animefantrait applyword	
	"Specialiste" $trait
		($ "Vous etes un peu trop obsede par une methode particuliere de ecrasement de zombies... . 		+ de 2 points supplementaires pour la force, la fitness et le tir. . 		+ vous pouvez aller au-dela du maximum pour les statistiques ci-dessus!!. . 		- vous ne pouvez porter qu'un arme a la fois!!" .. specialist-lock $) $desc
		' spectrait applyword
	"Ultrafit : ultra formation phys" $trait
		($ "Si un zombie tombe, vous pouvez le porter !. . 		+ lancer ou frapper vos zombies portes !. . 		- personnalite ennuyeuse" .. grappler-lock $) $desc
		' grapplertrait applyword
	"Phenix" $trait
		($ "*la phoenix s'eleve des cendres !*. . 		+ s'auto-resurrecte a la mort, en pleine sante!!. . 		+ incombustible! se jette dans les flammes!!. . 		- perd definitivement le trait apres la premiere mort!" .. phoenix-lock $) $desc
		' phoenixtrait applyword
	"Appareil savant" $trait
		($ "Toujours destine aux grandes choses ! jamais pas preoccupe de le travailler pour cela... . 		+ obtient une prime de 1 point supplementaire au maximum pour toutes les competences!. . 		- prend un coup de moins que la norme!. . 		- pose une penalite de 2 points de morale maximale !" .. savant-lock $) $desc
		' savanttrait applyword
	"Apprenant rapide" $trait
		($ "Commence bas, mais apprend rapidement de nouvelles competences !. . 		+ obtient double la quantite de competences de tir, mecanique et medicale !. . 		- chaque bonus de croissance arrete apres qu'une competence atteigne 4 points" .. fastlearn-lock $) $desc
		' fastlearntrait applyword
	
		
	// "Son dormeur"
	// "Gourmet"
	// "Recherche de ville"
	// "Voyager legerement"
	
	// "Mangeur de petite taille"
	// "Un fan de l'anime."
	// "Specialiste"
	// "Ultrafit : ultra formation phys"
	// "Phenix"
	// ""
	// ""
	// ""
;

defperks

}
